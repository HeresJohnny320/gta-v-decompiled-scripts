// listener's C4 decompiler

void main() {
    l_2 = 1;
    l_3 = 134;
    l_4 = 134;
    l_5 = 1;
    l_6 = 1;
    l_7 = 1;
    l_8 = 134;
    l_9 = 1;
    l_A = 12;
    l_B = 12;
    l_E = 0.001;
    l_11 = "NULL";
    l_14 = 0.0;
    l_18 = -0.0375;
    l_19 = 0.17;
    l_1D = 80.0;
    l_1E = 140.0;
    l_1F = 180.0;
    l_22 = 3;
    l_28 = ${blimp};
    l_2B = ${s_m_m_pilot_02};
    l_2D = ${buzzard};
    if (CAM::IS_SCREEN_FADED_OUT()) {
        CAM::DO_SCREEN_FADE_IN(500);
    }
    if (PLAYER::_C968670BFACE42D9(18)) {
        sub_715();
    }
    PLAYER::SET_MAX_WANTED_LEVEL(0);
    sub_680();
    sub_603();
    sub_5ad();
    sub_489();
    while (1) {
        UI::SET_TEXT_COLOUR(255, 255, 255, 255);
        UI::SET_TEXT_SCALE(0.75, 0.9);
        UI::SET_TEXT_WRAP(0.0, 1.0);
        sub_471(0.05, 0.63, "PLCHLD_MISS", 0);
        UI::SET_TEXT_COLOUR(255, 255, 255, 255);
        UI::SET_TEXT_SCALE(0.4, 0.45);
        UI::SET_TEXT_WRAP(0.0, 1.0);
        sub_471(0.05, 0.7, "PLCHLD_PASS", 0);
        sub_113();
        SYSTEM::WAIT(0);
    }
}

void sub_113() {
    if (ENTITY::DOES_ENTITY_EXIST(l_27)) {
        if ((ENTITY::IS_ENTITY_DEAD(l_27) || (ENTITY::GET_ENTITY_HEALTH(l_27) <= 0)) || (VEHICLE::GET_VEHICLE_ENGINE_HEALTH(l_27) <= 0.0)) {
            sub_451(&l_29);
            if (VEHICLE::IS_PLAYBACK_GOING_ON_FOR_VEHICLE(l_27)) {
                VEHICLE::STOP_PLAYBACK_RECORDED_VEHICLE(l_27);
            }
            if (l_2E == 1) {
                v_2/*{3}*/ = ENTITY::GET_ENTITY_COORDS(l_27, 0);
                sub_35d(v_2);
            }
            if (l_2E == 1) {
                sub_31e(&l_2A);
                sub_238(&l_27);
            } else { 
                sub_1e9(&l_2A, 1, 0, 1);
                sub_1b2(&l_27);
            }
        } else if (VEHICLE::IS_PLAYBACK_GOING_ON_FOR_VEHICLE(l_27)) {
            VEHICLE::SET_PLAYBACK_SPEED(l_27, 0.25);
        }
    }
}

void sub_1b2(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        ENTITY::IS_ENTITY_DEAD(a_0);
        if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(a_0) && ENTITY::_DDE6DF5AE89981D2(a_0, 1)) {
            ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(a_0);
        }
    }
}

void sub_1e9(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!PED::IS_PED_INJURED(a_0)) {
            ENTITY::SET_ENTITY_LOAD_COLLISION_FLAG(a_0, 0);
            if (a_3 == 0) {
                AI::CLEAR_PED_SECONDARY_TASK(a_0);
            }
            PED::SET_PED_KEEP_TASK(a_0, a_1);
            if (a_2 == 1) {
                PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(a_0, 0);
            }
        }
        ENTITY::SET_PED_AS_NO_LONGER_NEEDED(a_0);
    }
}

void sub_238(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(a_0)) {
            ENTITY::SET_ENTITY_AS_MISSION_ENTITY(a_0, 1, 0);
        }
        if (sub_2f4(a_0)) {
            if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(a_0) && ENTITY::_DDE6DF5AE89981D2(a_0, 1)) {
                if (sub_2d4(PLAYER::PLAYER_PED_ID())) {
                    if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), a_0, 0)) {
                        ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(a_0);
                        return ;
                    }
                }
                VEHICLE::DELETE_VEHICLE(a_0);
            }
        } else { 
            if (sub_2d4(PLAYER::PLAYER_PED_ID())) {
                if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), a_0, 0)) {
                    ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(a_0);
                    return ;
                }
            }
            VEHICLE::DELETE_VEHICLE(a_0);
        }
    }
}

auto sub_2d4(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!ENTITY::IS_ENTITY_DEAD(a_0)) {
            return 1;
        }
    }
    return 0;
}

auto sub_2f4(auto a_0) {
    if (sub_2d4(a_0)) {
        if (VEHICLE::IS_VEHICLE_DRIVEABLE(a_0, 0)) {
            if (!FIRE::IS_ENTITY_ON_FIRE(a_0)) {
                return 1;
            }
        }
    }
    return 0;
}

void sub_31e(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!ENTITY::IS_ENTITY_DEAD(a_0)) {
            ENTITY::SET_ENTITY_LOAD_COLLISION_FLAG(a_0, 0);
        }
        if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(a_0)) {
            ENTITY::SET_ENTITY_AS_MISSION_ENTITY(a_0, 1, 0);
        }
        PED::DELETE_PED(a_0);
    }
}

void sub_35d(auto a_0, auto a_1, auto a_2) {
    v_6 = 12;
    asm .vardef<F> 7, "[{\"offset\":0,\"value\":12}]"
    v_7[0/*3*/]/*{3}*/ = {5.0, 0.0, 0.0 };
    v_7[1/*3*/]/*{3}*/ = {0.0, 5.0, 0.0 };
    v_7[2/*3*/]/*{3}*/ = {0.0, 0.0, 5.0 };
    v_7[3/*3*/]/*{3}*/ = {5.0, 5.0, 0.0 };
    v_7[4/*3*/]/*{3}*/ = {5.0, 0.0, 5.0 };
    v_7[5/*3*/]/*{3}*/ = {0.0, 5.0, 5.0 };
    v_7[6/*3*/]/*{3}*/ = {20.0, 0.0, 0.0 };
    v_7[7/*3*/]/*{3}*/ = {0.0, 20.0, 0.0 };
    v_7[8/*3*/]/*{3}*/ = {0.0, 0.0, 20.0 };
    v_7[9/*3*/]/*{3}*/ = {20.0, 20.0, 0.0 };
    v_7[10/*3*/]/*{3}*/ = {20.0, 0.0, 20.0 };
    v_7[11/*3*/]/*{3}*/ = {0.0, 20.0, 20.0 };
    FIRE::ADD_EXPLOSION(a_0, 8, 1.0, 1, 0, 0x3f800000);
    for (v_5 = 0; v_5 <= (v_6 - 1); v_5 += 1) {
        FIRE::ADD_EXPLOSION(a_0 + v_7[v_5/*3*/], 8, 1.0, 1, 0, 0x3f800000);
    }
}

void sub_451(auto a_0) {
    if (UI::DOES_BLIP_EXIST(a_0)) {
        UI::SET_BLIP_ROUTE(a_0, 0);
        UI::REMOVE_BLIP(a_0);
    }
}

void sub_471(auto a_0, auto a_1, auto a_2, auto a_3) {
    UI::_SET_TEXT_ENTRY(a_2);
    UI::_DRAW_TEXT(a_0, a_1, a_3);
}

void sub_489() {
    sub_1b2(&l_2C);
    STREAMING::REQUEST_MODEL(l_2D);
    while (!STREAMING::HAS_MODEL_LOADED(l_2D)) {
        SYSTEM::WAIT(0);
    }
    if (sub_2f4(l_27)) {
        l_2C = VEHICLE::CREATE_VEHICLE(l_2D, ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(l_27, 50.0, 0.0, 15.0), 0.0, 1, 1);
        VEHICLE::SET_HELI_BLADES_FULL_SPEED(l_2C);
        sub_523(l_2C, l_27);
        if (sub_2d4(PLAYER::PLAYER_PED_ID())) {
            PED::SET_PED_INTO_VEHICLE(PLAYER::PLAYER_PED_ID(), l_2C, -1);
            CAM::SET_GAMEPLAY_CAM_RELATIVE_PITCH(0.0, 0x3f800000);
            CAM::SET_GAMEPLAY_CAM_RELATIVE_HEADING(0.0);
            GAMEPLAY::CLEAR_AREA(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), 500.0, 1, 0, 0, 0);
        }
    }
    STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(l_2D);
}

void sub_523(auto a_0, auto a_1) {
    v_4 = sub_548(ENTITY::GET_ENTITY_COORDS(a_0, 1), ENTITY::GET_ENTITY_COORDS(a_1, 1), 1);
    ENTITY::SET_ENTITY_HEADING(a_0, v_4);
}

auto sub_548(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    v_A = a_3 - a_0;
    v_B = a_3._f1 - a_0._f1;
    if (v_B != 0.0) {
        v_9 = GAMEPLAY::ATAN2(v_A, v_B);
    } else if (v_A < 0.0) {
        v_9 = -90.0;
    } else { 
        v_9 = 90.0;
    }
    if (a_6 == 1) {
        v_9 *= -1.0;
        if (v_9 < 0.0) {
            v_9 += 360.0;
        }
    }
    return v_9;
}

void sub_5ad() {
    sub_451(&l_29);
    if (sub_2f4(l_27)) {
        l_29 = sub_5ce(l_27, 1, 5);
    }
}

auto sub_5ce(auto a_0, auto a_1, auto a_2) {
    v_5 = 0;
    if (sub_2d4(a_0)) {
        v_5 = UI::ADD_BLIP_FOR_ENTITY(a_0);
        UI::SET_BLIP_AS_FRIENDLY(v_5, a_1);
        UI::SET_BLIP_PRIORITY(v_5, a_2);
        UI::SET_BLIP_SCALE(v_5, 1.0);
    }
    return v_5;
}

void sub_603() {
    STREAMING::REQUEST_MODEL(l_2B);
    while (!STREAMING::HAS_MODEL_LOADED(l_2B)) {
        SYSTEM::WAIT(0);
    }
    if (sub_2f4(l_27)) {
        l_2A = PED::CREATE_PED_INSIDE_VEHICLE(l_27, 26, l_2B, -1, 1, 1);
        if (sub_2d4(l_2A)) {
            PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(l_2A, 1);
            PED::SET_PED_CONFIG_FLAG(l_2A, 118, 0);
            PED::SET_PED_CONFIG_FLAG(l_2A, 29, 0);
            PED::SET_PED_CONFIG_FLAG(l_2A, 116, 0);
        }
    }
    if (sub_2f4(l_27)) {
        VEHICLE::START_PLAYBACK_RECORDED_VEHICLE(l_27, 1, "Blimp_City", 1);
    }
    STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(l_2B);
}

void sub_680() {
    if (sub_2f4(l_27) && VEHICLE::IS_PLAYBACK_GOING_ON_FOR_VEHICLE(l_27)) {
        VEHICLE::STOP_PLAYBACK_RECORDED_VEHICLE(l_27);
    }
    sub_451(&l_29);
    sub_31e(&l_2A);
    sub_238(&l_27);
    STREAMING::REQUEST_MODEL(l_28);
    VEHICLE::REQUEST_VEHICLE_RECORDING(1, "Blimp_City");
    while ((!STREAMING::HAS_MODEL_LOADED(l_28)) || (!VEHICLE::HAS_VEHICLE_RECORDING_BEEN_LOADED(1, "Blimp_City"))) {
        SYSTEM::WAIT(0);
    }
    v_2/*{3}*/ = VEHICLE::_F0F2103EFAF8CBA7(VEHICLE::GET_VEHICLE_RECORDING_ID(1, "Blimp_City"), 0.0);
    l_27 = VEHICLE::CREATE_VEHICLE(l_28, VEHICLE::_92523B76657A517D(VEHICLE::GET_VEHICLE_RECORDING_ID(1, "Blimp_City"), 0.0), v_2._f2, 1, 1);
    STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(l_28);
}

void sub_715() {
    if (sub_2f4(l_27) && VEHICLE::IS_PLAYBACK_GOING_ON_FOR_VEHICLE(l_27)) {
        VEHICLE::STOP_PLAYBACK_RECORDED_VEHICLE(l_27);
    }
    VEHICLE::REMOVE_VEHICLE_RECORDING(1, "Blimp_city");
    sub_451(&l_29);
    sub_1e9(&l_2A, 1, 0, 1);
    sub_1b2(&l_27);
    sub_1b2(&l_2C);
    STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(l_2B);
    STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(l_28);
    STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(l_2D);
    PLAYER::SET_MAX_WANTED_LEVEL(6);
    SCRIPT::TERMINATE_THIS_THREAD();
}