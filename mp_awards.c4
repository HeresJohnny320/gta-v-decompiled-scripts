// listener's C4 decompiler

void main() {
    l_2 = 1;
    l_3 = 134;
    l_4 = 134;
    l_5 = 1;
    l_6 = 1;
    l_7 = 1;
    l_8 = 134;
    l_9 = 1;
    l_A = 12;
    l_B = 12;
    l_E = 0.001;
    l_11 = "NULL";
    l_16 = 80.0;
    l_17 = 140.0;
    l_18 = 180.0;
    l_1B = 0.0;
    l_1F = -0.0375;
    l_20 = 0.17;
    l_23 = 3;
    l_27 = 1;
    l_28 = 65;
    l_29 = 49;
    l_2A = 64;
    l_56 = (0.05 + 0.275) - 0.009999999999999998;
    if (PLAYER::_C968670BFACE42D9(4)) {
        UI::OBJECT_DECAL_TOGGLE(0x3b5c32ae);
        UI::OBJECT_DECAL_TOGGLE(0x556e9f30);
        UI::OBJECT_DECAL_TOGGLE(0x4156a8b9);
        UI::OBJECT_DECAL_TOGGLE(0x29874efc);
        UI::OBJECT_DECAL_TOGGLE(0x318c3672);
        UI::OBJECT_DECAL_TOGGLE(0x9075c0be);
        UI::OBJECT_DECAL_TOGGLE(0x3426caf4);
        UI::OBJECT_DECAL_TOGGLE(0x30b89162);
        UI::OBJECT_DECAL_TOGGLE(0x14211b54);
        UI::OBJECT_DECAL_TOGGLE(0x62ad59a5);
        UI::OBJECT_DECAL_TOGGLE(0x83a151cb);
        UI::OBJECT_DECAL_TOGGLE(0x9675aabd);
        UI::_C78E239AC5B2DDB9(0, -1, 0);
        g_1406B3 = 0;
        SCRIPT::TERMINATE_THIS_THREAD();
    }
    UI::_2162C446DFDF38FD(1);
    GAMEPLAY::NETWORK_SET_SCRIPT_IS_SAFE_FOR_NETWORK_GAME();
    g_1406B3 = 1;
    v_2 = 0;
    v_3 = 1;
    g_143270._f1 = 0;
    g_143270._f3 = 0;
    g_143270._f5 = 0;
    g_143270._f7 = 0;
    g_143270._f6 = 0;
    sub_bf21(&g_144069);
    sub_bf12(0, &g_144069);
    sub_bf04(&g_144069);
    sub_be97(&g_143D12);
    sub_be81(-1, &g_143D12);
    sub_be73(&g_143D12);
    sub_be65(&g_143D12);
    sub_bddc();
    UI::_DD564BDD0472C936(0x3426caf4);
    GRAPHICS::_61BB1D9B3A95D802(1);
    switch (l_CE) {
    case 3:
        while (v_2 == 0) {
            SYSTEM::WAIT(0);
            if (v_3 == 1) {
                if (v_4 == 0) {
                    if (UI::_3BAB9A4E4F2FF5C7()) {
                        UI::_EC9264727EEC0F28();
                        g_143270._f7 = 0;
                        GRAPHICS::_AB58C27C2E6123C6("MENU_SHIFT_DEPTH");
                        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(1);
                        GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                        GRAPHICS::_AB58C27C2E6123C6("SET_COLUMN_FOCUS");
                        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
                        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_BOOL(1);
                        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_BOOL(1);
                        GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                        v_4 = 1;
                    }
                }
            }
            if ((g_143D12._f1D5 == 0) && (g_143D12._f1D6 == 0)) {
                if (CONTROLS::IS_CONTROL_JUST_PRESSED(2, 201)) {
                    if (v_3 == 0) {
                        v_3 = 1;
                        UI::_DD564BDD0472C936(0x3426caf4);
                        UI::_DD564BDD0472C936(${navigating_content});
                        UI::OBJECT_DECAL_TOGGLE(0x30b89162);
                        UI::ENABLE_DEATHBLOOD_SEETHROUGH(0);
                        sub_bf12(g_143270._f6, &g_144069);
                        sub_bf04(&g_144069);
                        GRAPHICS::_AB58C27C2E6123C6("MENU_SHIFT_DEPTH");
                        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(1);
                        GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                        sub_bdcb();
                    } else { 
                        switch (g_143270._f7) {
                        case 0:
                            GRAPHICS::_AB58C27C2E6123C6("MENU_SHIFT_DEPTH");
                            GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(1);
                            GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                            UI::_DD564BDD0472C936(0x14211b54);
                            UI::_DD564BDD0472C936(0x30b89162);
                            UI::OBJECT_DECAL_TOGGLE(0x3426caf4);
                            UI::ENABLE_DEATHBLOOD_SEETHROUGH(0);
                            g_143270._f7 = 1;
                            sub_bdaa(&g_143D12, &g_143270);
                            sub_be81(sub_bc40(&g_143270._f1, &g_143270._f3, g_143270._f5, 188), &g_143D12);
                            sub_be73(&g_143D12);
                            sub_be65(&g_143D12);
                            sub_bb77(&g_143D12, &g_143270);
                            break;
                        }
                    }
                }
            }
            if (CONTROLS::IS_CONTROL_JUST_PRESSED(2, 202)) {
                if (v_3 == 0) {
                    AUDIO::PLAY_SOUND_FRONTEND(-1, "CANCEL", "HUD_FRONTEND_DEFAULT_SOUNDSET", 1);
                    UI::_14621BB1DF14E2B2();
                    v_2 = 1;
                } else { 
                    switch (g_143270._f7) {
                    case 0:
                        AUDIO::PLAY_SOUND_FRONTEND(-1, "BACK", "HUD_FRONTEND_DEFAULT_SOUNDSET", 1);
                        GRAPHICS::_AB58C27C2E6123C6("MENU_SHIFT_DEPTH");
                        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(-1);
                        GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                        UI::OBJECT_DECAL_TOGGLE(0x30b89162);
                        UI::OBJECT_DECAL_TOGGLE(0x3426caf4);
                        UI::ENABLE_DEATHBLOOD_SEETHROUGH(0);
                        g_143270._f1 = 0;
                        g_143270._f3 = 0;
                        sub_bf12(-1, &g_144069);
                        sub_bf04(&g_144069);
                        sub_bdcb();
                        v_3 = 0;
                        break;
                    case 1:
                        AUDIO::PLAY_SOUND_FRONTEND(-1, "CANCEL", "HUD_FRONTEND_DEFAULT_SOUNDSET", 1);
                        GRAPHICS::_AB58C27C2E6123C6("MENU_SHIFT_DEPTH");
                        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(-1);
                        GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                        UI::OBJECT_DECAL_TOGGLE(0x14211b54);
                        UI::OBJECT_DECAL_TOGGLE(0x30b89162);
                        UI::_DD564BDD0472C936(0x3426caf4);
                        UI::ENABLE_DEATHBLOOD_SEETHROUGH(0);
                        sub_be81(-1, &g_143D12);
                        sub_be73(&g_143D12);
                        sub_be65(&g_143D12);
                        sub_bdcb();
                        g_143270._f7 = 0;
                        break;
                    }
                }
            }
            GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT("MPAwards1", 0);
            GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT("MPAwards2", 0);
            GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT("MPAwards3", 0);
            GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT("MPAwards4", 0);
            GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT("MPAwards5", 0);
            GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT("MPAwards6", 0);
            GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT("MPTShirtAwards2", 0);
            GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT("MPTshirtAwardLTS", 0);
            if (!UI::HAS_ADDITIONAL_TEXT_LOADED(8)) {
                UI::REQUEST_ADDITIONAL_TEXT("MPAWD", 8);
            }
            sub_e5c(&g_143270);
            if (v_3 == 1) {
                sub_4cf(&g_143D12, &g_143270, &l_CC);
            }
        }
        break;
    case 0:
        break;
    case 1:
        break;
    case 2:
        break;
    }
    GRAPHICS::_61BB1D9B3A95D802(4);
    sub_4b6();
    GRAPHICS::SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(&v_5);
    GRAPHICS::SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(&v_6);
    UI::_14621BB1DF14E2B2();
    g_1406B3 = 0;
    UI::_C78E239AC5B2DDB9(0, -1, 0);
    while (1) {
        SYSTEM::WAIT(0);
    }
}

void sub_4b6() {
    GRAPHICS::_AB58C27C2E6123C6("SET_DATA_SLOT_EMPTY");
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(1);
    GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
}

void sub_4cf(auto a_0, auto a_1, auto a_2) {
    if ((!sub_e50(a_2)) || (sub_e50(a_2) && sub_df2(a_2, 250, 0))) {
        v_5 = 1;
    }
    if ((CONTROLS::IS_CONTROL_PRESSED(2, 187) || sub_c8f(187, &g_1441E9._f3C1, 1)) && v_5) {
        sub_c82(a_2);
        sub_c3d(a_2, 0, 0);
        GAMEPLAY::SET_BIT(&a_0._f1D0, 0);
    }
    if ((CONTROLS::IS_CONTROL_PRESSED(2, 188) || sub_c8f(188, &g_1441E9._f3C1, 1)) && v_5) {
        sub_c82(a_2);
        sub_c3d(a_2, 0, 0);
        GAMEPLAY::SET_BIT(&a_0._f1D0, 1);
    }
    if (((CONTROLS::IS_CONTROL_PRESSED(2, 189) || CONTROLS::IS_CONTROL_PRESSED(2, 241)) || sub_c8f(189, &g_1441E9._f3C1, 1)) && v_5) {
        sub_c82(a_2);
        sub_c3d(a_2, 0, 0);
        GAMEPLAY::SET_BIT(&a_0._f1D0, 2);
    }
    if (((CONTROLS::IS_CONTROL_PRESSED(2, 190) || CONTROLS::IS_CONTROL_PRESSED(2, 242)) || sub_c8f(190, &g_1441E9._f3C1, 1)) && v_5) {
        sub_c82(a_2);
        sub_c3d(a_2, 0, 0);
        GAMEPLAY::SET_BIT(&a_0._f1D0, 3);
    }
    if (GAMEPLAY::IS_BIT_SET(a_0._f1D0, 1)) {
        GAMEPLAY::CLEAR_BIT(&a_0._f1D0, 1);
        switch (a_1._f7) {
        case 0:
            AUDIO::PLAY_SOUND_FRONTEND(-1, "NAV_UP_DOWN", "HUD_FRONTEND_DEFAULT_SOUNDSET", 1);
            a_1._f6 -= 1;
            a_1._f5 = 0;
            a_1._f1 = 0;
            a_1._f3 = 0;
            if ((sub_c32() == 0) || (sub_c27() == 0)) {
            } else if (a_1._f6 > 7) {
                a_1._f6 = 0;
            }
            switch (sub_bda(a_1, 0)) {
            case 9:
                if (a_1._f6 < 0) {
                    a_1._f6 = 7;
                }
                break;
            }
            sub_bf12(a_1._f6, &g_144069);
            sub_bf04(&g_144069);
            a_0._f1D5 = 1;
            sub_b9d(&a_0._f1D1, 0, 0);
            break;
        case 1:
            AUDIO::PLAY_SOUND_FRONTEND(-1, "NAV_LEFT_RIGHT", "HUD_FRONTEND_DEFAULT_SOUNDSET", 1);
            a_1._f3 -= 1;
            switch (sub_bda(a_1, 0)) {
            case 9:
                if (a_1._f3 < 0) {
                    a_1._f3 = 2;
                }
                break;
            }
            sub_be81(sub_bc40(&a_1._f1, &a_1._f3, a_1._f5, 188), a_0);
            sub_be73(a_0);
            sub_be65(a_0);
            sub_bb77(a_0, a_1);
            break;
        }
    }
    if (GAMEPLAY::IS_BIT_SET(a_0._f1D0, 0)) {
        GAMEPLAY::CLEAR_BIT(&a_0._f1D0, 0);
        switch (a_1._f7) {
        case 0:
            AUDIO::PLAY_SOUND_FRONTEND(-1, "NAV_UP_DOWN", "HUD_FRONTEND_DEFAULT_SOUNDSET", 1);
            a_1._f6 += 1;
            a_1._f5 = 0;
            a_1._f1 = 0;
            a_1._f3 = 0;
            switch (sub_bda(a_1, 0)) {
            case 9:
                if (a_1._f6 > 7) {
                    a_1._f6 = 0;
                }
                break;
            }
            sub_bf12(a_1._f6, &g_144069);
            sub_bf04(&g_144069);
            a_0._f1D5 = 1;
            sub_b9d(&a_0._f1D1, 0, 0);
            break;
        case 1:
            AUDIO::PLAY_SOUND_FRONTEND(-1, "NAV_LEFT_RIGHT", "HUD_FRONTEND_DEFAULT_SOUNDSET", 1);
            a_1._f3 += 1;
            if (a_1._f3 > 2) {
                a_1._f3 = 0;
            }
            sub_be81(sub_bc40(&a_1._f1, &a_1._f3, a_1._f5, 187), a_0);
            sub_be73(a_0);
            sub_be65(a_0);
            sub_bb77(a_0, a_1);
            break;
        }
    }
    if (GAMEPLAY::IS_BIT_SET(a_0._f1D0, 2)) {
        GAMEPLAY::CLEAR_BIT(&a_0._f1D0, 2);
        switch (a_1._f7) {
        case 1:
            a_1._f1 -= 1;
            if (a_1._f1 < 0) {
                if (l_CA >= 1) {
                    sub_be97(a_0);
                    sub_4b6();
                }
                if (a_1._f5 > 0) {
                    a_1._f5 -= 1;
                    a_1._f1 = 3;
                } else { 
                    a_1._f5 = l_CA;
                    a_1._f1 = 3;
                    v_6 = a_1._f1 + (a_1._f3 * 4);
                    if (v_6 >= l_CB) {
                        a_1._f1 = (l_CB - 1) % 4;
                        a_1._f3 = (l_CB - 1) / 4;
                    }
                }
            }
            AUDIO::PLAY_SOUND_FRONTEND(-1, "NAV_LEFT_RIGHT", "HUD_FRONTEND_DEFAULT_SOUNDSET", 1);
            sub_be81(sub_bc40(&a_1._f1, &a_1._f3, a_1._f5, 189), a_0);
            sub_be73(a_0);
            sub_be65(a_0);
            sub_bb77(a_0, a_1);
            break;
        }
    }
    if (GAMEPLAY::IS_BIT_SET(a_0._f1D0, 3)) {
        GAMEPLAY::CLEAR_BIT(&a_0._f1D0, 3);
        switch (a_1._f7) {
        case 1:
            a_1._f1 += 1;
            v_7 = a_1._f1 + (a_1._f3 * 4);
            if ((a_1._f1 >= 4) || ((a_1._f5 == l_CA) && (v_7 >= l_CB))) {
                if (l_CA >= 1) {
                    sub_be97(a_0);
                    sub_4b6();
                }
                a_1._f1 = 0;
                a_1._f5 += 1;
                if (a_1._f5 > l_CA) {
                    a_1._f5 = 0;
                }
            }
            AUDIO::PLAY_SOUND_FRONTEND(-1, "NAV_LEFT_RIGHT", "HUD_FRONTEND_DEFAULT_SOUNDSET", 1);
            sub_be81(sub_bc40(&a_1._f1, &a_1._f3, a_1._f5, 190), a_0);
            sub_be73(a_0);
            sub_be65(a_0);
            sub_bb77(a_0, a_1);
            break;
        }
    }
    if (UI::_F284AC67940C6812()) {
        UI::_36C1451A88A09630(&v_8, &v_9);
        switch (a_1._f7) {
        case 0:
            if ((v_9 == 0) || (v_9 == 1)) {
                a_1._f7 = 1;
                if (UI::_C8E1071177A23BE5(&v_A, &v_B, &v_C)) {
                    g_143270._f1 = v_A % 4;
                    g_143270._f3 = v_A / 4;
                }
            }
            break;
        }
    }
    if (UI::_2E22FEFA0100275E()) {
        UI::_7E17BE53E1AAABAF(&v_D, &v_E, &v_F);
        v_10 = v_E + 1000;
        if (v_10 >= 0) {
            if (v_F == 0) {
                a_1._f7 = 0;
                if (a_1._f6 != v_10) {
                    a_1._f6 = v_10;
                    a_1._f5 = 0;
                    a_1._f1 = 0;
                    a_1._f3 = 0;
                    a_0._f1D5 = 1;
                }
            } else if (v_F == 1) {
                a_1._f7 = 1;
                a_1._f1 = v_10 % 4;
                a_1._f3 = v_10 / 4;
            } else if ((v_F == -1) && (a_1._f7 == 1)) {
                a_1._f7 = 0;
            }
        }
    }
    if (a_0._f1D5 == 1) {
        if (sub_b33(&a_0._f1D1, 500, 0)) {
            switch (a_1._f7) {
            case 0:
                a_0._f1D5 = 0;
                sub_be97(a_0);
                sub_bdaa(a_0, a_1);
                sub_be81(-1, a_0);
                sub_be73(a_0);
                sub_be65(a_0);
                sub_b23(0);
                a_0._f1D6 = 0;
                break;
            }
        } else { 
            switch (a_1._f7) {
            case 0:
                if (a_0._f1D6 == 0) {
                    sub_4b6();
                    sub_b23(1);
                    sub_bdcb();
                    a_0._f1D6 = 1;
                }
                break;
            }
        }
    }
}

void sub_b23(auto a_0) {
    UI::_C78E239AC5B2DDB9(a_0, 6, 0);
}

auto sub_b33(auto a_0, auto a_1, auto a_2) {
    if (a_1 == -1) {
        return 1;
    }
    sub_c3d(a_0, a_2, 0);
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (!a_2)) {
        if (GAMEPLAY::ABSI(NETWORK::GET_TIME_DIFFERENCE(NETWORK::GET_NETWORK_TIME(), a_0)) >= a_1) {
            sub_c82(a_0);
            return 1;
        }
    } else if (GAMEPLAY::ABSI(NETWORK::GET_TIME_DIFFERENCE(GAMEPLAY::GET_GAME_TIMER(), a_0)) >= a_1) {
        sub_c82(a_0);
        return 1;
    }
    return 0;
}

void sub_b9d(auto a_0, auto a_1, auto a_2) {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (!a_1)) {
        if (!a_2) {
            a_0 = NETWORK::GET_NETWORK_TIME();
        } else { 
            a_0 = NETWORK::_89023FBBF9200E9F();
        }
    } else { 
        a_0 = GAMEPLAY::GET_GAME_TIMER();
    }
    a_0._f1 = 1;
}

auto sub_bda(auto a_0, auto a_1) {
    v_5 = a_0;
    if (v_5 == -1) {
        v_5 = sub_c1b();
    }
    if (g_141425[v_5/*1*/] == 1) {
        if (a_1) {}
        v_4 = 8;
    } else { 
        v_4 = g_1407DB[v_5/*1*/];
        if (a_1) {}
    }
    return v_4;
}

auto sub_c1b() {
    return g_1407E1;
}

auto sub_c27() {
    return g_5F7D;
}

auto sub_c32() {
    return g_5F7C;
}

void sub_c3d(auto a_0, auto a_1, auto a_2) {
    if (a_0._f1 == 0) {
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (!a_1)) {
            if (!a_2) {
                a_0 = NETWORK::GET_NETWORK_TIME();
            } else { 
                a_0 = NETWORK::_89023FBBF9200E9F();
            }
        } else { 
            a_0 = GAMEPLAY::GET_GAME_TIMER();
        }
        a_0._f1 = 1;
    }
}

void sub_c82(auto a_0) {
    a_0._f1 = 0;
}

auto sub_c8f(auto a_0, auto a_1, auto a_2) {
    v_5 = CONTROLS::GET_CONTROL_VALUE(2, 195) - 127;
    v_6 = CONTROLS::GET_CONTROL_VALUE(2, 196) - 127;
    v_7 = CONTROLS::GET_CONTROL_VALUE(2, 197) - 127;
    switch (a_0) {
    case 189:
        if (v_5 < -30) {
            if ((a_1 < GAMEPLAY::GET_GAME_TIMER()) || (a_2 == 0)) {
                a_1 = GAMEPLAY::GET_GAME_TIMER() + 250;
                return 1;
            }
        }
        break;
    case 190:
        if (v_5 > 30) {
            if ((a_1 < GAMEPLAY::GET_GAME_TIMER()) || (a_2 == 0)) {
                a_1 = GAMEPLAY::GET_GAME_TIMER() + 250;
                return 1;
            }
        }
        break;
    case 188:
        if (v_6 < -30) {
            if ((a_1 < GAMEPLAY::GET_GAME_TIMER()) || (a_2 == 0)) {
                a_1 = GAMEPLAY::GET_GAME_TIMER() + 250;
                return 1;
            }
        }
        break;
    case 187:
        if (v_6 > 30) {
            if ((a_1 < GAMEPLAY::GET_GAME_TIMER()) || (a_2 == 0)) {
                a_1 = GAMEPLAY::GET_GAME_TIMER() + 250;
                return 1;
            }
        }
        break;
    case 194:
        if (v_7 > 30) {
            if ((a_1 < GAMEPLAY::GET_GAME_TIMER()) || (a_2 == 0)) {
                a_1 = GAMEPLAY::GET_GAME_TIMER() + 250;
                return 1;
            }
        }
        break;
    case 193:
        if (v_7 < -30) {
            if ((a_1 < GAMEPLAY::GET_GAME_TIMER()) || (a_2 == 0)) {
                a_1 = GAMEPLAY::GET_GAME_TIMER() + 250;
                return 1;
            }
        }
        break;
    }
    return 0;
}

auto sub_df2(auto a_0, auto a_1, auto a_2) {
    if (a_1 == -1) {
        return 1;
    }
    sub_c3d(a_0, a_2, 0);
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (!a_2)) {
        if (GAMEPLAY::ABSI(NETWORK::GET_TIME_DIFFERENCE(NETWORK::GET_NETWORK_TIME(), a_0)) >= a_1) {
            return 1;
        }
    } else if (GAMEPLAY::ABSI(NETWORK::GET_TIME_DIFFERENCE(GAMEPLAY::GET_GAME_TIMER(), a_0)) >= a_1) {
        return 1;
    }
    return 0;
}

auto sub_e50(auto a_0) {
    return a_0._f1;
}

void sub_e5c(auto a_0) {
    if (GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED("MPTShirtAwards2")) {
        v_3 = 1;
    }
    if (GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED("MPTshirtAwardLTS")) {
        v_4 = 1;
    }
    if (v_5 == 1) {}
    if (UI::HAS_ADDITIONAL_TEXT_LOADED(8)) {
        if (((((((GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED("MPAwards1") && GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED("MPAwards2")) && GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED("MPAwards3")) && GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED("MPAwards4")) && GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED("MPAwards5")) && GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED("MPAwards6")) && v_3) && v_4) {
            v_6 = 9;
            switch (a_0._f6) {
            case 0:
                l_CA = 7;
                l_CB = 5;
                if ((GAMEPLAY::IS_DURANGO_VERSION() || GAMEPLAY::IS_ORBIS_VERSION()) || GAMEPLAY::IS_PC_VERSION()) {
                    if (!g_40001._f1AB6) {
                        l_CA = 10;
                        l_CB = 9;
                    } else { 
                        l_CA = 10;
                        l_CB = 6;
                    }
                } else if (!g_40001._f1AB6) {
                    l_CA = 10;
                    l_CB = 8;
                } else { 
                    l_CA = 10;
                    l_CB = 5;
                }
                break;
            case 1:
                l_CA = 2;
                l_CB = 7;
                l_CA = 2;
                l_CB = 9;
                break;
            case 2:
                l_CA = 1;
                l_CB = 10;
                l_CA = 2;
                l_CB = 6;
                break;
            case 3:
                l_CA = 0;
                l_CB = 8;
                break;
            case 4:
                l_CA = 0;
                l_CB = 12;
                break;
            case 5:
                l_CA = 1;
                l_CB = 11;
                l_CA = 2;
                l_CB = 2;
                break;
            case 6:
                if ((GAMEPLAY::IS_DURANGO_VERSION() || GAMEPLAY::IS_ORBIS_VERSION()) || GAMEPLAY::IS_PC_VERSION()) {
                    l_CA = 1;
                    l_CB = 8;
                } else { 
                    l_CA = 1;
                    l_CB = 7;
                }
                break;
            case 7:
                l_CA = 2;
                l_CB = 6;
                l_CA = 2;
                l_CB = 7;
                l_CA = 4;
                l_CB = 1;
                break;
            }
            switch (a_0._f5) {
            case 0:
                switch (a_0._f6) {
                case 0:
                    sub_a24f(9, 8, v_6, &g_143D12);
                    sub_a24f(1, 8, v_6, &g_143D12);
                    sub_a24f(4, 8, v_6, &g_143D12);
                    sub_a24f(5, 8, v_6, &g_143D12);
                    sub_a24f(2, 8, v_6, &g_143D12);
                    sub_a24f(8, 8, v_6, &g_143D12);
                    sub_a24f(7, 8, v_6, &g_143D12);
                    sub_a24f(3, 8, v_6, &g_143D12);
                    sub_a24f(6, 8, v_6, &g_143D12);
                    sub_a24f(10, 8, v_6, &g_143D12);
                    sub_a24f(19, 8, v_6, &g_143D12);
                    sub_a24f(24, 8, v_6, &g_143D12);
                    break;
                case 1:
                    sub_a24f(40, 8, v_6, &g_143D12);
                    sub_a24f(41, 8, v_6, &g_143D12);
                    sub_a24f(42, 8, v_6, &g_143D12);
                    sub_a24f(21, 8, v_6, &g_143D12);
                    sub_a24f(58, 8, v_6, &g_143D12);
                    sub_a24f(57, 8, v_6, &g_143D12);
                    sub_a24f(37, 8, v_6, &g_143D12);
                    sub_932c(20, 8, v_6, &g_143D12);
                    sub_a24f(51, 8, v_6, &g_143D12);
                    sub_a24f(52, 8, v_6, &g_143D12);
                    sub_a24f(54, 8, v_6, &g_143D12);
                    sub_932c(14, 8, v_6, &g_143D12);
                    break;
                case 2:
                    sub_932c(15, 8, v_6, &g_143D12);
                    sub_932c(16, 8, v_6, &g_143D12);
                    sub_a24f(29, 8, v_6, &g_143D12);
                    sub_a24f(28, 8, v_6, &g_143D12);
                    sub_a24f(47, 8, v_6, &g_143D12);
                    sub_932c(6, 8, v_6, &g_143D12);
                    sub_932c(7, 8, v_6, &g_143D12);
                    sub_a24f(30, 8, v_6, &g_143D12);
                    sub_932c(2, 8, v_6, &g_143D12);
                    sub_a24f(36, 8, v_6, &g_143D12);
                    sub_a24f(49, 8, v_6, &g_143D12);
                    sub_a24f(15, 8, v_6, &g_143D12);
                    break;
                case 3:
                    sub_a24f(60, 8, v_6, &g_143D12);
                    sub_a24f(19, 8, v_6, &g_143D12);
                    sub_a24f(53, 8, v_6, &g_143D12);
                    sub_a24f(12, 8, v_6, &g_143D12);
                    sub_a24f(11, 8, v_6, &g_143D12);
                    sub_a24f(18, 8, v_6, &g_143D12);
                    sub_a24f(14, 8, v_6, &g_143D12);
                    sub_a24f(66, 8, v_6, &g_143D12);
                    break;
                case 4:
                    sub_a24f(10, 8, v_6, &g_143D12);
                    sub_a24f(17, 8, v_6, &g_143D12);
                    sub_a24f(61, 8, v_6, &g_143D12);
                    sub_a24f(0, 8, v_6, &g_143D12);
                    sub_a24f(16, 8, v_6, &g_143D12);
                    sub_932c(13, 8, v_6, &g_143D12);
                    sub_a24f(20, 8, v_6, &g_143D12);
                    sub_a24f(62, 8, v_6, &g_143D12);
                    sub_a24f(63, 8, v_6, &g_143D12);
                    sub_932c(23, 8, v_6, &g_143D12);
                    sub_a24f(68, 8, v_6, &g_143D12);
                    sub_932c(27, 8, v_6, &g_143D12);
                    break;
                case 5:
                    sub_a24f(9, 8, v_6, &g_143D12);
                    sub_a24f(56, 8, v_6, &g_143D12);
                    sub_a24f(55, 8, v_6, &g_143D12);
                    sub_a24f(45, 8, v_6, &g_143D12);
                    sub_a24f(43, 8, v_6, &g_143D12);
                    sub_a24f(46, 8, v_6, &g_143D12);
                    sub_a24f(44, 8, v_6, &g_143D12);
                    sub_932c(22, 8, v_6, &g_143D12);
                    sub_932c(17, 8, v_6, &g_143D12);
                    sub_932c(18, 8, v_6, &g_143D12);
                    sub_a24f(59, 8, v_6, &g_143D12);
                    sub_a24f(1, 8, v_6, &g_143D12);
                    break;
                case 6:
                    sub_a24f(69, 8, v_6, &g_143D12);
                    sub_8bc0(1, 8, v_6, &g_143D12);
                    sub_8bc0(2, 8, v_6, &g_143D12);
                    sub_8bc0(3, 8, v_6, &g_143D12);
                    sub_8bc0(4, 8, v_6, &g_143D12);
                    sub_8bc0(5, 8, v_6, &g_143D12);
                    sub_a24f(70, 8, v_6, &g_143D12);
                    sub_8bc0(6, 8, v_6, &g_143D12);
                    sub_8bc0(7, 8, v_6, &g_143D12);
                    sub_8bc0(8, 8, v_6, &g_143D12);
                    sub_a24f(74, 8, v_6, &g_143D12);
                    sub_932c(29, 8, v_6, &g_143D12);
                    break;
                case 7:
                    sub_7a8a(4, 8, v_6, &g_143D12);
                    sub_7a8a(2, 8, v_6, &g_143D12);
                    sub_7a8a(7, 8, v_6, &g_143D12);
                    sub_7a8a(0, 8, v_6, &g_143D12);
                    sub_7a8a(6, 8, v_6, &g_143D12);
                    sub_7a8a(8, 8, v_6, &g_143D12);
                    sub_7a8a(5, 8, v_6, &g_143D12);
                    sub_7a8a(3, 8, v_6, &g_143D12);
                    sub_7a8a(1, 8, v_6, &g_143D12);
                    sub_7a8a(54, 8, v_6, &g_143D12);
                    sub_7a8a(57, 8, v_6, &g_143D12);
                    sub_7a8a(58, 8, v_6, &g_143D12);
                    break;
                }
                break;
            case 1:
                switch (a_0._f6) {
                case 0:
                    sub_a24f(17, 8, v_6, &g_143D12);
                    sub_a24f(12, 8, v_6, &g_143D12);
                    sub_a24f(40, 8, v_6, &g_143D12);
                    sub_a24f(31, 8, v_6, &g_143D12);
                    sub_a24f(37, 8, v_6, &g_143D12);
                    sub_a24f(34, 8, v_6, &g_143D12);
                    sub_a24f(33, 8, v_6, &g_143D12);
                    sub_a24f(32, 8, v_6, &g_143D12);
                    sub_a24f(41, 8, v_6, &g_143D12);
                    sub_a24f(35, 8, v_6, &g_143D12);
                    sub_a24f(63, 8, v_6, &g_143D12);
                    sub_74f1(1, 8, v_6, &g_143D12);
                    break;
                case 1:
                    sub_a24f(39, 8, v_6, &g_143D12);
                    sub_932c(11, 8, v_6, &g_143D12);
                    sub_a24f(38, 8, v_6, &g_143D12);
                    sub_932c(10, 8, v_6, &g_143D12);
                    sub_a24f(48, 8, v_6, &g_143D12);
                    sub_a24f(22, 8, v_6, &g_143D12);
                    sub_a24f(23, 8, v_6, &g_143D12);
                    sub_a24f(31, 8, v_6, &g_143D12);
                    sub_a24f(35, 8, v_6, &g_143D12);
                    sub_932c(4, 8, v_6, &g_143D12);
                    sub_932c(5, 8, v_6, &g_143D12);
                    sub_a24f(32, 8, v_6, &g_143D12);
                    break;
                case 2:
                    if (!g_143D12._f1[0/*1*/]) {
                        sub_a24f(50, 8, v_6, &g_143D12);
                        sub_932c(9, 8, v_6, &g_143D12);
                        sub_932c(12, 8, v_6, &g_143D12);
                        sub_a24f(27, 8, v_6, &g_143D12);
                        sub_932c(0, 8, v_6, &g_143D12);
                        sub_932c(21, 8, v_6, &g_143D12);
                        sub_74f1(1, 8, v_6, &g_143D12);
                        sub_74f1(0, 8, v_6, &g_143D12);
                        sub_74f1(3, 8, v_6, &g_143D12);
                        sub_74f1(2, 8, v_6, &g_143D12);
                        sub_a24f(76, 8, v_6, &g_143D12);
                        sub_a24f(77, 8, v_6, &g_143D12);
                    }
                    break;
                case 5:
                    if (!g_143D12._f1[0/*1*/]) {
                        sub_a24f(5, 8, v_6, &g_143D12);
                        sub_a24f(4, 8, v_6, &g_143D12);
                        sub_a24f(25, 8, v_6, &g_143D12);
                        sub_a24f(2, 8, v_6, &g_143D12);
                        sub_a24f(26, 8, v_6, &g_143D12);
                        sub_a24f(7, 8, v_6, &g_143D12);
                        sub_a24f(3, 8, v_6, &g_143D12);
                        sub_a24f(6, 8, v_6, &g_143D12);
                        sub_a24f(8, 8, v_6, &g_143D12);
                        sub_a24f(24, 8, v_6, &g_143D12);
                        sub_a24f(78, 8, v_6, &g_143D12);
                        sub_a24f(80, 8, v_6, &g_143D12);
                    }
                    break;
                case 6:
                    if (!g_143D12._f1[0/*1*/]) {
                        sub_a24f(72, 8, v_6, &g_143D12);
                        sub_a24f(71, 8, v_6, &g_143D12);
                        sub_932c(31, 8, v_6, &g_143D12);
                        sub_932c(28, 8, v_6, &g_143D12);
                        sub_932c(32, 8, v_6, &g_143D12);
                        sub_a24f(81, 8, v_6, &g_143D12);
                        sub_8bc0(10, 8, v_6, &g_143D12);
                        if ((GAMEPLAY::IS_DURANGO_VERSION() || GAMEPLAY::IS_ORBIS_VERSION()) || GAMEPLAY::IS_PC_VERSION()) {
                            sub_8bc0(9, 8, v_6, &g_143D12);
                        }
                    }
                    break;
                case 7:
                    sub_7a8a(59, 8, v_6, &g_143D12);
                    sub_7a8a(60, 8, v_6, &g_143D12);
                    sub_7a8a(12, 8, v_6, &g_143D12);
                    sub_7a8a(56, 8, v_6, &g_143D12);
                    sub_7a8a(55, 8, v_6, &g_143D12);
                    sub_7a8a(25, 8, v_6, &g_143D12);
                    sub_7a8a(34, 8, v_6, &g_143D12);
                    sub_7a8a(45, 8, v_6, &g_143D12);
                    sub_7a8a(48, 8, v_6, &g_143D12);
                    sub_7a8a(49, 8, v_6, &g_143D12);
                    sub_7a8a(65, 8, v_6, &g_143D12);
                    sub_7a8a(46, 8, v_6, &g_143D12);
                    break;
                }
                break;
            case 2:
                switch (a_0._f6) {
                case 0:
                    sub_a24f(48, 8, v_6, &g_143D12);
                    sub_a24f(14, 8, v_6, &g_143D12);
                    sub_a24f(25, 8, v_6, &g_143D12);
                    sub_a24f(26, 8, v_6, &g_143D12);
                    sub_a24f(15, 8, v_6, &g_143D12);
                    sub_a24f(22, 8, v_6, &g_143D12);
                    sub_a24f(27, 8, v_6, &g_143D12);
                    sub_a24f(21, 8, v_6, &g_143D12);
                    sub_a24f(18, 8, v_6, &g_143D12);
                    sub_a24f(11, 8, v_6, &g_143D12);
                    sub_a24f(62, 8, v_6, &g_143D12);
                    sub_a24f(23, 8, v_6, &g_143D12);
                    break;
                case 1:
                    if (!g_143D12._f1[0/*1*/]) {
                        sub_a24f(34, 8, v_6, &g_143D12);
                        sub_932c(3, 8, v_6, &g_143D12);
                        sub_a24f(33, 8, v_6, &g_143D12);
                        sub_932c(8, 8, v_6, &g_143D12);
                        sub_a24f(84, 8, v_6, &g_143D12);
                        sub_a24f(85, 8, v_6, &g_143D12);
                        sub_a24f(86, 8, v_6, &g_143D12);
                        sub_a24f(75, 8, v_6, &g_143D12);
                        sub_a24f(79, 8, v_6, &g_143D12);
                    }
                    break;
                case 2:
                    if (!g_143D12._f1[0/*1*/]) {
                        sub_a24f(83, 8, v_6, &g_143D12);
                        sub_932c(33, 8, v_6, &g_143D12);
                        sub_a24f(87, 8, v_6, &g_143D12);
                        sub_a24f(67, 8, v_6, &g_143D12);
                        sub_932c(25, 8, v_6, &g_143D12);
                        sub_932c(26, 8, v_6, &g_143D12);
                    }
                    break;
                case 5:
                    if (!g_143D12._f1[0/*1*/]) {
                        sub_a24f(82, 8, v_6, &g_143D12);
                        sub_a24f(65, 8, v_6, &g_143D12);
                    }
                    break;
                case 7:
                    if (!g_143D12._f1[0/*1*/]) {
                        sub_7a8a(9, 8, v_6, &g_143D12);
                        sub_7a8a(10, 8, v_6, &g_143D12);
                        sub_7a8a(11, 8, v_6, &g_143D12);
                        sub_7a8a(87, 8, v_6, &g_143D12);
                        sub_7a8a(88, 8, v_6, &g_143D12);
                        sub_7a8a(89, 8, v_6, &g_143D12);
                        v_5 = 0;
                        if (sub_7209(3608, -1, -1)) {
                            v_5 = 1;
                        }
                        sub_70f7("CLO_LTS_T_0", "CLO_LTS_TD_0", "Elitas_Tshirt", "MPTshirtAwardLTS", 1, v_5, -1, 1, &g_143D12);
                        sub_6ba4(0);
                        sub_6ba4(1);
                        sub_6ba4(2);
                        v_5 = 0;
                        if (sub_457c(4)) {
                            v_5 = 1;
                        }
                        sub_70f7("CLO_HST_A_4", "CLO_HST_AD_5", "CantTouchThis", "MPTShirtAwards2", 1, v_5, -1, 1, &g_143D12);
                        sub_6ba4(5);
                    }
                    break;
                }
                break;
            case 3:
                switch (a_0._f6) {
                case 0:
                    sub_a24f(0, 8, v_6, &g_143D12);
                    sub_a24f(16, 8, v_6, &g_143D12);
                    sub_a24f(45, 8, v_6, &g_143D12);
                    sub_a24f(43, 8, v_6, &g_143D12);
                    sub_a24f(46, 8, v_6, &g_143D12);
                    sub_a24f(44, 8, v_6, &g_143D12);
                    sub_a24f(30, 8, v_6, &g_143D12);
                    sub_932c(2, 8, v_6, &g_143D12);
                    sub_a24f(39, 8, v_6, &g_143D12);
                    sub_a24f(38, 8, v_6, &g_143D12);
                    sub_932c(3, 8, v_6, &g_143D12);
                    sub_a24f(42, 8, v_6, &g_143D12);
                    break;
                case 1:
                    if (!g_143D12._f1[0/*1*/]) {}
                    break;
                case 7:
                    sub_6ba4(7);
                    sub_6ba4(6);
                    sub_6ba4(8);
                    v_5 = 0;
                    if (sub_457c(9)) {
                        v_5 = 1;
                    }
                    sub_70f7("CLO_HST_A_9", "CLO_HST_AD_9", "Showroom", "MPTShirtAwards2", 1, v_5, -1, 1, &g_143D12);
                    sub_70f7("CHR_HST_A_0", "CHR_HST_AD_0", "SportMod", "MPAwardMods", sub_2ac3(75, 5, 0), sub_2a63(75, -1), -1, 1, &g_143D12);
                    sub_70f7("CHR_HST_A_1", "CHR_HST_AD_1", "LowriderMod", "MPAwardMods", sub_2ac3(76, 5, 0), sub_2a63(76, -1), -1, 1, &g_143D12);
                    sub_70f7("CHR_HST_A_2", "CHR_HST_AD_2", "OffroadMod", "MPAwardMods", sub_2ac3(78, 5, 0), sub_2a63(78, -1), -1, 1, &g_143D12);
                    sub_70f7("CHR_HST_A_3", "CHR_HST_AD_3", "HighendMod", "MPAwardMods", sub_2ac3(69, 5, 0), sub_2a63(69, -1), -1, 1, &g_143D12);
                    sub_70f7("CHR_HST_A_4", "CHR_HST_AD_4", "TunerMod", "MPAwardMods", sub_2ac3(70, 5, 0), sub_2a63(70, -1), -1, 1, &g_143D12);
                    sub_70f7("CHR_HST_A_5", "CHR_HST_AD_5", "BikeMod", "MPAwardMods", sub_2ac3(80, 5, 0), sub_2a63(80, -1), -1, 1, &g_143D12);
                    sub_70f7("CHR_HST_A_6", "CHR_HST_AD_6", "SUVMod", "MPAwardMods", sub_2ac3(84, 5, 0), sub_2a63(84, -1), -1, 1, &g_143D12);
                    sub_70f7("CHR_HST_A_7", "CHR_HST_AD_7", "MuscleMod", "MPAwardMods", sub_2ac3(85, 5, 0), sub_2a63(85, -1), -1, 1, &g_143D12);
                    break;
                }
                break;
            case 4:
                switch (a_0._f6) {
                case 0:
                    sub_a24f(36, 8, v_6, &g_143D12);
                    sub_932c(5, 8, v_6, &g_143D12);
                    sub_932c(7, 8, v_6, &g_143D12);
                    sub_932c(6, 8, v_6, &g_143D12);
                    sub_a24f(29, 8, v_6, &g_143D12);
                    sub_a24f(28, 8, v_6, &g_143D12);
                    sub_a24f(20, 8, v_6, &g_143D12);
                    sub_932c(0, 8, v_6, &g_143D12);
                    sub_932c(8, 8, v_6, &g_143D12);
                    sub_a24f(61, 8, v_6, &g_143D12);
                    sub_74f1(3, 8, v_6, &g_143D12);
                    sub_a24f(50, 8, v_6, &g_143D12);
                    break;
                case 7:
                    if (!g_143D12._f1[0/*1*/]) {
                        sub_6ba4(34);
                    }
                    break;
                }
                break;
            case 5:
                switch (a_0._f6) {
                case 0:
                    sub_932c(15, 8, v_6, &g_143D12);
                    sub_932c(4, 8, v_6, &g_143D12);
                    sub_74f1(2, 8, v_6, &g_143D12);
                    sub_74f1(0, 8, v_6, &g_143D12);
                    sub_932c(16, 8, v_6, &g_143D12);
                    sub_932c(12, 8, v_6, &g_143D12);
                    sub_932c(13, 8, v_6, &g_143D12);
                    sub_a24f(55, 8, v_6, &g_143D12);
                    sub_a24f(56, 8, v_6, &g_143D12);
                    sub_932c(9, 8, v_6, &g_143D12);
                    sub_a24f(53, 8, v_6, &g_143D12);
                    sub_932c(20, 8, v_6, &g_143D12);
                    break;
                }
                break;
            case 6:
                switch (a_0._f6) {
                case 0:
                    sub_932c(22, 8, v_6, &g_143D12);
                    sub_932c(17, 8, v_6, &g_143D12);
                    sub_932c(18, 8, v_6, &g_143D12);
                    sub_932c(11, 8, v_6, &g_143D12);
                    sub_a24f(51, 8, v_6, &g_143D12);
                    sub_a24f(52, 8, v_6, &g_143D12);
                    sub_a24f(59, 8, v_6, &g_143D12);
                    sub_a24f(58, 8, v_6, &g_143D12);
                    sub_932c(14, 8, v_6, &g_143D12);
                    sub_a24f(54, 8, v_6, &g_143D12);
                    sub_a24f(57, 8, v_6, &g_143D12);
                    sub_a24f(47, 8, v_6, &g_143D12);
                    break;
                }
                break;
            case 7:
                switch (a_0._f6) {
                case 0:
                    if (!g_143D12._f1[0/*1*/]) {
                        sub_932c(10, 8, v_6, &g_143D12);
                        sub_932c(21, 8, v_6, &g_143D12);
                        sub_a24f(60, 8, v_6, &g_143D12);
                        sub_932c(23, 8, v_6, &g_143D12);
                        sub_a24f(49, 8, v_6, &g_143D12);
                        sub_a24f(75, 8, v_6, &g_143D12);
                        sub_a24f(76, 8, v_6, &g_143D12);
                        sub_a24f(77, 8, v_6, &g_143D12);
                        sub_a24f(78, 8, v_6, &g_143D12);
                        sub_a24f(79, 8, v_6, &g_143D12);
                        sub_a24f(69, 8, v_6, &g_143D12);
                        sub_a24f(70, 8, v_6, &g_143D12);
                    }
                    break;
                }
                break;
            case 8:
                switch (a_0._f6) {
                case 0:
                    if (!g_143D12._f1[0/*1*/]) {
                        sub_a24f(71, 8, v_6, &g_143D12);
                        sub_a24f(72, 8, v_6, &g_143D12);
                        sub_932c(29, 8, v_6, &g_143D12);
                        sub_a24f(74, 8, v_6, &g_143D12);
                        sub_932c(28, 8, v_6, &g_143D12);
                        sub_a24f(80, 8, v_6, &g_143D12);
                        sub_932c(32, 8, v_6, &g_143D12);
                        sub_a24f(81, 8, v_6, &g_143D12);
                        sub_a24f(82, 8, v_6, &g_143D12);
                        sub_a24f(83, 8, v_6, &g_143D12);
                        sub_a24f(84, 8, v_6, &g_143D12);
                        sub_a24f(85, 8, v_6, &g_143D12);
                    }
                    break;
                }
                break;
            case 9:
                switch (a_0._f6) {
                case 0:
                    if (!g_143D12._f1[0/*1*/]) {
                        sub_a24f(86, 8, v_6, &g_143D12);
                        sub_932c(33, 8, v_6, &g_143D12);
                        sub_a24f(87, 8, v_6, &g_143D12);
                        sub_932c(31, 8, v_6, &g_143D12);
                        sub_8bc0(1, 8, v_6, &g_143D12);
                        sub_8bc0(2, 8, v_6, &g_143D12);
                        sub_8bc0(3, 8, v_6, &g_143D12);
                        sub_8bc0(4, 8, v_6, &g_143D12);
                        sub_8bc0(5, 8, v_6, &g_143D12);
                        sub_8bc0(6, 8, v_6, &g_143D12);
                        sub_8bc0(7, 8, v_6, &g_143D12);
                        sub_8bc0(8, 8, v_6, &g_143D12);
                    }
                    break;
                }
                break;
            case 10:
                switch (a_0._f6) {
                case 0:
                    if (!g_143D12._f1[0/*1*/]) {
                        if (!g_40001._f1AB6) {
                            sub_a24f(67, 8, v_6, &g_143D12);
                            sub_932c(25, 8, v_6, &g_143D12);
                            sub_932c(26, 8, v_6, &g_143D12);
                        }
                        sub_a24f(65, 8, v_6, &g_143D12);
                        sub_a24f(66, 8, v_6, &g_143D12);
                        sub_a24f(68, 8, v_6, &g_143D12);
                        sub_932c(27, 8, v_6, &g_143D12);
                        sub_8bc0(10, 8, v_6, &g_143D12);
                        if ((GAMEPLAY::IS_DURANGO_VERSION() || GAMEPLAY::IS_ORBIS_VERSION()) || GAMEPLAY::IS_PC_VERSION()) {
                            sub_8bc0(9, 8, v_6, &g_143D12);
                        }
                    }
                    break;
                }
                break;
            }
            sub_2632(&g_143D12, sub_2a56(&g_143D12));
            sub_2623(1, &g_144069);
            sub_2614(1, &g_144069);
            sub_2605(1, &g_144069);
            sub_25e8(0, "HUD_AWDLIST1", &g_144069);
            sub_25e8(1, "HUD_AWDLIST12", &g_144069);
            sub_25e8(2, "HUD_AWDLIST3b", &g_144069);
            sub_25e8(3, "HUD_AWDLIST6", &g_144069);
            sub_25e8(4, "HUD_AWDLIST9", &g_144069);
            sub_25e8(5, "HUD_AWDLIST10", &g_144069);
            sub_25e8(6, "HUD_AWDLIST13", &g_144069);
            sub_25e8(7, "HUD_AWDLIST6b", &g_144069);
            sub_2402(&g_144069, sub_25db(&g_144069));
        }
    }
}

void sub_2402(auto a_0, auto a_1) {
    if (a_1 == 1) {
        a_0 = 0;
        sub_25cd(a_0);
    }
    if (a_0 == 0) {
        v_5 = a_0._f113[v_4/*1*/];
        for (v_4 = 0; v_4 <= 15; v_4 += 1) {
            if (a_0._f1[v_4/*1*/] == 1) {
                GRAPHICS::_AB58C27C2E6123C6("SET_DATA_SLOT");
                if (a_0._f17B == 1) {
                    if (a_0._f17C == v_4) {
                        v_5 = 0;
                    } else { 
                        v_5 = 4;
                    }
                }
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_4);
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_4);
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(a_0._f135[v_4/*1*/]);
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(1);
                if (a_0._f17A) {
                    sub_25bb(&a_0._f12[v_4/*16*/]);
                } else { 
                    sub_25ad(&a_0._f12[v_4/*16*/]);
                }
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_5);
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(a_0._f124[v_4/*1*/]);
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(a_0._f157[v_4/*1*/]);
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(a_0._f168[v_4/*1*/]);
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(-1);
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(-1);
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(-1);
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(a_0._f146[v_4/*1*/]);
                GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
            }
            a_0 = 1;
        }
        sub_2590(0);
    }
    sub_2522(a_0, sub_2583(a_0));
}

void sub_2522(auto a_0, auto a_1) {
    if (a_1 == 1) {
        a_0._f17D = 0;
        sub_2575(a_0);
    }
    if (a_0._f17D == 0) {
        if (a_0._f17C != -1) {
            GRAPHICS::_AB58C27C2E6123C6("SET_COLUMN_HIGHLIGHT");
            GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
            GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(a_0._f17C);
            GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
            a_0._f17C = -1;
            a_0._f17D = 1;
        }
    }
}

void sub_2575(auto a_0) {
    a_0._f17F = 0;
}

auto sub_2583(auto a_0) {
    return a_0._f17F;
}

void sub_2590(auto a_0) {
    if (GRAPHICS::_AB58C27C2E6123C6("DISPLAY_DATA_SLOT")) {
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(a_0);
        GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
    }
}

void sub_25ad(auto a_0) {
    GRAPHICS::_E83A3E3557A56640(a_0);
}

void sub_25bb(auto a_0) {
    GRAPHICS::_BEGIN_TEXT_COMPONENT(a_0);
    GRAPHICS::_END_TEXT_COMPONENT();
}

void sub_25cd(auto a_0) {
    a_0._f17E = 0;
}

auto sub_25db(auto a_0) {
    return a_0._f17E;
}

void sub_25e8(auto a_0, auto a_1, auto a_2) {
    a_2._f12[a_0/*16*/]/*"64"*/ = a_1;
    a_2._f1[a_0/*1*/] = 1;
}

void sub_2605(auto a_0, auto a_1) {
    a_1._f17B = a_0;
}

void sub_2614(auto a_0, auto a_1) {
    a_1._f179 = a_0;
}

void sub_2623(auto a_0, auto a_1) {
    a_1._f17A = a_0;
}

void sub_2632(auto a_0, auto a_1) {
    if (a_1 == 1) {
        a_0 = 0;
        sub_4b6();
        sub_2a48(a_0);
    }
    if (a_0 == 0) {
        if (sub_29ec(a_0)) {
            for (v_4 = 0; v_4 <= 11; v_4 += 1) {
                v_5 = -1;
                v_5 = SYSTEM::FLOOR((SYSTEM::TO_FLOAT(a_0._fDD[v_4/*1*/]) / SYSTEM::TO_FLOAT(a_0._fD0[v_4/*1*/])) * 100.0);
                v_5 = a_0._f1B9[v_4/*1*/];
                v_6 = -1;
                switch (a_0._f1AC[v_4/*1*/]) {
                case 107:
                    v_6 = 100;
                    break;
                case 108:
                    v_6 = 200;
                    break;
                case 109:
                    v_6 = 400;
                    break;
                case 110:
                    v_6 = 800;
                    break;
                }
                v_7/*"32"*/ = sub_2999(a_0._f1AC[v_4/*1*/]);
                if (a_0._f1[v_4/*1*/] == 1) {
                    GRAPHICS::_AB58C27C2E6123C6("SET_DATA_SLOT");
                    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(1);
                    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_4);
                    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_4);
                    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(1);
                    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
                    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
                    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(1);
                    sub_25bb(&a_0._fE[v_4/*8*/]);
                    sub_25bb(&a_0._f6F[v_4/*8*/]);
                    sub_25ad(&a_0._f14B[v_4/*8*/]);
                    sub_25ad(&a_0._fEA[v_4/*8*/]);
                    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(a_0._f1AC[v_4/*1*/]);
                    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_5);
                    if (sub_295f(&v_7)) {
                        sub_25bb("HUD_AWDPROG_S");
                    } else { 
                        GRAPHICS::_BEGIN_TEXT_COMPONENT("HUD_AWDPROG");
                        UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&v_7);
                        GRAPHICS::_END_TEXT_COMPONENT();
                    }
                    if (a_0._fDD[v_4/*1*/] >= a_0._fD0[v_4/*1*/]) {
                        sub_25bb("TR_COMPLETE");
                    } else { 
                        GRAPHICS::_BEGIN_TEXT_COMPONENT("TIMER_DASHES");
                        UI::ADD_TEXT_COMPONENT_INTEGER(a_0._fDD[v_4/*1*/]);
                        UI::ADD_TEXT_COMPONENT_INTEGER(a_0._fD0[v_4/*1*/]);
                        GRAPHICS::_END_TEXT_COMPONENT();
                    }
                    if (v_6 >= 0) {
                        sub_25bb("HUD_AWDAWARD");
                        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_6);
                    }
                    GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                }
            }
            sub_2590(1);
            a_0 = 1;
        }
    }
    sub_2880(a_0, sub_2952(a_0));
    sub_281b(a_0, sub_2873(a_0));
}

void sub_281b(auto a_0, auto a_1) {
    if (a_1 == 1) {
        a_0._f1CA = 0;
        sub_2865(a_0);
    }
    if (a_0._f1CA == 0) {
        GRAPHICS::_AB58C27C2E6123C6("SET_COLUMN_HIGHLIGHT");
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(1);
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(a_0._f1C7);
        GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
        a_0._f1C7 = -1;
        a_0._f1CA = 1;
    }
}

void sub_2865(auto a_0) {
    a_0._f1CE = 0;
}

auto sub_2873(auto a_0) {
    return a_0._f1CE;
}

void sub_2880(auto a_0, auto a_1) {
    if (a_1 == 1) {
        a_0._f1CB = 0;
        sub_2944(a_0);
    }
    if (a_0._f1CB == 0) {
        GRAPHICS::_AB58C27C2E6123C6("SET_DESCRIPTION");
        if (a_0._f1C8 < 0) {
            sub_25bb("");
            sub_25bb("");
        } else if (a_0._f1C8 < 12) {
            sub_25bb(&a_0._fE[a_0._f1C8/*8*/]);
            if (a_0._fD0[a_0._f1C8/*1*/] > -1) {
                sub_292c(&a_0._f6F[a_0._f1C8/*8*/], a_0._fD0[a_0._f1C8/*1*/]);
            } else { 
                sub_25bb(&a_0._f6F[a_0._f1C8/*8*/]);
            }
        }
        GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
        a_0._f1C8 = -1;
        a_0._f1CB = 1;
    }
}

void sub_292c(auto a_0, auto a_1) {
    GRAPHICS::_BEGIN_TEXT_COMPONENT(a_0);
    UI::ADD_TEXT_COMPONENT_INTEGER(a_1);
    GRAPHICS::_END_TEXT_COMPONENT();
}

void sub_2944(auto a_0) {
    a_0._f1CF = 0;
}

auto sub_2952(auto a_0) {
    return a_0._f1CF;
}

auto sub_295f(auto a_0) {
    if (GAMEPLAY::IS_STRING_NULL(a_0)) {
        return 1;
    } else if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "") || GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "0")) {
        return 1;
    }
    return 0;
}

auto sub_2999(auto a_0) {
    switch (a_0) {
    case 107:
        return "HUD_MED_BRON";
        break;
    case 108:
        return "HUD_MED_SILV";
        break;
    case 109:
        return "HUD_MED_GOLD";
        break;
    case 110:
        return "HUD_MED_PLAT";
        break;
    }
    return "";
}

auto sub_29ec(auto a_0) {
    for (v_3 = 0; v_3 <= 11; v_3 += 1) {
        if (a_0._f1[v_3/*1*/] == 1) {
            if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&a_0._f14B[v_3/*8*/])) {
                GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT(&a_0._f14B[v_3/*8*/], 0);
                if (!GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED(&a_0._f14B[v_3/*8*/])) {
                    return 0;
                }
            }
        }
    }
    return 1;
}

void sub_2a48(auto a_0) {
    a_0._f1CC = 0;
}

auto sub_2a56(auto a_0) {
    return a_0._f1CC;
}

auto sub_2a63(auto a_0, auto a_1) {
    v_4 = g_25C7F4[a_0/*6*/][sub_2a8f(a_1)/*1*/];
    if (STATS::STAT_GET_INT(v_4, &v_5, -1)) {
        return v_5;
    }
    return 0;
}

auto sub_2a8f(auto a_0) {
    v_3 = a_0;
    if (v_3 == -1) {
        v_4 = sub_c1b();
        if (v_4 > -1) {
            g_25731D = 0;
            v_3 = v_4;
        } else { 
            v_3 = 0;
            g_25731D = 1;
        }
    }
    return v_3;
}

auto sub_2ac3(auto a_0, auto a_1, auto a_2) {
    if (a_2 == 0) {}
    switch (a_0) {
    case 53:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 39:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 51:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 52:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 60:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 10;
        case 3:
            return 30;
        case 4:
            return 60;
        case 5:
            return 120;
        }
        break;
    case 61:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 20;
        case 5:
            return 30;
        }
        break;
    case 62:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 2;
        case 3:
            return 3;
        case 4:
            return 4;
        case 5:
            return 5;
        }
        break;
    case 63:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 2;
        case 3:
            return 3;
        case 4:
            return 4;
        case 5:
            return 5;
        }
        break;
    case 16:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 1;
        case 3:
            return 2;
        case 4:
            return 3;
        case 5:
            return 4;
        }
        break;
    case 0:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 1;
        case 3:
            return 2;
        case 4:
            return 3;
        case 5:
            return 4;
        }
        break;
    case 12:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 10;
        case 3:
            return 25;
        case 4:
            return 50;
        case 5:
            return 100;
        }
        break;
    case 11:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 10;
        case 3:
            return 100;
        case 4:
            return 200;
        case 5:
            return 500;
        }
        break;
    case 19:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 25;
        case 5:
            return 50;
        }
        break;
    case 15:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 17:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 18:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 21:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 25;
        case 5:
            return 50;
        }
        break;
    case 14:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 20;
        }
        break;
    case 1:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 10;
        case 3:
            return 100;
        case 4:
            return 200;
        case 5:
            return 500;
        }
        break;
    case 2:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 10;
        case 3:
            return 25;
        case 4:
            return 50;
        case 5:
            return 100;
        }
        break;
    case 3:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 25;
        case 5:
            return 50;
        }
        break;
    case 4:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 10;
        case 3:
            return 100;
        case 4:
            return 200;
        case 5:
            return 500;
        }
        break;
    case 5:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 10;
        case 3:
            return 100;
        case 4:
            return 200;
        case 5:
            return 500;
        }
        break;
    case 6:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 25;
        case 5:
            return 50;
        }
        break;
    case 7:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 25;
        case 5:
            return 50;
        }
        break;
    case 8:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 25;
        case 5:
            return 50;
        }
        break;
    case 9:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 10;
        case 3:
            return 100;
        case 4:
            return 200;
        case 5:
            return 500;
        }
        break;
    case 10:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 10;
        case 3:
            return 100;
        case 4:
            return 200;
        case 5:
            return 500;
        }
        break;
    case 20:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 22:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 23:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 24:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 25:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 10;
        case 3:
            return 100;
        case 4:
            return 200;
        case 5:
            return 500;
        }
        break;
    case 26:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 10;
        case 3:
            return 100;
        case 4:
            return 200;
        case 5:
            return 500;
        }
        break;
    case 27:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 28:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 29:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 30:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 31:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 32:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 33:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 34:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 35:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 36:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 37:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 25;
        case 5:
            return 50;
        }
        break;
    case 38:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 40:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 25;
        case 5:
            return 50;
        }
        break;
    case 41:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 25;
        case 5:
            return 50;
        }
        break;
    case 42:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 25;
        case 5:
            return 50;
        }
        break;
    case 43:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 10;
        case 3:
            return 25;
        case 4:
            return 50;
        case 5:
            return 100;
        }
        break;
    case 44:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 10;
        case 3:
            return 100;
        case 4:
            return 200;
        case 5:
            return 500;
        }
        break;
    case 45:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 25;
        case 5:
            return 50;
        }
        break;
    case 47:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 49:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 1000;
        case 3:
            return 10000;
        case 4:
            return 25000;
        case 5:
            return 50000;
        }
        break;
    case 48:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 3;
        case 3:
            return 5;
        case 4:
            return 7;
        case 5:
            return 10;
        }
        break;
    case 50:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 54:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 55:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 56:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 10;
        case 3:
            return 250;
        case 4:
            return 500;
        case 5:
            return 1000;
        }
        break;
    case 57:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 58:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 59:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 25;
        case 5:
            return 50;
        }
        break;
    case 46:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 25;
        case 5:
            return 50;
        }
        break;
    case 75:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 25;
        case 5:
            return 50;
        }
        break;
    case 76:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 10;
        case 3:
            return 25;
        case 4:
            return 50;
        case 5:
            return 100;
        }
        break;
    case 77:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 10;
        case 3:
            return 25;
        case 4:
            return 50;
        case 5:
            return 100;
        }
        break;
    case 78:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 10;
        case 3:
            return 25;
        case 4:
            return 50;
        case 5:
            return 100;
        }
        break;
    case 79:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 69:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 25;
        case 5:
            return 50;
        }
        break;
    case 70:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 25;
        case 5:
            return 50;
        }
        break;
    case 71:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 72:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 73:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 74:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 80:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 10;
        case 3:
            return 25;
        case 4:
            return 50;
        case 5:
            return 100;
        }
        break;
    case 81:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 82:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 10;
        case 3:
            return 25;
        case 4:
            return 50;
        case 5:
            return 100;
        }
        break;
    case 83:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 25;
        case 5:
            return 50;
        }
        break;
    case 84:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 25;
        case 5:
            return 50;
        }
        break;
    case 85:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 25;
        case 5:
            return 50;
        }
        break;
    case 86:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 87:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 65:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 25;
        case 5:
            return 50;
        }
        break;
    case 66:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 68:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 67:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 10;
        case 3:
            return 25;
        case 4:
            return 50;
        case 5:
            return 100;
        }
        break;
    }
    return 999;
}

auto sub_457c(auto a_0) {
    v_3 = sub_6892(386, -1, -1) == 0;
    if (v_3) {
        if (sub_45d6(sub_47ba(sub_63df(a_0, v_3), 3), -1)) {
            return 1;
        } else { 
            return 0;
        }
    } else if (sub_45d6(sub_47ba(sub_63df(a_0, v_3), 4), -1)) {
        return 1;
    } else { 
        return 0;
    }
}

auto sub_45d6(auto a_0, auto a_1) {
    if (sub_4660(a_0) == 3015) {
        return 0;
    }
    v_4 = sub_4615(a_0, a_1);
    v_5 = a_0;
    return GAMEPLAY::IS_BIT_SET(v_4, sub_4608(v_5));
}

auto sub_4608(auto a_0) {
    return a_0 % 32;
}

auto sub_4615(auto a_0, auto a_1) {
    v_4 = sub_462e(sub_4660(a_0), a_1, 0);
    return v_4;
}

auto sub_462e(auto a_0, auto a_1, auto a_2) {
    if (a_2 == 0) {}
    v_5 = g_25743C[a_0/*6*/][sub_2a8f(a_1)/*1*/];
    if (STATS::STAT_GET_INT(v_5, &v_6, -1)) {
        return v_6;
    }
    return 0;
}

auto sub_4660(auto a_0) {
    v_3 = a_0;
    v_4 = sub_47ad(v_3);
    if (((sub_c32() == 0) || (sub_c27() == 0)) || ((sub_c32() == 999) && (sub_c27() == 999))) {
        switch (v_4) {
        case 0:
            return 1030;
            break;
        case 1:
            return 1031;
            break;
        case 2:
            return 1032;
            break;
        case 3:
            return 1033;
            break;
        case 4:
            return 1034;
            break;
        case 5:
            return 1493;
            break;
        case 6:
            return 1746;
            break;
        case 7:
            return 1938;
            break;
        case 8:
            return 1939;
            break;
        case 9:
            return 1940;
            break;
        case 10:
            return 1941;
            break;
        case 11:
            return 1942;
            break;
        case 12:
            return 1943;
            break;
        case 13:
            return 2382;
            break;
        case 14:
            return 2402;
            break;
        case 15:
            return 2405;
            break;
        case 16:
            return 2408;
            break;
        }
    }
    return 3015;
}

auto sub_47ad(auto a_0) {
    return a_0 / 32;
}

auto sub_47ba(auto a_0, auto a_1) {
    if (a_1 == 3) {
        if (sub_5660(a_0, &v_4)) {
            return v_4;
        }
    } else if (a_1 == 4) {
        if (sub_482b(a_0, &v_4)) {
            return v_4;
        }
    }
    v_6 = DLC1::_278F76C3B0A8F109(a_1);
    for (v_5 = 0; v_5 < v_6; v_5 += 1) {
        if (DLC1::_FF56381874F82086(a_1, v_5, &v_7)) {
            if (a_0 == v_7._f3) {
                return 129 + v_5;
            }
        }
    }
    return -1;
}

auto sub_482b(auto a_0, auto a_1) {
    v_4 = -1;
    switch (a_0) {
    case ${mp_bea_f_chest_002}:
        v_4 = 0;
        break;
    case ${mp_bea_f_back_001}:
        v_4 = 1;
        break;
    case ${mp_bea_f_larm_000}:
        v_4 = 2;
        break;
    case ${mp_bea_f_back_000}:
        v_4 = 3;
        break;
    case ${mp_bea_f_should_001}:
        v_4 = 4;
        break;
    case ${mp_bea_f_back_002}:
        v_4 = 5;
        break;
    case ${mp_bea_f_rside_000}:
        v_4 = 6;
        break;
    case ${mp_bea_f_rleg_000}:
        v_4 = 7;
        break;
    case ${mp_bea_f_neck_000}:
        v_4 = 8;
        break;
    case ${mp_bea_f_stom_001}:
        v_4 = 9;
        break;
    case ${mp_bea_f_stom_002}:
        v_4 = 10;
        break;
    case ${mp_bea_f_should_000}:
        v_4 = 11;
        break;
    case ${mp_bea_f_chest_000}:
        v_4 = 12;
        break;
    case ${mp_bea_f_chest_001}:
        v_4 = 13;
        break;
    case ${mp_bea_f_stom_000}:
        v_4 = 14;
        break;
    case ${mp_bea_f_rarm_001}:
        v_4 = 15;
        break;
    case ${mp_bea_f_larm_001}:
        v_4 = 16;
        break;
    case ${mp_val_f_tshirt_a}:
        v_4 = 17;
        break;
    case ${mp_val_f_tshirt_b}:
        v_4 = 18;
        break;
    case ${mp_val_f_tshirt_c}:
        v_4 = 19;
        break;
    case ${mp_val_f_tshirt_d}:
        v_4 = 20;
        break;
    case ${mp_val_f_tshirt_e}:
        v_4 = 21;
        break;
    case ${mp_val_f_tshirt_f}:
        v_4 = 22;
        break;
    case ${mp_val_f_tshirt_g}:
        v_4 = 23;
        break;
    case ${mp_val_f_tshirt_h}:
        v_4 = 24;
        break;
    case ${mp_val_f_tshirt_i}:
        v_4 = 25;
        break;
    case ${mp_val_f_tshirt_j}:
        v_4 = 26;
        break;
    case ${mp_val_f_tshirt_k}:
        v_4 = 27;
        break;
    case ${mp_val_f_tshirt_l}:
        v_4 = 28;
        break;
    case ${mp_val_f_tshirt_m}:
        v_4 = 29;
        break;
    case ${mp_val_f_tshirt_n}:
        v_4 = 30;
        break;
    case ${mp_val_f_tshirt_o}:
        v_4 = 31;
        break;
    case ${mp_val_f_tshirt_p}:
        v_4 = 32;
        break;
    case ${mp_val_f_tshirt_q}:
        v_4 = 33;
        break;
    case ${mp_val_f_tshirt_r}:
        v_4 = 34;
        break;
    case ${mp_val_f_tshirt_s}:
        v_4 = 35;
        break;
    case ${mp_val_f_tshirt_t}:
        v_4 = 36;
        break;
    case ${mp_buis_f_back_000}:
        v_4 = 37;
        break;
    case ${mp_buis_f_back_001}:
        v_4 = 38;
        break;
    case ${mp_buis_f_chest_000}:
        v_4 = 39;
        break;
    case ${mp_buis_f_chest_001}:
        v_4 = 40;
        break;
    case ${mp_buis_f_chest_002}:
        v_4 = 41;
        break;
    case ${mp_buis_f_larm_000}:
        v_4 = 42;
        break;
    case ${mp_buis_f_lleg_000}:
        v_4 = 43;
        break;
    case ${mp_buis_f_neck_000}:
        v_4 = 44;
        break;
    case ${mp_buis_f_neck_001}:
        v_4 = 45;
        break;
    case ${mp_buis_f_rarm_000}:
        v_4 = 46;
        break;
    case ${mp_buis_f_rleg_000}:
        v_4 = 47;
        break;
    case ${mp_buis_f_stom_000}:
        v_4 = 48;
        break;
    case ${mp_buis_f_stom_001}:
        v_4 = 49;
        break;
    case ${mp_buis_f_stom_002}:
        v_4 = 50;
        break;
    case ${mp_female_crew_tat_000}:
        v_4 = 51;
        break;
    case ${mp_female_crew_tat_001}:
        v_4 = 52;
        break;
    case ${fm_bus_f_hair_a}:
        v_4 = 53;
        break;
    case ${fm_bus_f_hair_b}:
        v_4 = 54;
        break;
    case ${fm_bus_f_hair_c}:
        v_4 = 55;
        break;
    case ${fm_bus_f_hair_d}:
        v_4 = 56;
        break;
    case ${fm_bus_f_hair_e}:
        v_4 = 57;
        break;
    case 0x7396bbeb:
        v_4 = 58;
        break;
    case 0xc425dd08:
        v_4 = 59;
        break;
    case 0xcef3f2a4:
        v_4 = 60;
        break;
    case 0xa9dba874:
        v_4 = 61;
        break;
    case 0xfc30cd21:
        v_4 = 62;
        break;
    case 0x611e0e3:
        v_4 = 63;
        break;
    case 0xd7db0476:
        v_4 = 64;
        break;
    case 0xe6bca239:
        v_4 = 65;
        break;
    case 0x396ec79c:
        v_4 = 66;
        break;
    case 0x528af9d4:
        v_4 = 67;
        break;
    case 0x99e7872c:
        v_4 = 68;
        break;
    case 0xc74661e9:
        v_4 = 69;
        break;
    case 0xbc7d4c57:
        v_4 = 70;
        break;
    case 0xe1629625:
        v_4 = 71;
        break;
    case 0xfb772ce:
        v_4 = 72;
        break;
    case 0x229d7b3:
        v_4 = 73;
        break;
    case 0x2fb2b2c4:
        v_4 = 74;
        break;
    case 0x249c9c98:
        v_4 = 75;
        break;
    case 0x53ee7b3b:
        v_4 = 76;
        break;
    case 0x39134585:
        v_4 = 77;
        break;
    case 0x9fc80d19:
        v_4 = 78;
        break;
    case 0xa97f2087:
        v_4 = 79;
        break;
    case 0x9735fbf5:
        v_4 = 80;
        break;
    case 0xb6f4bb6a:
        v_4 = 81;
        break;
    case 0x8936dfef:
        v_4 = 82;
        break;
    case 0x926ff261:
        v_4 = 83;
        break;
    case 0x64a916d4:
        v_4 = 84;
        break;
    case 0x6ded295c:
        v_4 = 85;
        break;
    case 0x3fd54d39:
        v_4 = 86;
        break;
    case 0x499460b7:
        v_4 = 87;
        break;
    case 0xd311f2c4:
        v_4 = 88;
        break;
    case 0xa95f9f60:
        v_4 = 89;
        break;
    case 0xb208b0b2:
        v_4 = 90;
        break;
    case 0x83cad437:
        v_4 = 91;
        break;
    case 0x5e8a89b7:
        v_4 = 92;
        break;
    case 0x70542d4a:
        v_4 = 93;
        break;
    case 0x41254ef9:
        v_4 = 94;
        break;
    case 0x4b5b6365:
        v_4 = 95;
        break;
    case 0x1d9987e2:
        v_4 = 96;
        break;
    case 0x3357335d:
        v_4 = 97;
        break;
    case 0x5489f90a:
        v_4 = 98;
        break;
    case 0x6a5e2446:
        v_4 = 99;
        break;
    case 0x7c14c7b3:
        v_4 = 100;
        break;
    }
    switch (a_0) {
    case 0x8ee9ed5d:
        v_4 = 101;
        break;
    case 0x9ca788d8:
        v_4 = 102;
        break;
    case 0xb393b6b0:
        v_4 = 103;
        break;
    case 0xc13e5205:
        v_4 = 104;
        break;
    case 0xd390f6aa:
        v_4 = 105;
        break;
    case 0xe141920f:
        v_4 = 106;
        break;
    case 0xcfa5f9af:
        v_4 = 107;
        break;
    case 0xa16b1d3a:
        v_4 = 108;
        break;
    case 0xab2830b4:
        v_4 = 109;
        break;
    case 0x9acc9009:
        v_4 = 110;
        break;
    case 0xa854ab19:
        v_4 = 111;
        break;
    case 0x41335883:
        v_4 = 112;
        break;
    case 0x3355bcc8:
        v_4 = 113;
        break;
    case 0x23f41e05:
        v_4 = 114;
        break;
    case 0x76b2c385:
        v_4 = 115;
        break;
    case 0xf7e745ec:
        v_4 = 116;
        break;
    case 0x73fb9e0:
        v_4 = 117;
        break;
    case 0xce4247f6:
        v_4 = 118;
        break;
    case 0xe7ec7b4a:
        v_4 = 119;
        break;
    case 0xb9ae9ecf:
        v_4 = 120;
        break;
    case 0xc311b195:
        v_4 = 121;
        break;
    case 0x214d0182:
        v_4 = 122;
        break;
    case 0x21ee82c9:
        v_4 = 123;
        break;
    case 0x20717fcf:
        v_4 = 124;
        break;
    case 0x46f4ccd5:
        v_4 = 125;
        break;
    case 0x34c22870:
        v_4 = 126;
        break;
    case 0x91fd1a6a:
        v_4 = 127;
        break;
    case 0xa34bbd07:
        v_4 = 128;
        break;
    case 0x659b41a3:
        v_4 = 129;
        break;
    case 0x76d0e40e:
        v_4 = 130;
        break;
    case 0x492388b4:
        v_4 = 131;
        break;
    case 0xe03796f2:
        v_4 = 132;
        break;
    case 0x1271fb66:
        v_4 = 133;
        break;
    case 0x4a35fc9:
        v_4 = 134;
        break;
    case 0xef41353d:
        v_4 = 135;
        break;
    case 0x4a51eb29:
        v_4 = 136;
        break;
    case 0x12c3fc42:
        v_4 = 137;
        break;
    case 0xfe78d3ac:
        v_4 = 138;
        break;
    case 0x14f4806f:
        v_4 = 139;
        break;
    case 0x8727e4d4:
        v_4 = 140;
        break;
    case 0x39614948:
        v_4 = 141;
        break;
    case 0xf9b69257:
        v_4 = 142;
        break;
    case 0x2db4fa53:
        v_4 = 143;
        break;
    case 0x1c21d72d:
        v_4 = 144;
        break;
    case 0x42e8a4ba:
        v_4 = 145;
        break;
    case 0x309c0021:
        v_4 = 146;
        break;
    case 0x450428ed:
        v_4 = 147;
        break;
    case 0x33370553:
        v_4 = 148;
        break;
    case 0x791e1128:
        v_4 = 149;
        break;
    case 0x57b7ce54:
        v_4 = 150;
        break;
    case 0x9be956be:
        v_4 = 151;
        break;
    case 0xed8ef6a8:
        v_4 = 152;
        break;
    case 0x1fde5b46:
        v_4 = 153;
        break;
    case 0xd2243fd3:
        v_4 = 154;
        break;
    case 0x5b421729:
        v_4 = 155;
        break;
    case 0x766a4d79:
        v_4 = 156;
        break;
    case 0x7fb86015:
        v_4 = 157;
        break;
    case 0x71e18a:
        v_4 = 158;
        break;
    case 0x125c855f:
        v_4 = 159;
        break;
    case 0x2ceeba83:
        v_4 = 160;
        break;
    case 0x3ec05e26:
        v_4 = 161;
        break;
    case 0xd6880dbb:
        v_4 = 162;
        break;
    case 0xc449693e:
        v_4 = 163;
        break;
    case 0xab0936be:
        v_4 = 164;
        break;
    case 0x54336010:
        v_4 = 165;
        break;
    case 0x4559c25d:
        v_4 = 166;
        break;
    case 0x37a026ea:
        v_4 = 167;
        break;
    case 0xafb616c4:
        v_4 = 168;
        break;
    case 0x4d541059:
        v_4 = 169;
        break;
    case 0xcdf19192:
        v_4 = 170;
        break;
    case 0xdfb0350f:
        v_4 = 171;
        break;
    case 0x57c0449d:
        v_4 = 172;
        break;
    case 0x6a4969af:
        v_4 = 173;
        break;
    case 0x3c068d2a:
        v_4 = 174;
        break;
    case 0xcc19ad16:
        v_4 = 175;
        break;
    case 0x20a2d663:
        v_4 = 176;
        break;
    case 0x337dfc19:
        v_4 = 177;
        break;
    case 0x82e01aa4:
        v_4 = 178;
        break;
    case 0x91223728:
        v_4 = 179;
        break;
    case 0xde905203:
        v_4 = 180;
        break;
    case 0xfc750cb0:
        v_4 = 181;
        break;
    case 0x2d1fee05:
        v_4 = 182;
        break;
    case 0x1b284a16:
        v_4 = 183;
        break;
    case 0x97a9431e:
        v_4 = 184;
        break;
    case 0xc5599e7e:
        v_4 = 185;
        break;
    case 0xf228781b:
        v_4 = 186;
        break;
    case 0x5ce14d8b:
        v_4 = 187;
        break;
    case 0x7b6a8aa1:
        v_4 = 188;
        break;
    case 0xb848e6a4:
        v_4 = 189;
        break;
    case 0x82147a3c:
        v_4 = 190;
        break;
    case 0x73c6dda1:
        v_4 = 191;
        break;
    case 0x91f199f6:
        v_4 = 192;
        break;
    case 0x3aefd73:
        v_4 = 193;
        break;
    case 0xad3d508d:
        v_4 = 194;
        break;
    case 0x9f02b418:
        v_4 = 195;
        break;
    case 0x5ae968af:
        v_4 = 196;
        break;
    case 0xff52f2a1:
        v_4 = 197;
        break;
    case 0x1ec26307:
        v_4 = 198;
        break;
    case 0xc2549d88:
        v_4 = 199;
        break;
    }
    switch (a_0) {
    case 0x3cf43504:
        v_4 = 200;
        break;
    case 0x9c089fbe:
        v_4 = 201;
        break;
    case 0xbca2504c:
        v_4 = 202;
        break;
    case 0x633dee6:
        v_4 = 203;
        break;
    case 0x33d4ba23:
        v_4 = 204;
        break;
    case 0x479ae1af:
        v_4 = 205;
        break;
    case 0x3d54cd23:
        v_4 = 206;
        break;
    case 0x9d8e0d90:
        v_4 = 207;
        break;
    case 0xcad0e815:
        v_4 = 208;
        break;
    case 0xc27cd76d:
        v_4 = 209;
        break;
    case 0xf0c2b3f8:
        v_4 = 210;
        break;
    case 0x70a933c3:
        v_4 = 211;
        break;
    case 0xe7c0a2d0:
        v_4 = 212;
        break;
    case 0xdcae8cac:
        v_4 = 213;
        break;
    case 0xc3e6bcb:
        v_4 = 214;
        break;
    case 0x813455b5:
        v_4 = 215;
        break;
    case 0xaec730de:
        v_4 = 216;
        break;
    case 0xa3a11a92:
        v_4 = 217;
        break;
    case 0x355836:
        v_4 = 218;
        break;
    case 0xeefb35c2:
        v_4 = 219;
        break;
    case 0x71b044ba:
        v_4 = 220;
        break;
    case 0x7f56e007:
        v_4 = 221;
        break;
    case 0x5d7c0ba4:
        v_4 = 222;
        break;
    case 0x3fb5d014:
        v_4 = 223;
        break;
    case 0xa1108caf:
        v_4 = 224;
        break;
    case 0x2e117694:
        v_4 = 225;
        break;
    case 0x88d62c24:
        v_4 = 226;
        break;
    case 0xd39cc1b0:
        v_4 = 227;
        break;
    case 0xe6aa67cb:
        v_4 = 228;
        break;
    case 0xd0693b49:
        v_4 = 229;
        break;
    case 0x5240bef2:
        v_4 = 230;
        break;
    case 0x9bc75206:
        v_4 = 231;
        break;
    case 0xa75f6936:
        v_4 = 232;
        break;
    case 0x78158aa3:
        v_4 = 233;
        break;
    case 0x1369c141:
        v_4 = 234;
        break;
    case 0xb9240dd3:
        v_4 = 235;
        break;
    case 0x96c94922:
        v_4 = 236;
        break;
    case 0xab9572ba:
        v_4 = 237;
        break;
    case 0x82271fde:
        v_4 = 238;
        break;
    case 0x8fe8bb61:
        v_4 = 239;
        break;
    case 0x54b744f7:
        v_4 = 240;
        break;
    case 0x62ade0e4:
        v_4 = 241;
        break;
    case 0x38638c50:
        v_4 = 242;
        break;
    case 0x46db293f:
        v_4 = 243;
        break;
    case 0x1db5d6f9:
        v_4 = 244;
        break;
    case 0x1340b5a3:
        v_4 = 245;
        break;
    case 0xb1007124:
        v_4 = 246;
        break;
    case 0xce91ac46:
        v_4 = 247;
        break;
    case 0xe05f4fe1:
        v_4 = 248;
        break;
    case 0xee2ceb7c:
        v_4 = 249;
        break;
    case 0x6c04e72a:
        v_4 = 250;
        break;
    case 0x79cd82bf:
        v_4 = 251;
        break;
    case 0x977fbe23:
        v_4 = 252;
        break;
    case 0xa5115946:
        v_4 = 253;
        break;
    case 0x1d91310:
        v_4 = 254;
        break;
    case 0x90d662b0:
        v_4 = 255;
        break;
    case 0x8065c1cf:
        v_4 = 256;
        break;
    case 0xd51dba5:
        v_4 = 257;
        break;
    case 0xfafeb6ff:
        v_4 = 258;
        break;
    case 0xe7c01082:
        v_4 = 259;
        break;
    case 0xc717cf32:
        v_4 = 260;
        break;
    case 0x9c217d3a:
        v_4 = 261;
        break;
    case 0x7dde40b4:
        v_4 = 262;
        break;
    case 0xe73d9345:
        v_4 = 263;
        break;
    case 0x197b77c0:
        v_4 = 264;
        break;
    case 0x5d9705b5:
        v_4 = 265;
        break;
    case 0x9f73095c:
        v_4 = 266;
        break;
    case 0xd57f7574:
        v_4 = 267;
        break;
    case 0x386a1a2e:
        v_4 = 268;
        break;
    case 0xab297fab:
        v_4 = 269;
        break;
    case 0x1a945fc1:
        v_4 = 270;
        break;
    case 0x2871fb7c:
        v_4 = 271;
        break;
    case 0xcd0f59cd:
        v_4 = 272;
        break;
    case 0x9a33f417:
        v_4 = 273;
        break;
    case 0x63dd47ac:
        v_4 = 274;
        break;
    }
    if (v_4 != -1) {
        a_1 = 129 + v_4;
        return 1;
    }
    return 0;
}

auto sub_5660(auto a_0, auto a_1) {
    v_4 = -1;
    switch (a_0) {
    case ${mp_bea_m_larm_001}:
        v_4 = 0;
        break;
    case ${mp_bea_m_back_000}:
        v_4 = 1;
        break;
    case ${mp_bea_m_chest_000}:
        v_4 = 2;
        break;
    case ${mp_bea_m_chest_001}:
        v_4 = 3;
        break;
    case ${mp_bea_m_head_000}:
        v_4 = 4;
        break;
    case ${mp_bea_m_head_001}:
        v_4 = 5;
        break;
    case ${mp_bea_m_stom_000}:
        v_4 = 6;
        break;
    case ${mp_bea_m_larm_000}:
        v_4 = 7;
        break;
    case ${mp_bea_m_rleg_000}:
        v_4 = 8;
        break;
    case ${mp_bea_m_rarm_000}:
        v_4 = 9;
        break;
    case ${mp_bea_m_lleg_000}:
        v_4 = 10;
        break;
    case ${mp_bea_m_neck_000}:
        v_4 = 11;
        break;
    case ${mp_bea_m_neck_001}:
        v_4 = 12;
        break;
    case ${mp_bea_m_rarm_001}:
        v_4 = 13;
        break;
    case ${mp_bea_m_head_002}:
        v_4 = 14;
        break;
    case ${mp_bea_m_stom_001}:
        v_4 = 15;
        break;
    case 0xd69bb0a5:
        v_4 = 16;
        break;
    case 0xa867d43e:
        v_4 = 17;
        break;
    case 0xa5eccf44:
        v_4 = 18;
        break;
    case 0xaf5fe22a:
        v_4 = 19;
        break;
    case 0x8b2899bc:
        v_4 = 20;
        break;
    case 0x9d363dd7:
        v_4 = 21;
        break;
    case 0x6ce35d32:
        v_4 = 22;
        break;
    case 0x7698709c:
        v_4 = 23;
        break;
    case 0x484e9409:
        v_4 = 24;
        break;
    case 0x24344bd5:
        v_4 = 25;
        break;
    case 0x3427ebb8:
        v_4 = 26;
        break;
    case 0x58a834b8:
        v_4 = 27;
        break;
    case 0xfbd22e3:
        v_4 = 28;
        break;
    case 0x5e80f39:
        v_4 = 29;
        break;
    case 0xf171e64d:
        v_4 = 30;
        break;
    case 0xdfc442f2:
        v_4 = 31;
        break;
    case 0xd695b095:
        v_4 = 32;
        break;
    case 0xcd369dd7:
        v_4 = 33;
        break;
    case 0xa5d6cf14:
        v_4 = 34;
        break;
    case 0xd29ea8a3:
        v_4 = 35;
        break;
    case ${mp_buis_m_back_000}:
        v_4 = 36;
        break;
    case ${mp_buis_m_chest_000}:
        v_4 = 37;
        break;
    case ${mp_buis_m_chest_001}:
        v_4 = 38;
        break;
    case ${mp_buis_m_leftarm_000}:
        v_4 = 39;
        break;
    case ${mp_buis_m_leftarm_001}:
        v_4 = 40;
        break;
    case ${mp_buis_m_neck_000}:
        v_4 = 41;
        break;
    case ${mp_buis_m_neck_001}:
        v_4 = 42;
        break;
    case ${mp_buis_m_neck_002}:
        v_4 = 43;
        break;
    case ${mp_buis_m_neck_003}:
        v_4 = 44;
        break;
    case ${mp_buis_m_rightarm_000}:
        v_4 = 45;
        break;
    case ${mp_buis_m_rightarm_001}:
        v_4 = 46;
        break;
    case ${mp_buis_m_stomach_000}:
        v_4 = 47;
        break;
    case ${mp_male_crew_tat_000}:
        v_4 = 48;
        break;
    case ${mp_male_crew_tat_001}:
        v_4 = 49;
        break;
    case ${fm_bus_m_hair_000_a}:
        v_4 = 50;
        break;
    case ${fm_bus_m_hair_000_b}:
        v_4 = 51;
        break;
    case ${fm_bus_m_hair_000_c}:
        v_4 = 52;
        break;
    case ${fm_bus_m_hair_000_d}:
        v_4 = 53;
        break;
    case ${fm_bus_m_hair_000_e}:
        v_4 = 54;
        break;
    case ${fm_bus_m_hair_001_a}:
        v_4 = 55;
        break;
    case ${fm_bus_m_hair_001_b}:
        v_4 = 56;
        break;
    case ${fm_bus_m_hair_001_c}:
        v_4 = 57;
        break;
    case ${fm_bus_m_hair_001_d}:
        v_4 = 58;
        break;
    case ${fm_bus_m_hair_001_e}:
        v_4 = 59;
        break;
    case 0x44fd42a7:
        v_4 = 60;
        break;
    case 0x291bdd1:
        v_4 = 61;
        break;
    case 0xefe21872:
        v_4 = 62;
        break;
    case 0x1e1c74e6:
        v_4 = 63;
        break;
    case 0xf2dd709:
        v_4 = 64;
        break;
    case 0xc569c382:
        v_4 = 65;
        break;
    case 0xbb18aee0:
        v_4 = 66;
        break;
    case 0x705f996f:
        v_4 = 67;
        break;
    case 0xd69665db:
        v_4 = 68;
        break;
    case 0x8bc25034:
        v_4 = 69;
        break;
    case 0x16e5f311:
        v_4 = 70;
        break;
    case 0xe9fa993b:
        v_4 = 71;
        break;
    case 0xfab03aa6:
        v_4 = 72;
        break;
    case 0x6d73202e:
        v_4 = 73;
        break;
    case 0xc421cd8a:
        v_4 = 74;
        break;
    case 0xd30d6b61:
        v_4 = 75;
        break;
    case 0xb7d634f3:
        v_4 = 76;
        break;
    case 0x4f6ae432:
        v_4 = 77;
        break;
    case 0x20f50747:
        v_4 = 78;
        break;
    case 0x33542c05:
        v_4 = 79;
        break;
    case 0x9d6cff09:
        v_4 = 80;
        break;
    case 0xfacd39c8:
        v_4 = 81;
        break;
    case 0x4ca15d6f:
        v_4 = 82;
        break;
    case 0x1f30028d:
        v_4 = 83;
        break;
    case 0x3110a64e:
        v_4 = 84;
        break;
    case 0xb593af56:
        v_4 = 85;
        break;
    case 0x75a52e2:
        v_4 = 86;
        break;
    case 0x1608f03f:
        v_4 = 87;
        break;
    case 0xebe79bfd:
        v_4 = 88;
        break;
    case 0x532eea9a:
        v_4 = 89;
        break;
    case 0x6a3f1bea:
        v_4 = 90;
        break;
    case 0xd8a178ad:
        v_4 = 91;
        break;
    case 0xbedc4523:
        v_4 = 92;
        break;
    case 0x1f4185ec:
        v_4 = 93;
        break;
    case 0x92f8ed89:
        v_4 = 94;
        break;
    case 0x7ca7c0e7:
        v_4 = 95;
        break;
    case 0x6e5d2452:
        v_4 = 96;
        break;
    case 0xe618139a:
        v_4 = 97;
        break;
    case 0x545b701f:
        v_4 = 98;
        break;
    case 0x4aa45cb1:
        v_4 = 99;
        break;
    case 0x354330f3:
        v_4 = 100;
        break;
    }
    switch (a_0) {
    case 0x1942f8f3:
        v_4 = 101;
        break;
    case 0xaa889b80:
        v_4 = 102;
        break;
    case 0xe44e8f0b:
        v_4 = 103;
        break;
    case 0xee0ba285:
        v_4 = 104;
        break;
    case 0xd62bf2a6:
        v_4 = 105;
        break;
    case 0xcaef5c2d:
        v_4 = 106;
        break;
    case 0xb92cb8a8:
        v_4 = 107;
        break;
    case 0xf6d6528:
        v_4 = 108;
        break;
    case 0x398ea4f7:
        v_4 = 109;
        break;
    case 0x2ad8078a:
        v_4 = 110;
        break;
    case 0x74d29b7e:
        v_4 = 111;
        break;
    case 0x478940ec:
        v_4 = 112;
        break;
    case 0x90465265:
        v_4 = 113;
        break;
    case 0x9be4c61b:
        v_4 = 114;
        break;
    case 0x8a3522bc:
        v_4 = 115;
        break;
    case 0x79778141:
        v_4 = 116;
        break;
    case 0xf1fbf258:
        v_4 = 117;
        break;
    case 0xe5a9d9b4:
        v_4 = 118;
        break;
    case 0xd868c8fd:
        v_4 = 119;
        break;
    case 0xe9d96bde:
        v_4 = 120;
        break;
    case 0xb487013a:
        v_4 = 121;
        break;
    case 0xc64ca4c5:
        v_4 = 122;
        break;
    case 0xec9b5be:
        v_4 = 123;
        break;
    case 0x20e0d9ec:
        v_4 = 124;
        break;
    case 0x6ba4ef73:
        v_4 = 125;
        break;
    case 0xfd6612f7:
        v_4 = 126;
        break;
    case 0x45df23e8:
        v_4 = 127;
        break;
    case 0x57bcc7a3:
        v_4 = 128;
        break;
    case 0x815b9bbc:
        v_4 = 129;
        break;
    case 0x931e3f41:
        v_4 = 130;
        break;
    case 0xca542db4:
        v_4 = 131;
        break;
    case 0xee957636:
        v_4 = 132;
        break;
    case 0x25fa64ff:
        v_4 = 133;
        break;
    case 0xb82f896b:
        v_4 = 134;
        break;
    case 0x135bbfc2:
        v_4 = 135;
        break;
    case 0x139cc044:
        v_4 = 136;
        break;
    case 0x6e8ff629:
        v_4 = 137;
        break;
    case 0xc91a9d:
        v_4 = 138;
        break;
    case 0x713d015f:
        v_4 = 139;
        break;
    case 0x8365a5b0:
        v_4 = 140;
        break;
    case 0x949fc824:
        v_4 = 141;
        break;
    case 0x38dcae02:
        v_4 = 142;
        break;
    case 0x22e38210:
        v_4 = 143;
        break;
    case 0x1d2ef6a7:
        v_4 = 144;
        break;
    case 0xc875558:
        v_4 = 145;
        break;
    case 0x6de01818:
        v_4 = 146;
        break;
    case 0xa099fd8b:
        v_4 = 147;
        break;
    case 0x53646311:
        v_4 = 148;
        break;
    case 0x45b2c7ae:
        v_4 = 149;
        break;
    case 0x87154a76:
        v_4 = 150;
        break;
    case 0xb0609d0c:
        v_4 = 151;
        break;
    case 0xa98c8e50:
        v_4 = 152;
        break;
    case 0xb7e32afd:
        v_4 = 153;
        break;
    case 0x7b1eb175:
        v_4 = 154;
        break;
    case 0xd8686c07:
        v_4 = 155;
        break;
    case 0x63e7b8ea:
        v_4 = 156;
        break;
    case 0x98da22d2:
        v_4 = 157;
        break;
    case 0x96a71e6c:
        v_4 = 158;
        break;
    case 0x87d4ab7c:
        v_4 = 159;
        break;
    case 0x758986e6:
        v_4 = 160;
        break;
    case 0xea5ff091:
        v_4 = 161;
        break;
    case 0xd82dcc2d:
        v_4 = 162;
        break;
    case 0xcf0c39ea:
        v_4 = 163;
        break;
    case 0xbf6b9aa9:
        v_4 = 164;
        break;
    case 0x20c95d63:
        v_4 = 165;
        break;
    case 0x55c8c769:
        v_4 = 166;
        break;
    case 0x404a3da:
        v_4 = 167;
        break;
    case 0x88d42e9b:
        v_4 = 168;
        break;
    case 0x571d4b2e:
        v_4 = 169;
        break;
    case 0x9306c300:
        v_4 = 170;
        break;
    case 0xb15dffae:
        v_4 = 171;
        break;
    case 0xb66c89cb:
        v_4 = 172;
        break;
    case 0xc4daa6a7:
        v_4 = 173;
        break;
    case 0xd9f2d0d7:
        v_4 = 174;
        break;
    case 0xfd8617fd:
        v_4 = 175;
        break;
    case 0x8cabb916:
        v_4 = 176;
        break;
    case 0x7f151de9:
        v_4 = 177;
        break;
    case 0x685ef07d:
        v_4 = 178;
        break;
    case 0x5a9354e6:
        v_4 = 179;
        break;
    case 0x8ae63573:
        v_4 = 180;
        break;
    case 0x77940ecf:
        v_4 = 181;
        break;
    case 0x6159e25b:
        v_4 = 182;
        break;
    case 0x25b99291:
        v_4 = 183;
        break;
    case 0xf4ac37ac:
        v_4 = 184;
        break;
    case 0x28f2a05:
        v_4 = 185;
        break;
    case 0xa9106a68:
        v_4 = 186;
        break;
    case 0xdbe0f2df:
        v_4 = 187;
        break;
    case 0xdb709e8d:
        v_4 = 188;
        break;
    case 0xe56621d3:
        v_4 = 189;
        break;
    case 0x2c10f3d1:
        v_4 = 190;
        break;
    case 0x1d8656bc:
        v_4 = 191;
        break;
    case 0x9b76d29b:
        v_4 = 192;
        break;
    case 0x46c7293d:
        v_4 = 193;
        break;
    case 0x39018db2:
        v_4 = 194;
        break;
    case 0x622be006:
        v_4 = 195;
        break;
    case 0xe47e64a9:
        v_4 = 196;
        break;
    case 0x8fbebb2b:
        v_4 = 197;
        break;
    case 0x81fb1fa4:
        v_4 = 198;
        break;
    case 0x12babded:
        v_4 = 199;
        break;
    case 0x59a1cbba:
        v_4 = 200;
        break;
    }
    switch (a_0) {
    case 0x6f01f67a:
        v_4 = 201;
        break;
    case 0x2a3a6cf0:
        v_4 = 202;
        break;
    case 0xb8090887:
        v_4 = 203;
        break;
    case 0x6a7a5cb:
        v_4 = 204;
        break;
    case 0xfe46634a:
        v_4 = 205;
        break;
    case 0x93178cee:
        v_4 = 206;
        break;
    case 0xe0f70831:
        v_4 = 207;
        break;
    case 0xf385ad4e:
        v_4 = 208;
        break;
    case 0xee805531:
        v_4 = 209;
        break;
    case 0x13e7aad:
        v_4 = 210;
        break;
    case 0xfaa56790:
        v_4 = 211;
        break;
    case 0x93821599:
        v_4 = 212;
        break;
    case 0xa150b136:
        v_4 = 213;
        break;
    case 0xb706dca2:
        v_4 = 214;
        break;
    case 0xc4be7811:
        v_4 = 215;
        break;
    case 0xcc2786e7:
        v_4 = 216;
        break;
    case 0xda402318:
        v_4 = 217;
        break;
    case 0xeda249dc:
        v_4 = 218;
        break;
    case 0xfdb7ea07:
        v_4 = 219;
        break;
    case 0x211f30d5:
        v_4 = 220;
        break;
    case 0x37665d63:
        v_4 = 221;
        break;
    case 0x8347f445:
        v_4 = 222;
        break;
    case 0x718150b8:
        v_4 = 223;
        break;
    case 0xa0abaf0c:
        v_4 = 224;
        break;
    case 0x8eee0b91:
        v_4 = 225;
        break;
    case 0xc3b0f516:
        v_4 = 226;
        break;
    case 0xb18350bb:
        v_4 = 227;
        break;
    case 0xe732bc1d:
        v_4 = 228;
        break;
    case 0xfd23e7ff:
        v_4 = 229;
        break;
    case 0xeaa64304:
        v_4 = 230;
        break;
    case 0x209caef0:
        v_4 = 231;
        break;
    case 0x430960c9:
        v_4 = 232;
        break;
    case 0x34f5c4a2:
        v_4 = 233;
        break;
    case 0x27afaa16:
        v_4 = 234;
        break;
    case 0x19810db9:
        v_4 = 235;
        break;
    case 0x42d7606d:
        v_4 = 236;
        break;
    case 0x350fc4de:
        v_4 = 237;
        break;
    case 0x26cda85a:
        v_4 = 238;
        break;
    case 0x19330d25:
        v_4 = 239;
        break;
    case 0x61301d1e:
        v_4 = 240;
        break;
    case 0x8c0772cc:
        v_4 = 241;
        break;
    case 0xda917ddf:
        v_4 = 242;
        break;
    case 0x6446914b:
        v_4 = 243;
        break;
    case 0x3ce9c28e:
        v_4 = 244;
        break;
    case 0x4ea46603:
        v_4 = 245;
        break;
    case 0x216d0b95:
        v_4 = 246;
        break;
    case 0x332eaf18:
        v_4 = 247;
        break;
    case 0xfe274392:
        v_4 = 248;
        break;
    case 0xec72a029:
        v_4 = 249;
        break;
    case 0xa9791a37:
        v_4 = 250;
        break;
    case 0xff7e733:
        v_4 = 251;
        break;
    case 0x5d9705b5:
        v_4 = 252;
        break;
    case 0x9f73095c:
        v_4 = 253;
        break;
    case 0xd57f7574:
        v_4 = 254;
        break;
    case 0x386a1a2e:
        v_4 = 255;
        break;
    case 0xab297fab:
        v_4 = 256;
        break;
    case 0x1a945fc1:
        v_4 = 257;
        break;
    case 0x2871fb7c:
        v_4 = 258;
        break;
    case 0xcd0f59cd:
        v_4 = 259;
        break;
    case 0x9a33f417:
        v_4 = 260;
        break;
    case 0xcc89b230:
        v_4 = 261;
        break;
    }
    if (v_4 != -1) {
        a_1 = 129 + v_4;
        return 1;
    }
    return 0;
}

auto sub_63df(auto a_0, auto a_1) {
    switch (a_0) {
    case 0:
        if (a_1) {
            return 0xda917ddf;
        } else { 
            return 0x90d662b0;
        }
        break;
    case 1:
        if (a_1) {
            return 0x6446914b;
        } else { 
            return 0x8065c1cf;
        }
        break;
    case 2:
        if (a_1) {
            return 0x3ce9c28e;
        } else { 
            return 0xd51dba5;
        }
        break;
    case 3:
        if (a_1) {
            return 0x4ea46603;
        } else { 
            return 0xfafeb6ff;
        }
        break;
    case 4:
        if (a_1) {
            return 0x216d0b95;
        } else { 
            return 0xe7c01082;
        }
        break;
    case 5:
        if (a_1) {
            return 0x332eaf18;
        } else { 
            return 0xc717cf32;
        }
        break;
    case 6:
        if (a_1) {
            return 0xfe274392;
        } else { 
            return 0x9c217d3a;
        }
        break;
    case 7:
        if (a_1) {
            return 0xec72a029;
        } else { 
            return 0x7dde40b4;
        }
        break;
    case 8:
        if (a_1) {
            return 0xa9791a37;
        } else { 
            return 0xe73d9345;
        }
        break;
    case 9:
        if (a_1) {
            return 0xff7e733;
        } else { 
            return 0x197b77c0;
        }
        break;
    case 10:
        if (a_1) {
            return 0x38dcae02;
        } else { 
            return 0x5b421729;
        }
        break;
    case 11:
        if (a_1) {
            return 0x22e38210;
        } else { 
            return 0x766a4d79;
        }
        break;
    case 12:
        if (a_1) {
            return 0x1d2ef6a7;
        } else { 
            return 0x7fb86015;
        }
        break;
    case 13:
        if (a_1) {
            return 0xc875558;
        } else { 
            return 0x71e18a;
        }
        break;
    case 14:
        if (a_1) {
            return 0x6de01818;
        } else { 
            return 0x125c855f;
        }
        break;
    case 15:
        if (a_1) {
            return 0xa099fd8b;
        } else { 
            return 0x2ceeba83;
        }
        break;
    case 16:
        if (a_1) {
            return 0x53646311;
        } else { 
            return 0x3ec05e26;
        }
        break;
    case 17:
        if (a_1) {
            return 0x45b2c7ae;
        } else { 
            return 0xd6880dbb;
        }
        break;
    case 18:
        if (a_1) {
            return 0x87154a76;
        } else { 
            return 0xc449693e;
        }
        break;
    case 19:
        if (a_1) {
            return 0xb0609d0c;
        } else { 
            return 0xab0936be;
        }
        break;
    case 20:
        if (a_1) {
            return 0xa98c8e50;
        } else { 
            return 0x54336010;
        }
        break;
    case 21:
        if (a_1) {
            return 0xb7e32afd;
        } else { 
            return 0x4559c25d;
        }
        break;
    case 22:
        if (a_1) {
            return 0x7b1eb175;
        } else { 
            return 0x37a026ea;
        }
        break;
    case 23:
        if (a_1) {
            return 0xd8686c07;
        } else { 
            return 0xafb616c4;
        }
        break;
    case 24:
        if (a_1) {
            return 0x63e7b8ea;
        } else { 
            return 0x4d541059;
        }
        break;
    case 25:
        if (a_1) {
            return 0x98da22d2;
        } else { 
            return 0xcdf19192;
        }
        break;
    case 26:
        if (a_1) {
            return 0x96a71e6c;
        } else { 
            return 0xdfb0350f;
        }
        break;
    case 27:
        if (a_1) {
            return 0x25b99291;
        } else { 
            return 0x5ae968af;
        }
        break;
    case 28:
        if (a_1) {
            return 0xf4ac37ac;
        } else { 
            return 0xff52f2a1;
        }
        break;
    case 29:
        if (a_1) {
            return 0x28f2a05;
        } else { 
            return 0x1ec26307;
        }
        break;
    case 30:
        if (a_1) {
            return 0xa9106a68;
        } else { 
            return 0xc2549d88;
        }
        break;
    case 31:
        if (a_1) {
            return 0xdbe0f2df;
        } else { 
            return 0x3cf43504;
        }
        break;
    case 32:
        if (a_1) {
            return 0xdb709e8d;
        } else { 
            return 0x9c089fbe;
        }
        break;
    case 33:
        if (a_1) {
            return 0xe56621d3;
        } else { 
            return 0xbca2504c;
        }
        break;
    case 34:
        if (a_1) {
            return 0xcc89b230;
        } else { 
            return 0x63dd47ac;
        }
        break;
    case 35:
        if (a_1) {
            return 0x28014457;
        } else { 
            return 0x71f11d42;
        }
        break;
    }
    return 0;
}

auto sub_6892(auto a_0, auto a_1, auto a_2) {
    if (a_1 == -1) {
        a_1 = sub_c1b();
    }
    v_5 = 0;
    v_6 = sub_6a52(a_0, a_1);
    v_7 = sub_68d8(a_0);
    if (0 != v_6) {
        if (!STATS::STAT_GET_MASKED_INT(v_6, &v_5, v_7, 8, a_2)) {
            v_5 = 0;
        }
    }
    return v_5;
}

auto sub_68d8(auto a_0) {
    v_3 = 0;
    if ((a_0 >= 384) && (a_0 < 457)) {
        v_3 = ((a_0 - 384) - (STATS::_94F12ABF9C79E339(a_0 - 384) * 8)) * 8;
    } else if ((a_0 >= 457) && (a_0 < 513)) {
        v_3 = ((a_0 - 457) - (STATS::_94F12ABF9C79E339(a_0 - 457) * 8)) * 8;
    } else if ((a_0 >= 1281) && (a_0 < 1305)) {
        v_3 = ((a_0 - 1281) - (STATS::_94F12ABF9C79E339(a_0 - 1281) * 8)) * 8;
    } else if ((a_0 >= 1305) && (a_0 < 1361)) {
        v_3 = ((a_0 - 1305) - (STATS::_94F12ABF9C79E339(a_0 - 1305) * 8)) * 8;
    } else if ((a_0 >= 1361) && (a_0 < 1393)) {
        v_3 = ((a_0 - 1361) - (STATS::_94F12ABF9C79E339(a_0 - 1361) * 8)) * 8;
    } else if ((a_0 >= 1393) && (a_0 < 2919)) {
        v_3 = ((a_0 - 1393) - (STATS::_94F12ABF9C79E339(a_0 - 1393) * 8)) * 8;
    } else if ((a_0 >= 4831) && (a_0 < 4895)) {
        v_3 = ((a_0 - 4831) - (STATS::_94F12ABF9C79E339(a_0 - 4831) * 8)) * 8;
    } else if ((a_0 >= 3879) && (a_0 < 4831)) {
        v_3 = ((a_0 - 3879) - (STATS::_94F12ABF9C79E339(a_0 - 3879) * 8)) * 8;
    }
    return v_3;
}

auto sub_6a52(auto a_0, auto a_1) {
    if (a_1 == -1) {
        a_1 = sub_c1b();
    }
    v_4 = 0;
    if ((a_0 >= 384) && (a_0 < 457)) {
        v_4 = STATS::_61E111E323419E07(a_0 - 384, 0, 1, a_1);
    } else if ((a_0 >= 457) && (a_0 < 513)) {
        v_4 = STATS::_61E111E323419E07(a_0 - 457, 1, 1, a_1);
    } else if ((a_0 >= 1281) && (a_0 < 1305)) {
        v_4 = STATS::_61E111E323419E07(a_0 - 1281, 0, 0, 0);
    } else if ((a_0 >= 1305) && (a_0 < 1361)) {
        v_4 = STATS::_61E111E323419E07(a_0 - 1305, 1, 0, 0);
    } else if ((a_0 >= 1361) && (a_0 < 1393)) {
        v_4 = STATS::_D16C2AD6B8E32854(a_0 - 1361, 0, 0, 0);
    } else if ((a_0 >= 1393) && (a_0 < 2919)) {
        v_4 = STATS::_D16C2AD6B8E32854(a_0 - 1393, 0, 1, a_1);
    } else if ((a_0 >= 4831) && (a_0 < 4895)) {
        v_4 = STATS::_2B4CDCA6F07FF3DA(a_0 - 4831, 0, 0, 0, "_NGPSTAT_INT");
    } else if ((a_0 >= 3879) && (a_0 < 4831)) {
        v_4 = STATS::_2B4CDCA6F07FF3DA(a_0 - 3879, 0, 1, a_1, "_NGPSTAT_INT");
    }
    return v_4;
}

void sub_6ba4(auto a_0) {
    switch (a_0) {
    case 0:
        v_3 = "CLO_HST_A_0";
        v_4 = "CLO_HST_AD_0";
        v_5 = "DeathDefying";
        v_6 = "MPTShirtAwards2";
        v_7 = 79;
        break;
    case 1:
        v_3 = "CLO_HST_A_1";
        v_4 = "CLO_HST_AD_1";
        v_5 = "ForHire";
        v_6 = "MPTShirtAwards2";
        v_7 = 71;
        break;
    case 2:
        v_3 = "CLO_HST_A_2";
        v_4 = "CLO_HST_AD_3";
        v_5 = "LiveALittle";
        v_6 = "MPTShirtAwards2";
        v_7 = 77;
        break;
    case 5:
        v_3 = "CLO_HST_A_5";
        v_4 = "CLO_HST_AD_6";
        v_5 = "Decorated";
        v_6 = "MPTShirtAwards2";
        v_7 = 74;
        break;
    case 7:
        v_3 = "CLO_HST_A_7";
        v_4 = "CLO_HST_AD_8";
        v_5 = "OneManArmy";
        v_6 = "MPTShirtAwards2";
        v_7 = 86;
        break;
    case 6:
        v_3 = "CLO_HST_A_6";
        v_4 = "CLO_HST_AD_7";
        v_5 = "PsychoKiller";
        v_6 = "MPTShirtAwards2";
        v_7 = 82;
        break;
    case 8:
        v_3 = "CLO_HST_A_8";
        v_4 = "CLO_HST_AD_2";
        v_5 = "ShotCaller";
        v_6 = "MPTShirtAwards2";
        v_7 = 72;
        break;
    case 34:
        v_3 = "CLO_HSTM_U_3_0";
        v_4 = "CLO_HST_AD_10";
        v_5 = "EliteTshirt1";
        v_6 = "MPTShirtAwards2";
        break;
    }
    v_9 = 5;
    if (sub_6d84(v_7, 9) != 1) {
        v_8 = 1;
    }
    if (a_0 != 34) {
        v_A = sub_2ac3(v_7, v_9, 9);
        v_B = sub_2a63(v_7, -1);
    } else { 
        v_A = 5;
        v_B = sub_6d20();
    }
    sub_70f7(v_3, v_4, v_5, v_6, v_A, v_B, -1, v_8, &g_143D12);
}

auto sub_6d20() {
    if (sub_7209(3765, -1, -1)) {
        v_2 += 1;
    }
    if (sub_7209(3766, -1, -1)) {
        v_2 += 1;
    }
    if (sub_7209(3767, -1, -1)) {
        v_2 += 1;
    }
    if (sub_7209(3768, -1, -1)) {
        v_2 += 1;
    }
    if (sub_7209(3769, -1, -1)) {
        v_2 += 1;
    }
    return v_2;
}

auto sub_6d84(auto a_0, auto a_1) {
    if (a_1 == 9) {}
    switch (a_0) {
    case 53:
        return 1;
    case 39:
        return 1;
    case 51:
        return 1;
    case 52:
        return 1;
    case 60:
        return 1;
    case 61:
        return 1;
    case 62:
        return 1;
    case 63:
        return 1;
    case 16:
        return 1;
    case 0:
        return 1;
    case 12:
        return 1;
    case 11:
        return 1;
    case 19:
        return 1;
    case 20:
        return 1;
    case 15:
        return 1;
    case 17:
        return 1;
    case 18:
        return 1;
    case 21:
        return 1;
    case 14:
        return 1;
    case 22:
        return 1;
    case 1:
        return 1;
    case 2:
        return 1;
    case 3:
        return 1;
    case 4:
        return 1;
    case 5:
        return 1;
    case 6:
        return 1;
    case 7:
        return 1;
    case 8:
        return 1;
    case 9:
        return 1;
    case 10:
        return 1;
    case 23:
        return 1;
    case 24:
        return 1;
    case 25:
        return 1;
    case 26:
        return 1;
    case 27:
        return 1;
    case 28:
        return 1;
    case 29:
        return 1;
    case 30:
        return 1;
    case 31:
        return 1;
    case 32:
        return 1;
    case 33:
        return 1;
    case 34:
        return 1;
    case 35:
        return 1;
    case 36:
        return 1;
    case 37:
        return 1;
    case 38:
        return 1;
    case 40:
        return 1;
    case 41:
        return 1;
    case 42:
        return 1;
    case 43:
        return 1;
    case 44:
        return 1;
    case 45:
        return 1;
    case 46:
        return 1;
    case 47:
        return 1;
    case 48:
        return 1;
    case 49:
        return 1;
    case 50:
        return 1;
    case 54:
        return 1;
    case 55:
        return 1;
    case 56:
        return 1;
    case 57:
        return 1;
    case 58:
        return 1;
    case 59:
        return 1;
    case 75:
        return 1;
    case 76:
        return 1;
    case 77:
        return 1;
    case 78:
        return 1;
    case 79:
        return 1;
    case 65:
        return 1;
    case 66:
        return 1;
    case 68:
        return 1;
    case 67:
        return 1;
    case 69:
        return 1;
    case 70:
        return 1;
    case 71:
        return 1;
    case 72:
        return 1;
    case 73:
        return 1;
    case 74:
        return 1;
    case 80:
        return 1;
    case 81:
        return 1;
    case 82:
        return 1;
    case 83:
        return 1;
    case 84:
        return 1;
    case 85:
        return 1;
    case 86:
        return 1;
    case 87:
        return 1;
    }
    return 0;
}

void sub_70f7(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8) {
    for (v_B = 0; v_B <= 11; v_B += 1) {
        if (a_8._f1[v_B/*1*/] == 0) {
            sub_717f(v_B, a_2, a_3, a_6, a_7, a_8);
            sub_714b(v_B, a_0, a_1, a_4, a_5, a_8);
            a_8._f1[v_B/*1*/] = 1;
            v_B = 12;
        }
    }
}

void sub_714b(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    a_5._fE[a_0/*8*/]/*"32"*/ = a_1;
    a_5._f6F[a_0/*8*/]/*"32"*/ = a_2;
    a_5._fD0[a_0/*1*/] = a_3;
    a_5._fDD[a_0/*1*/] = a_4;
}

void sub_717f(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    a_5._fEA[a_0/*8*/]/*"32"*/ = a_1;
    a_5._f14B[a_0/*8*/]/*"32"*/ = a_2;
    a_5._f1AC[a_0/*1*/] = sub_71ba(a_4);
    a_5._f1B9[a_0/*1*/] = a_3;
}

auto sub_71ba(auto a_0) {
    switch (a_0) {
    case 2:
        return 107;
        break;
    case 3:
        return 108;
        break;
    case 4:
        return 109;
        break;
    case 5:
        return 110;
        break;
    default:
        return 0;
        break;
    }
    return 0;
}

auto sub_7209(auto a_0, auto a_1, auto a_2) {
    v_5 = 0;
    if (a_1 == -1) {
        a_1 = sub_c1b();
    }
    v_6 = sub_73a6(a_0, a_1);
    v_7 = sub_7246(a_0);
    if (0 != v_6) {
        v_5 = STATS::STAT_GET_BOOL_MASKED(v_6, v_7, a_2);
    }
    return v_5;
}

auto sub_7246(auto a_0) {
    v_3 = 0;
    if ((a_0 >= 0) && (a_0 < 192)) {
        v_3 = (a_0 - 0) - (STATS::_F4D8E7AC2A27758C(a_0 - 0) * 64);
    } else if ((a_0 >= 192) && (a_0 < 384)) {
        v_3 = (a_0 - 192) - (STATS::_F4D8E7AC2A27758C(a_0 - 192) * 64);
    } else if ((a_0 >= 513) && (a_0 < 705)) {
        v_3 = (a_0 - 513) - (STATS::_F4D8E7AC2A27758C(a_0 - 513) * 64);
    } else if ((a_0 >= 705) && (a_0 < 1281)) {
        v_3 = (a_0 - 705) - (STATS::_F4D8E7AC2A27758C(a_0 - 705) * 64);
    } else if ((a_0 >= 2919) && (a_0 < 3111)) {
        v_3 = (a_0 - 2919) - (STATS::_F4D8E7AC2A27758C(a_0 - 2919) * 64);
    } else if ((a_0 >= 3111) && (a_0 < 3879)) {
        v_3 = (a_0 - 3111) - (STATS::_F4D8E7AC2A27758C(a_0 - 3111) * 64);
    } else if ((a_0 >= 5023) && (a_0 < 5087)) {
        v_3 = (a_0 - 5023) - (STATS::_F4D8E7AC2A27758C(a_0 - 5023) * 64);
    } else if ((a_0 >= 4895) && (a_0 < 5023)) {
        v_3 = (a_0 - 4895) - (STATS::_F4D8E7AC2A27758C(a_0 - 4895) * 64);
    }
    return v_3;
}

auto sub_73a6(auto a_0, auto a_1) {
    if (a_1 == -1) {
        a_1 = sub_c1b();
    }
    v_4 = 0;
    if ((a_0 >= 0) && (a_0 < 192)) {
        v_4 = STATS::_80C75307B1C42837(a_0 - 0, 0, 1, a_1);
    } else if ((a_0 >= 192) && (a_0 < 384)) {
        v_4 = STATS::_80C75307B1C42837(a_0 - 192, 1, 1, a_1);
    } else if ((a_0 >= 513) && (a_0 < 705)) {
        v_4 = STATS::_80C75307B1C42837(a_0 - 513, 0, 0, 0);
    } else if ((a_0 >= 705) && (a_0 < 1281)) {
        v_4 = STATS::_80C75307B1C42837(a_0 - 705, 1, 0, 0);
    } else if ((a_0 >= 2919) && (a_0 < 3111)) {
        v_4 = STATS::_C4BB08EE7907471E(a_0 - 2919, 0, 0, 0);
    } else if ((a_0 >= 3111) && (a_0 < 3879)) {
        v_4 = STATS::_C4BB08EE7907471E(a_0 - 3111, 0, 1, a_1);
    } else if ((a_0 >= 5023) && (a_0 < 5087)) {
        v_4 = STATS::_BA52FF538ED2BC71(a_0 - 5023, 0, 0, 0, "_NGPSTAT_BOOL");
    } else if ((a_0 >= 4895) && (a_0 < 5023)) {
        v_4 = STATS::_BA52FF538ED2BC71(a_0 - 4895, 0, 1, a_1, "_NGPSTAT_BOOL");
    }
    return v_4;
}

void sub_74f1(auto a_0, auto a_1, auto a_2, auto a_3) {
    switch (a_1) {
    case 0:
        a_1 = 0;
        break;
    case 1:
        a_1 = 1;
        break;
    case 2:
        a_1 = 2;
        break;
    case 3:
        a_1 = 3;
        break;
    case 4:
        a_1 = 4;
        break;
    case 5:
        a_1 = 5;
        break;
    case 6:
        a_1 = sub_7a15(a_0, a_2);
        break;
    case 7:
    case 8:
        a_1 = sub_7990(a_0, a_2);
        break;
    }
    v_6 = sub_7990(a_0, a_2);
    if (a_1 != 0) {
        if (a_1 != 1) {
            if (sub_7951(a_0, a_2) != 1) {
                a_1 = 1;
            }
        }
    }
    v_7 = sub_78fe(a_0, a_2, 0);
    v_8 = sub_789d(a_0, a_1, a_2, 0);
    v_9 = sub_784f(a_0, a_2);
    v_A = sub_7801(a_0, a_2);
    v_B = sub_76ab(a_0, v_6, a_2);
    v_C = sub_7683(a_0);
    v_D = sub_762a(a_1);
    v_E = sub_76ab(a_0, v_D, a_2);
    v_F = v_B - v_E;
    v_10 = v_C - v_E;
    v_11 = SYSTEM::FLOOR((SYSTEM::TO_FLOAT(v_10) / SYSTEM::TO_FLOAT(v_F)) * 100.0);
    sub_70f7(v_7, v_8, v_9, v_A, v_B, v_C, v_11, a_1, a_3);
}

auto sub_762a(auto a_0) {
    switch (a_0) {
    case 0:
        v_3 = 0;
        break;
    case 1:
        v_3 = 0;
        break;
    case 2:
        v_3 = 1;
        break;
    case 3:
        v_3 = 2;
        break;
    case 4:
        v_3 = 3;
        break;
    case 5:
        v_3 = 4;
        break;
    }
    return v_3;
}

auto sub_7683(auto a_0) {
    v_3 = g_1460A6[a_0/*1*/];
    v_4 = v_3;
    if (STATS::STAT_GET_INT(v_4, &v_5, -1)) {
        return v_5;
    }
    return 0;
}

auto sub_76ab(auto a_0, auto a_1, auto a_2) {
    if (a_2 == 0) {}
    switch (a_0) {
    case 0:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 1:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 5;
        case 3:
            return 10;
        case 4:
            return 15;
        case 5:
            return 25;
        }
        break;
    case 2:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 10;
        case 3:
            return 25;
        case 4:
            return 50;
        case 5:
            return 100;
        }
        break;
    case 3:
        switch (a_1) {
        case 0:
            return 0;
        case 1:
            return 0;
        case 2:
            return 10;
        case 3:
            return 25;
        case 4:
            return 50;
        case 5:
            return 100;
        }
        break;
    }
    return 999;
}

auto sub_7801(auto a_0, auto a_1) {
    if (a_1 == 9) {}
    switch (a_0) {
    case 0:
        return "MPAWARDS5";
    case 1:
        return "MPAWARDS5";
    case 2:
        return "MPAWARDS5";
    case 3:
        return "MPAWARDS6";
    }
    return "";
}

auto sub_784f(auto a_0, auto a_1) {
    if (a_1 == 9) {}
    switch (a_0) {
    case 0:
        return "RaceCreator";
    case 1:
        return "DeathmatchCreator";
    case 2:
        return "PlayedCreation";
    case 3:
        return "CreatorsScore";
    }
    return "";
}

auto sub_789d(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_2 == 9) {}
    if (a_3) {}
    if (sub_76ab(a_0, a_1, a_2) == 1) {}
    switch (a_0) {
    case 0:
        return "AWS_686";
    case 1:
        return "AWS_688";
    case 2:
        return "AWS_689";
    case 3:
        return "AWS_690";
    }
    return "";
}

auto sub_78fe(auto a_0, auto a_1, auto a_2) {
    if (a_2) {}
    if (a_1 == 9) {}
    switch (a_0) {
    case 0:
        return "AWT_686";
    case 1:
        return "AWT_688";
    case 2:
        return "AWT_689";
    case 3:
        return "AWT_690";
    }
    return "";
}

auto sub_7951(auto a_0, auto a_1) {
    if (a_1 == 9) {}
    switch (a_0) {
    case 0:
        return 1;
    case 1:
        return 1;
    case 2:
        return 1;
    case 3:
        return 1;
    }
    return 0;
}

auto sub_7990(auto a_0, auto a_1) {
    if (sub_7a01(sub_7683(a_0), sub_76ab(a_0, 5, a_1))) {
        return 5;
    }
    if (sub_7a01(sub_7683(a_0), sub_76ab(a_0, 4, a_1))) {
        return 5;
    }
    if (sub_7a01(sub_7683(a_0), sub_76ab(a_0, 3, a_1))) {
        return 4;
    }
    if (sub_7a01(sub_7683(a_0), sub_76ab(a_0, 2, a_1))) {
        return 3;
    }
    return 2;
}

auto sub_7a01(auto a_0, auto a_1) {
    if (a_1 <= a_0) {
        return 1;
    }
    return 0;
}

auto sub_7a15(auto a_0, auto a_1) {
    if (!sub_7a01(sub_7683(a_0), sub_76ab(a_0, 5, a_1))) {
        return 0;
    }
    if (!sub_7a01(sub_7683(a_0), sub_76ab(a_0, 4, a_1))) {
        return 2;
    }
    if (!sub_7a01(sub_7683(a_0), sub_76ab(a_0, 3, a_1))) {
        return 3;
    }
    if (!sub_7a01(sub_7683(a_0), sub_76ab(a_0, 2, a_1))) {
        return 4;
    }
    return 5;
}

void sub_7a8a(auto a_0, auto a_1, auto a_2, auto a_3) {
    switch (a_1) {
    case 6:
    case 8:
        if (sub_45d6(a_0, -1)) {
            a_1 = 0;
        }
        break;
    case 7:
        if (sub_45d6(a_0, -1) == 0) {
            a_1 = 5;
        }
        break;
    }
    v_7 = sub_8aca(a_0);
    switch (a_2) {
    case 9:
        v_6 = 3;
        break;
    }
    if (a_0 == 57) {
        a_1 = 2;
    } else if ((a_0 == 58) || (a_0 == 9)) {
        a_1 = 3;
    } else if ((a_0 == 59) || (a_0 == 10)) {
        a_1 = 4;
    } else { 
        a_1 = 5;
    }
    v_8 = sub_860e(a_0, v_6);
    v_9 = sub_8152(a_0, v_6);
    v_A = sub_7c96(a_0, v_6);
    v_B = sub_7bb1(a_0, v_6);
    v_C = sub_2ac3(v_7, a_1, 0);
    v_D = sub_2a63(v_7, -1);
    if (v_7 == 64) {
        v_C = 1;
        v_D = 0;
    }
    v_E = -1;
    if (sub_45d6(a_0, -1)) {
        v_D = sub_2ac3(sub_8aca(a_0), a_1, 0);
        if (v_7 == 64) {
            v_D = 1;
        }
    }
    a_1 = 1;
    sub_70f7(v_8, v_9, v_A, v_B, v_C, v_D, v_E, a_1, a_3);
}

auto sub_7bb1(auto a_0, auto a_1) {
    v_4 = "MPTATTOOS";
    if (a_0 == a_0) {}
    if (a_1 == a_1) {}
    switch (a_0) {
    case 56:
        return "MPTattoos3";
        break;
    case 89:
        return "MPTSHIRTAWARDS";
        break;
    case 88:
        return "MPTSHIRTAWARDS";
        break;
    case 87:
        return "MPTSHIRTAWARDS";
        break;
    case 57:
        return "MPTattoos2";
        break;
    case 58:
        return "MPTattoos2";
        break;
    case 59:
        return "MPTattoos2";
        break;
    case 60:
        return "MPTattoos2";
        break;
    case 12:
    case 25:
    case 34:
    case 45:
    case 46:
    case 48:
    case 49:
    case 55:
    case 65:
        return "MPTattoos3";
        break;
    }
    return v_4;
}

auto sub_7c96(auto a_0, auto a_1) {
    v_4 = "";
    if (a_0 == a_0) {}
    if (a_1 == a_1) {}
    switch (a_0) {
    case 56:
        return "TATTOO_WIN_PARLEY";
        break;
    case 57:
        return "TATTOO_HOLD_UP_SHOPS_10";
        break;
    case 58:
        return "TATTOO_HOLD_UP_SHOPS_25";
        break;
    case 59:
        return "TATTOO_HOLD_UP_SHOPS_50";
        break;
    case 60:
        return "TATTOO_HOLD_UP_SHOPS_100";
        break;
    case 0:
        return "HeadBanger";
        break;
    case 1:
        return "theslayer";
        break;
    case 2:
        return "clearout";
        break;
    case 4:
        return "thehustler";
        break;
    case 3:
        return "armoredvantakedowns";
        break;
    case 54:
        return "wineverymodeonce";
        break;
    case 5:
        return "killplayerbountyhead";
        break;
    case 6:
        return "holdworldrecord";
        break;
    case 55:
        return "MP_FM_Tat_Award_008";
        break;
    case 7:
        return "getrevengekills";
        break;
    case 8:
        return "kill3otherracers";
        break;
    case 9:
        return "reachrank1";
        break;
    case 10:
        return "reachrank2";
        break;
    case 11:
        return "reachrank3";
        break;
    case 13:
        return "HeadBanger";
        break;
    case 14:
        return "HeadBanger";
        break;
    case 15:
        return "HeadBanger";
        break;
    case 16:
        return "HeadBanger";
        break;
    case 89:
        return "RockstarVerifiied";
        break;
    case 88:
        return "PickUpCrateFirst";
        break;
    case 87:
        return "ReachHordeModeWave";
        break;
    case 12:
        return "TATTOO_RACES_WON";
        break;
    }
    switch (a_0) {
    case 17:
        return "Headbanger";
        break;
    case 18:
        return "Headbanger";
        break;
    case 19:
        return "Headbanger";
        break;
    case 20:
        return "Headbanger";
        break;
    case 21:
        return "Headbanger";
        break;
    case 22:
        return "Headbanger";
        break;
    case 23:
        return "Headbanger";
        break;
    case 24:
        return "Headbanger";
        break;
    case 25:
        return "MP_FM_Tat_002";
        break;
    case 26:
        return "Headbanger";
        break;
    case 27:
        return "Headbanger";
        break;
    case 28:
        return "Headbanger";
        break;
    case 61:
        return "Headbanger";
        break;
    case 62:
        return "Headbanger";
        break;
    case 63:
        return "Headbanger";
        break;
    case 64:
        return "Headbanger";
        break;
    case 65:
        return "MP_FM_Tat_019";
        break;
    case 29:
        return "Headbanger";
        break;
    case 30:
        return "Headbanger";
        break;
    case 31:
        return "Headbanger";
        break;
    case 66:
        return "Headbanger";
        break;
    case 32:
        return "Headbanger";
        break;
    case 33:
        return "Headbanger";
        break;
    case 34:
        return "MP_FM_Tat_023";
        break;
    case 35:
        return "Headbanger";
        break;
    case 36:
        return "Headbanger";
        break;
    case 37:
        return "Headbanger";
        break;
    case 38:
        return "Headbanger";
        break;
    case 39:
        return "Headbanger";
        break;
    case 40:
        return "Headbanger";
        break;
    case 67:
        return "Headbanger";
        break;
    case 41:
        return "Headbanger";
        break;
    case 68:
        return "Headbanger";
        break;
    case 42:
        return "Headbanger";
        break;
    case 43:
        return "Headbanger";
        break;
    case 44:
        return "Headbanger";
        break;
    case 45:
        return "MP_FM_Tat_036";
        break;
    case 46:
        return "MP_FM_Tat_037";
        break;
    case 47:
        return "Headbanger";
        break;
    case 48:
        return "MP_FM_Tat_039";
        break;
    case 49:
        return "MP_FM_Tat_040";
        break;
    case 50:
        return "Headbanger";
        break;
    case 51:
        return "Headbanger";
        break;
    case 52:
        return "Headbanger";
        break;
    case 53:
        return "Headbanger";
        break;
    case 69:
        return "Headbanger";
        break;
    }
    return v_4;
}

auto sub_8152(auto a_0, auto a_1) {
    v_4 = "";
    if (a_0 == a_0) {}
    if (a_1 == a_1) {}
    switch (a_0) {
    case 7:
        return "TAT_FM_REVENKIL_D";
        break;
    case 6:
        return "TAT_FM_RECHOLD_d";
        break;
    case 8:
        return "TAT_FM_KIL3RACE_D";
        break;
    case 5:
        return "TAT_FM_KILb_D";
        break;
    case 0:
        return "TAT_FM_HEADBANG_D";
        break;
    case 12:
        return "TAT_RACE50_D";
        break;
    case 2:
        return "TAT_CLEAROUT_D";
        break;
    case 9:
        return "TAT_FM_RANK1_D";
        break;
    case 10:
        return "TAT_FM_RANK2_D";
        break;
    case 11:
        return "TAT_FM_RANK3_D";
        break;
    case 4:
        return "TAT_FM_HUST_D";
        break;
    case 1:
        return "TAT_FM_SLAY_D";
        break;
    case 54:
        return "TAT_FM_EVERMODE1_D";
        break;
    case 3:
        return "TAT_FM_ARVANTAKE_D";
        break;
    case 56:
        return "TAT_CHEATER_D";
        break;
    case 13:
        return "TAT_CRANKA_D";
        break;
    case 14:
        return "TAT_CRANKB_D";
        break;
    case 15:
        return "TAT_CRANKC_D";
        break;
    case 16:
        return "TAT_CRANKD_D";
        break;
    case 89:
        return "TAT_FM_ROCKSTAR_D";
        break;
    case 88:
        return "TAT_FM_BELLE_D";
        break;
    case 87:
        return "TAT_FM_REDSKULL_D";
        break;
    case 55:
        return "TAT_FM_MODDED_D";
        break;
    }
    switch (a_0) {
    case 17:
        return "TAT_RANK10_D";
        break;
    case 18:
        return "TAT_RANK20_D";
        break;
    case 19:
        return "TAT_RANK20_D";
        break;
    case 20:
        return "TAT_RANK10_D";
        break;
    case 21:
        return "TAT_RANK20_D";
        break;
    case 22:
        return "TAT_RANK10_D";
        break;
    case 23:
        return "TAT_RANK10_D";
        break;
    case 24:
        return "TAT_RANK20_D";
        break;
    case 25:
        return "TAT_FM_TAT9D";
        break;
    case 26:
        return "TAT_RANK20_D";
        break;
    case 27:
        return "TAT_RANK20_D";
        break;
    case 28:
        return "TAT_RANK10_D";
        break;
    case 61:
        return "TAT_RANK10_D";
        break;
    case 62:
        return "TAT_RANK10_D";
        break;
    case 63:
        return "TAT_RANK10_D";
        break;
    case 64:
        return "TAT_RANK10_D";
        break;
    case 65:
        return "TAT_FM_TAT17D";
        break;
    case 29:
        return "TAT_RANK10_D";
        break;
    case 30:
        return "TAT_RANK10_D";
        break;
    case 31:
        return "TAT_RANK10_D";
        break;
    case 66:
        return "TAT_RANK20_D";
        break;
    case 32:
        return "TAT_RANK20_D";
        break;
    case 33:
        return "TAT_RANK20_D";
        break;
    case 34:
        return "TAT_FM_TAT24D";
        break;
    case 35:
        return "TAT_RANK20_D";
        break;
    case 36:
        return "TAT_RANK20_D";
        break;
    case 37:
        return "TAT_RANK20_D";
        break;
    case 38:
        return "TAT_RANK20_D";
        break;
    case 39:
        return "TAT_RANK20_D";
        break;
    case 40:
        return "TAT_RANK20_D";
        break;
    case 67:
        return "TAT_RANK20_D";
        break;
    case 41:
        return "TAT_RANK20_D";
        break;
    case 68:
        return "TAT_RANK20_D";
        break;
    case 42:
        return "TAT_RANK20_D";
        break;
    case 43:
        return "TAT_RANK20_D";
        break;
    case 44:
        return "TAT_RANK20_D";
        break;
    case 45:
        return "TAT_FM_TAT37D";
        break;
    case 46:
        return "TAT_FM_TAT38D";
        break;
    case 47:
        return "TAT_RANK20_D";
        break;
    case 48:
        return "TAT_FM_TAT40D";
        break;
    case 49:
        return "TAT_FM_TAT41D";
        break;
    case 50:
        return "TAT_RANK20_D";
        break;
    case 51:
        return "TAT_RANK20_D";
        break;
    case 52:
        return "TAT_RANK20_D";
        break;
    case 53:
        return "TAT_RANK20_D";
        break;
    case 69:
        return "TAT_RANK20_D";
        break;
    case 57:
        return "TAT_HOLDUP1V_D";
        break;
    case 58:
        return "TAT_HOLDUP5V_D";
        break;
    case 59:
        return "TAT_HOLDUP10V_D";
        break;
    case 60:
        return "TAT_HOLDUP20V_D";
        break;
    }
    return v_4;
}

auto sub_860e(auto a_0, auto a_1) {
    v_4 = "";
    if (a_0 == a_0) {}
    if (a_1 == a_1) {}
    switch (a_0) {
    case 0:
        return "TAT_FM_HEADBANG";
        break;
    case 2:
        return "TAT_CLEAROUT";
        break;
    case 9:
        return "TAT_FM_RANK1";
        break;
    case 10:
        return "TAT_FM_RANK2";
        break;
    case 11:
        return "TAT_FM_RANK3";
        break;
    case 4:
        return "TAT_FM_HUST";
        break;
    case 1:
        return "TAT_FM_SLAY";
        break;
    case 54:
        return "TAT_FM_EVERMODE1";
        break;
    case 3:
        return "TAT_FM_ARVANTAKE";
        break;
    case 7:
        return "TAT_FM_REVENKIL";
        break;
    case 5:
        return "TAT_FM_KILb";
        break;
    case 8:
        return "TAT_FM_KIL3RACE";
        break;
    case 6:
        return "TAT_FM_RECHOLD";
        break;
    case 12:
        return "TAT_RACE50";
        break;
    case 13:
        return "TAT_CRANKA";
        break;
    case 14:
        return "TAT_CRANKB";
        break;
    case 15:
        return "TAT_CRANKC";
        break;
    case 16:
        return "TAT_CRANKD";
        break;
    case 87:
        return "TAT_FM_REDSKULL";
        break;
    case 88:
        return "TAT_FM_BELLE";
        break;
    case 89:
        return "TAT_FM_ROCKSTAR";
        break;
    case 55:
        return "TAT_FM_MODDED";
        break;
    case 17:
        return "TAT_FM_TAT1";
        break;
    case 18:
        return "TAT_FM_TAT2";
        break;
    case 19:
        return "TAT_FM_TAT3";
        break;
    case 20:
        return "TAT_FM_TAT4";
        break;
    case 21:
        return "TAT_FM_TAT5";
        break;
    case 22:
        return "TAT_FM_TAT6";
        break;
    case 56:
        return "TAT_CHEATER";
        break;
    }
    switch (a_0) {
    case 23:
        return "TAT_FM_TAT7";
        break;
    case 24:
        return "TAT_FM_TAT8";
        break;
    case 25:
        return "TAT_FM_TAT9";
        break;
    case 26:
        return "TAT_FM_TAT10";
        break;
    case 27:
        return "TAT_FM_TAT11";
        break;
    case 28:
        return "TAT_FM_TAT12";
        break;
    case 61:
        return "TAT_FM_TAT13";
        break;
    case 62:
        return "TAT_FM_TAT14";
        break;
    case 63:
        return "TAT_FM_TAT15";
        break;
    case 64:
        return "TAT_FM_TAT16";
        break;
    case 65:
        return "TAT_FM_TAT38";
        break;
    case 29:
        return "TAT_FM_TAT18";
        break;
    case 30:
        return "TAT_FM_TAT19";
        break;
    case 31:
        return "TAT_FM_TAT20";
        break;
    case 66:
        return "TAT_FM_TAT21";
        break;
    case 32:
        return "TAT_FM_TAT22";
        break;
    case 33:
        return "TAT_FM_TAT23";
        break;
    case 34:
        return "TAT_FM_TAT24";
        break;
    case 35:
        return "TAT_FM_TAT25";
        break;
    case 36:
        return "TAT_FM_TAT26";
        break;
    case 37:
        return "TAT_FM_TAT27";
        break;
    case 38:
        return "TAT_FM_TAT28";
        break;
    case 39:
        return "TAT_FM_TAT29";
        break;
    case 40:
        return "TAT_FM_TAT30";
        break;
    case 67:
        return "TAT_FM_TAT31";
        break;
    case 41:
        return "TAT_FM_TAT32";
        break;
    case 68:
        return "TAT_FM_TAT33";
        break;
    case 42:
        return "TAT_FM_TAT34";
        break;
    case 43:
        return "TAT_FM_TAT35";
        break;
    case 44:
        return "TAT_FM_TAT36";
        break;
    case 45:
        return "TAT_FM_TAT37";
        break;
    case 46:
        return "TAT_FM_TAT41";
        break;
    case 47:
        return "TAT_FM_TAT39";
        break;
    case 48:
        return "TAT_FM_TAT40";
        break;
    case 49:
        return "TAT_FM_TAT17";
        break;
    case 50:
        return "TAT_FM_TAT42";
        break;
    case 51:
        return "TAT_FM_TAT43";
        break;
    case 52:
        return "TAT_FM_TAT44";
        break;
    case 53:
        return "TAT_FM_TAT45";
        break;
    case 69:
        return "TAT_FM_TAT46";
        break;
    case 57:
        return "TAT_HOLDUP1V";
        break;
    case 58:
        return "TAT_HOLDUP5V";
        break;
    case 59:
        return "TAT_HOLDUP10V";
        break;
    case 60:
        return "TAT_HOLDUP20V";
        break;
    }
    return v_4;
}

auto sub_8aca(auto a_0) {
    switch (a_0) {
    case 4:
        return 49;
    case 7:
        return 59;
    case 0:
        return 9;
    case 5:
        return 55;
    case 3:
        return 18;
    case 1:
        return 40;
    case 57:
        return 14;
    case 58:
        return 14;
    case 59:
        return 14;
    case 60:
        return 14;
    case 12:
        return 21;
    case 56:
        return 24;
    case 25:
        return 44;
    case 34:
        return 15;
    case 45:
        return 1;
    case 48:
        return 2;
    case 46:
        return 42;
    case 9:
        return 56;
    case 10:
        return 56;
    case 11:
        return 56;
    case 87:
        return 48;
    }
    return 64;
}

void sub_8bc0(auto a_0, auto a_1, auto a_2, auto a_3) {
    switch (a_1) {
    case 0:
        a_1 = 0;
        break;
    case 1:
        a_1 = 1;
        break;
    case 2:
        a_1 = 2;
        break;
    case 3:
        a_1 = 3;
        break;
    case 4:
        a_1 = 4;
        break;
    case 5:
        a_1 = 5;
        break;
    case 6:
        a_1 = sub_9316(a_0);
        break;
    case 7:
    case 8:
        a_1 = sub_930d();
        break;
    }
    if (a_1 != 0) {
        if (a_1 != 1) {
            if (sub_9293(a_0, a_2) != 1) {
                a_1 = 1;
            }
        }
    }
    v_7 = sub_930d();
    v_8 = sub_91f2(a_0, a_2, 0);
    v_9 = sub_9143(a_0, a_1, a_2, 0);
    v_A = sub_90a7(a_0, a_2);
    v_B = sub_900b(a_0, a_2);
    v_C = sub_8fed(a_0, v_7, a_2);
    if (sub_8fc5(a_0) == 1) {
        v_D = 1;
    } else { 
        v_D = 0;
    }
    v_E = sub_762a(a_1);
    v_F = sub_8fed(a_0, v_E, a_2);
    v_10 = v_C - v_F;
    v_11 = v_D - v_F;
    if (sub_8fc5(a_0)) {
        v_12 = 100;
        switch (a_0) {
        case 6:
            v_D = 26;
            v_C = 26;
            break;
        case 7:
            v_D = 26;
            v_C = 26;
            break;
        case 8:
            v_D = 26;
            v_C = 26;
            break;
        case 9:
            v_D = 26;
            v_C = 26;
            break;
        case 10:
            v_D = 26;
            v_C = 26;
            break;
        }
    } else { 
        switch (a_0) {
        case 6:
            v_11 = 0;
            v_13 = sub_8fa7(0x3963c7ac);
            for (v_6 = 0; v_6 < 28; v_6 += 1) {
                if (GAMEPLAY::IS_BIT_SET(v_13, v_6)) {
                    v_11 += 1;
                }
            }
            if (GAMEPLAY::IS_BIT_SET(v_13, 9)) {
                v_11 -= 1;
            }
            if (GAMEPLAY::IS_BIT_SET(v_13, 26)) {
                v_11 -= 1;
            }
            if (v_11 < 0) {
                v_11 = 0;
            }
            v_D = v_11;
            v_C = 26;
            v_10 = 26;
            break;
        case 7:
            v_11 = 0;
            v_13 = sub_8fa7(0xed9facb7);
            for (v_6 = 0; v_6 < 28; v_6 += 1) {
                if (GAMEPLAY::IS_BIT_SET(v_13, v_6)) {
                    v_11 += 1;
                }
            }
            if (GAMEPLAY::IS_BIT_SET(v_13, 9)) {
                v_11 -= 1;
            }
            if (GAMEPLAY::IS_BIT_SET(v_13, 26)) {
                v_11 -= 1;
            }
            if (v_11 < 0) {
                v_11 = 0;
            }
            v_D = v_11;
            v_C = 26;
            v_10 = 26;
            break;
        case 8:
            v_11 = 0;
            v_13 = sub_8fa7(0xe0e7fdc6);
            for (v_6 = 0; v_6 < 28; v_6 += 1) {
                if (GAMEPLAY::IS_BIT_SET(v_13, v_6)) {
                    v_11 += 1;
                }
            }
            if (GAMEPLAY::IS_BIT_SET(v_13, 9)) {
                v_11 -= 1;
            }
            if (GAMEPLAY::IS_BIT_SET(v_13, 26)) {
                v_11 -= 1;
            }
            if (v_11 < 0) {
                v_11 = 0;
            }
            v_D = v_11;
            v_C = 26;
            v_10 = 26;
            break;
        case 9:
            v_11 = 0;
            v_13 = sub_8fa7(0xdaeb2f4);
            for (v_6 = 0; v_6 < 28; v_6 += 1) {
                if (GAMEPLAY::IS_BIT_SET(v_13, v_6)) {
                    v_11 += 1;
                }
            }
            if (GAMEPLAY::IS_BIT_SET(v_13, 9)) {
                v_11 -= 1;
            }
            if (GAMEPLAY::IS_BIT_SET(v_13, 26)) {
                v_11 -= 1;
            }
            if (v_11 < 0) {
                v_11 = 0;
            }
            v_D = v_11;
            v_C = 26;
            v_10 = 26;
            break;
        case 10:
            v_11 = 0;
            v_13 = sub_8fa7(0x42f8c645);
            for (v_6 = 0; v_6 < 28; v_6 += 1) {
                if (GAMEPLAY::IS_BIT_SET(v_13, v_6)) {
                    v_11 += 1;
                }
            }
            if (GAMEPLAY::IS_BIT_SET(v_13, 9)) {
                v_11 -= 1;
            }
            if (GAMEPLAY::IS_BIT_SET(v_13, 26)) {
                v_11 -= 1;
            }
            if (v_11 < 0) {
                v_11 = 0;
            }
            v_D = v_11;
            v_C = 26;
            v_10 = 26;
            break;
        }
        v_12 = SYSTEM::FLOOR((SYSTEM::TO_FLOAT(v_11) / SYSTEM::TO_FLOAT(v_10)) * 100.0);
    }
    sub_70f7(v_8, v_9, v_A, v_B, v_C, v_D, v_12, a_1, a_3);
}

auto sub_8fa7(auto a_0) {
    v_3 = a_0;
    if (STATS::STAT_GET_INT(v_3, &v_4, -1)) {
        return v_4;
    }
    return 0;
}

auto sub_8fc5(auto a_0) {
    v_3 = g_1460AE[a_0/*1*/];
    v_4 = v_3;
    if (STATS::STAT_GET_BOOL(v_4, &v_5, -1)) {
        return v_5;
    }
    return 0;
}

auto sub_8fed(auto a_0, auto a_1, auto a_2) {
    if (a_1 == 5) {}
    if (a_2 == 0) {}
    if (sub_8fc5(a_0)) {}
    return 1;
}

auto sub_900b(auto a_0, auto a_1) {
    if (a_1 == 9) {}
    switch (a_0) {
    case 1:
        return "MpAwardHeists";
    case 2:
        return "MpAwardHeists";
    case 3:
        return "MpAwardHeists";
    case 4:
        return "MpAwardHeists";
    case 5:
        return "MpAwardHeists";
    case 6:
        return "MpAwardHeists";
    case 7:
        return "MpAwardHeists";
    case 8:
        return "MpAwardHeists";
    case 9:
        return "MPAwardHeists";
    case 10:
        return "MPAwardHeists";
    }
    return "";
}

auto sub_90a7(auto a_0, auto a_1) {
    if (a_1 == 9) {}
    switch (a_0) {
    case 1:
        return "HeadForHeists";
    case 2:
        return "GoToJail";
    case 3:
        return "LabReport";
    case 4:
        return "ProductPlacement";
    case 5:
        return "SmoothSailing";
    case 6:
        return "AllInOrder";
    case 7:
        return "Loyalty";
    case 8:
        return "CriminalMastermind";
    case 9:
        return "AnotherPerspective";
    case 10:
        return "SupportingRole";
    }
    return "";
}

auto sub_9143(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_2 == 9) {}
    if (a_3) {}
    if (sub_8fed(a_0, a_1, a_2) == 1) {}
    switch (a_0) {
    case 1:
        return "AWS_775";
    case 2:
        return "AWS_767";
    case 3:
        return "AWS_768";
    case 4:
        return "AWS_776";
    case 5:
        return "AWS_780";
    case 6:
        return "AWS_777";
    case 7:
        return "AWS_778";
    case 8:
        return "AWS_779";
    case 9:
        return "AWS_785";
    case 10:
        return "AWS_786";
    }
    return "";
}

auto sub_91f2(auto a_0, auto a_1, auto a_2) {
    if (a_2) {}
    if (a_1 == 9) {}
    switch (a_0) {
    case 1:
        return "AWT_775";
    case 2:
        return "AWT_767";
    case 3:
        return "AWT_768";
    case 4:
        return "AWT_776";
    case 5:
        return "AWT_780";
    case 6:
        return "AWT_777";
    case 7:
        return "AWT_778";
    case 8:
        return "AWT_779";
    case 9:
        return "AWT_785";
    case 10:
        return "AWT_786";
    }
    return "";
}

auto sub_9293(auto a_0, auto a_1) {
    if (a_1 == 0) {}
    switch (a_0) {
    case 1:
        return 1;
    case 2:
        return 1;
    case 3:
        return 1;
    case 4:
        return 1;
    case 5:
        return 1;
    case 6:
        return 1;
    case 7:
        return 1;
    case 8:
        return 1;
    case 9:
        return 1;
    case 10:
        return 1;
    }
    return 0;
}

auto sub_930d() {
    return 5;
}

auto sub_9316(auto a_0) {
    if (sub_8fc5(a_0)) {
        return 5;
    }
    return 0;
}

void sub_932c(auto a_0, auto a_1, auto a_2, auto a_3) {
    switch (a_1) {
    case 0:
        a_1 = 0;
        break;
    case 1:
        a_1 = 1;
        break;
    case 2:
        a_1 = 2;
        break;
    case 3:
        a_1 = 3;
        break;
    case 4:
        a_1 = 4;
        break;
    case 5:
        a_1 = 5;
        break;
    case 6:
        a_1 = sub_a238(a_0);
        break;
    case 7:
    case 8:
        a_1 = sub_a22f();
        break;
    }
    if (a_1 != 0) {
        if (a_1 != 1) {
            if (sub_a0ec(a_0, a_2) != 1) {
                a_1 = 1;
            }
        }
    }
    v_6 = sub_a22f();
    v_7 = sub_9f44(a_0, a_2, 0);
    v_8 = sub_9d85(a_0, a_1, a_2, 0);
    v_9 = sub_9be1(a_0, a_2);
    v_A = sub_9a56(a_0, a_2);
    v_B = sub_99e7(a_0, v_6, a_2);
    if (sub_99bb(a_0, -1) == 1) {
        v_C = 1;
    } else { 
        v_C = 0;
    }
    v_E = sub_762a(a_1);
    v_F = sub_99e7(a_0, v_E, a_2);
    v_10 = v_B - v_F;
    v_11 = v_C - v_F;
    switch (a_0) {
    case 15:
        v_C = sub_462e(1144, -1, 0);
        if (v_C > 25) {
            v_C = 25;
        }
        v_10 = 25;
        v_11 = v_C;
        break;
    case 16:
        v_C = sub_462e(1143, -1, 0);
        if (v_C > 25) {
            v_C = 25;
        }
        v_10 = 25;
        v_11 = v_C;
        break;
    case 12:
        v_C = sub_462e(1079, -1, 0);
        if (v_C > 25) {
            v_C = 25;
        }
        v_10 = 25;
        v_11 = v_C;
        break;
    case 25:
        if (sub_99bb(a_0, -1)) {
            v_C = sub_462e(2103, -1, 0) * 7;
            v_D = sub_462e(2102, -1, 0);
            v_C = 7;
            v_10 = 7;
            v_11 = v_C;
        } else { 
            v_C = sub_462e(2103, -1, 0) * 7;
            v_D = sub_462e(2102, -1, 0);
            v_C += v_D;
            if (v_C > 7) {
                v_C = 7;
            }
            v_10 = 7;
            v_11 = v_C;
        }
        break;
    case 26:
        if (sub_99bb(a_0, -1)) {
            v_C = sub_462e(2103, -1, 0) * 7;
            v_D = sub_462e(2102, -1, 0);
            v_C = 28;
            v_10 = 28;
            v_11 = v_C;
        } else { 
            v_C = sub_462e(2103, -1, 0) * 7;
            v_D = sub_462e(2102, -1, 0);
            v_C += v_D;
            if (v_C > 28) {
                v_C = 28;
            }
            v_10 = 28;
            v_11 = v_C;
        }
        break;
    case 31:
        if (sub_99bb(a_0, -1)) {
            v_C = 43;
            v_10 = 43;
            v_11 = v_C;
        } else { 
            v_C = sub_95f7();
            v_10 = 43;
            v_11 = v_C;
        }
        break;
    }
    if (sub_99bb(a_0, -1)) {
        v_12 = 100;
    } else { 
        v_12 = SYSTEM::FLOOR((SYSTEM::TO_FLOAT(v_11) / SYSTEM::TO_FLOAT(v_10)) * 100.0);
    }
    sub_70f7(v_7, v_8, v_9, v_A, v_B, v_C, v_12, a_1, a_3);
}

auto sub_95f7() {
    for (v_2 = 0; v_2 <= 49; v_2 += 1) {
        if (sub_9624(v_2) != 0) {
            v_3 += 1;
        }
    }
    return v_3;
}

auto sub_9624(auto a_0) {
    switch (a_0) {
    default:
        break;
    case 0:
        return sub_462e(2695, -1, 0);
    case 1:
        return sub_462e(2696, -1, 0);
    case 2:
        return sub_462e(2697, -1, 0);
    case 3:
        return sub_462e(2698, -1, 0);
    case 4:
        return sub_462e(2699, -1, 0);
    case 5:
        return sub_462e(2700, -1, 0);
    case 6:
        return sub_462e(2701, -1, 0);
    case 7:
        return sub_462e(2702, -1, 0);
    case 8:
        return sub_462e(2703, -1, 0);
    case 9:
        return sub_462e(2704, -1, 0);
    case 10:
        return sub_462e(2705, -1, 0);
    case 11:
        return sub_462e(2706, -1, 0);
    case 12:
        return sub_462e(2707, -1, 0);
    case 13:
        return sub_462e(2708, -1, 0);
    case 14:
        return sub_462e(2709, -1, 0);
    case 15:
        return sub_462e(2710, -1, 0);
    case 16:
        return sub_462e(2711, -1, 0);
    case 17:
        return sub_462e(2712, -1, 0);
    case 18:
        return sub_462e(2713, -1, 0);
    case 19:
        return sub_462e(2714, -1, 0);
    case 20:
        return sub_462e(2715, -1, 0);
    case 21:
        return sub_462e(2716, -1, 0);
    case 22:
        return sub_462e(2717, -1, 0);
    case 23:
        return sub_462e(2718, -1, 0);
    case 24:
        return sub_462e(2719, -1, 0);
    case 25:
        return sub_462e(2720, -1, 0);
    case 26:
        return sub_462e(2721, -1, 0);
    case 27:
        return sub_462e(2722, -1, 0);
    case 28:
        return sub_462e(2723, -1, 0);
    case 29:
        return sub_462e(2724, -1, 0);
    case 30:
        return sub_462e(2725, -1, 0);
    case 31:
        return sub_462e(2726, -1, 0);
    case 32:
        return sub_462e(2727, -1, 0);
    case 33:
        return sub_462e(2728, -1, 0);
    case 34:
        return sub_462e(2729, -1, 0);
    case 35:
        return sub_462e(2730, -1, 0);
    case 36:
        return sub_462e(2731, -1, 0);
    case 37:
        return sub_462e(2732, -1, 0);
    case 38:
        return sub_462e(2733, -1, 0);
    case 39:
        return sub_462e(2734, -1, 0);
    case 40:
        return sub_462e(2735, -1, 0);
    case 41:
        return sub_462e(2736, -1, 0);
    case 42:
        return sub_462e(2737, -1, 0);
    case 43:
        return sub_462e(2738, -1, 0);
    case 44:
        return sub_462e(2739, -1, 0);
    case 45:
        return sub_462e(2740, -1, 0);
    case 46:
        return sub_462e(2741, -1, 0);
    case 47:
        return sub_462e(2742, -1, 0);
    case 48:
        return sub_462e(2743, -1, 0);
    case 49:
        return sub_462e(2744, -1, 0);
    }
    return 0;
}

auto sub_99bb(auto a_0, auto a_1) {
    v_4 = g_25CA05[a_0/*6*/][sub_2a8f(a_1)/*1*/];
    if (STATS::STAT_GET_BOOL(v_4, &v_5, -1)) {
        return v_5;
    }
    return 0;
}

auto sub_99e7(auto a_0, auto a_1, auto a_2) {
    if (a_1 == 5) {}
    if (a_2 == 0) {}
    switch (a_0) {
    case 15:
        return 25;
        break;
    case 16:
        return 25;
        break;
    case 12:
        return 25;
        break;
    case 25:
        return 7;
        break;
    case 26:
        return 28;
        break;
    case 31:
        return 43;
        break;
    }
    return 1;
}

auto sub_9a56(auto a_0, auto a_1) {
    if (a_1 == 9) {}
    switch (a_0) {
    case 0:
        return "MPAwards2";
    case 2:
        return "MPAwards5";
    case 3:
        return "MPAwards5";
    case 4:
        return "MPAwards5";
    case 5:
        return "MPAwards5";
    case 6:
        return "MPAwards5";
    case 7:
        return "MPAwards5";
    case 8:
        return "MPAwards5";
    case 9:
        return "MPAwards5";
    case 10:
        return "MPAwards5";
    case 11:
        return "MPAwards5";
    case 12:
        return "MPAwards5";
    case 13:
        return "MPAwards5";
    case 14:
        return "MPAwards5";
    case 15:
        return "MPAwards5";
    case 16:
        return "MPAwards5";
    case 17:
        return "MPAwards5";
    case 18:
        return "MPAwards5";
    case 20:
        return "MPAwards5";
    case 21:
        return "MPAwards5";
    case 22:
        return "MPAWARDS5";
    case 23:
        return "MPAwards4";
    case 25:
        return "MPAwardHeists";
    case 26:
        return "MPAwardHeists";
    case 27:
        return "MPAWARDS6";
    case 29:
        return "MPAwardHeists";
    case 28:
        return "MPAwardHeists";
    case 31:
        return "MPAwardHeists";
    case 32:
        return "MPAwardHeists";
    case 33:
        return "MPAwardHeists";
    }
    return "";
}

auto sub_9be1(auto a_0, auto a_1) {
    if (a_1 == 9) {
        a_1 = 9;
    }
    switch (a_0) {
    case 0:
        return "Buyeverygun";
    case 2:
        return "HoleInOne";
    case 3:
        return "TargetGridGranny";
    case 4:
        return "TennisFiveSets";
    case 5:
        return "TennisStraightSets";
    case 6:
        return "ClearAllGangHideouts";
    case 7:
        return "SixDartCheckout";
    case 8:
        return "WinEveryGameModeOnce";
    case 9:
        return "PickUpCrateFirst";
    case 10:
        return "WinEveryTypeOfRace";
    case 11:
        return "HoldaRaceWorldRecord";
    case 12:
        return "Wear25DifferentItemsOfClothing";
    case 13:
        return "FullyModACar";
    case 14:
        return "WinACustomClassRace";
    case 15:
        return "Play25DifferentDeathmatches";
    case 16:
        return "Play25DifferentRaces";
    case 17:
        return "MostKillsInGangAttack";
    case 18:
        return "MostKillsInSurvival";
    case 20:
        return "Kill3InARaceAndWin";
    case 21:
        return "GetATattooOnEachBodyPart";
    case 22:
        return "10KillStreakDeathmatch";
    case 23:
        return "Unirider";
    case 25:
        return "goaloriented";
    case 26:
        return "overachiever";
    case 27:
        return "joyrider";
    case 29:
        return "CantTouchThis";
    case 28:
        return "FairPlay";
    case 31:
        return "JackOfAllTrades";
    case 32:
        return "ItTakesTwo";
    case 33:
        return "Showroom";
    }
    return "";
}

auto sub_9d85(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_2 == 9) {}
    if (a_3) {}
    if (a_1 == 5) {}
    switch (a_0) {
    case 0:
        return "AWS_521";
    case 2:
        return "AWS_660";
    case 3:
        return "AWS_667";
    case 4:
        return "AWS_670";
    case 5:
        return "AWS_671";
    case 6:
        return "AWS_691";
    case 7:
        return "AWS_697";
    case 8:
        return "AWS_701";
    case 9:
        return "AWS_702";
    case 10:
        return "AWS_705";
    case 11:
        return "AWS_706";
    case 12:
        return "AWS_709";
    case 13:
        return "AWS_711";
    case 14:
        return "AWS_712";
    case 15:
        return "AWS_714";
    case 16:
        return "AWS_715";
    case 17:
        return "AWS_718";
    case 18:
        return "AWS_719";
    case 20:
        return "AWS_725";
    case 21:
        return "AWS_727";
    case 22:
        return "AWS_717";
    case 23:
        if (GAMEPLAY::_D3D15555431AB793()) {
            return "AWS_729_M";
        } else { 
            return "AWS_729";
        }
        break;
    case 25:
        return "AWS_783";
    case 26:
        return "AWS_784";
    case 27:
        return "AWS_771";
    case 29:
        return "AWS_751";
    case 33:
        return "AWS_763";
    case 28:
        return "AWS_754";
    case 31:
        return "AWS_765";
    case 32:
        return "AWS_756";
    }
    return "";
}

auto sub_9f44(auto a_0, auto a_1, auto a_2) {
    if (a_2) {}
    if (a_1 == 9) {}
    switch (a_0) {
    case 0:
        return "AWT_521";
    case 2:
        return "AWT_660";
    case 3:
        return "AWT_667";
    case 4:
        return "AWT_670";
    case 5:
        return "AWT_671";
    case 6:
        return "AWT_691";
    case 7:
        return "AWT_697";
    case 8:
        return "AWT_701";
    case 9:
        return "AWT_702";
    case 10:
        return "AWT_705";
    case 11:
        return "AWT_706";
    case 12:
        return "AWT_709";
    case 13:
        return "AWT_711";
    case 14:
        return "AWT_712";
    case 15:
        return "AWT_714";
    case 16:
        return "AWT_715";
    case 17:
        return "AWT_718";
    case 18:
        return "AWT_719";
    case 20:
        return "AWT_725";
    case 21:
        return "AWT_727";
    case 22:
        return "AWT_717";
    case 23:
        return "AWT_729";
    case 25:
        return "AWT_783";
    case 26:
        return "AWT_784";
    case 27:
        return "AWT_771";
    case 29:
        return "AWT_751";
    case 28:
        return "AWT_754";
    case 31:
        return "AWT_765";
    case 33:
        return "AWT_763";
    case 32:
        return "AWT_756";
        break;
    }
    return "";
}

auto sub_a0ec(auto a_0, auto a_1) {
    if (a_1 == 9) {}
    switch (a_0) {
    case 0:
        return 1;
    case 2:
        return 1;
    case 3:
        return 1;
    case 4:
        return 1;
    case 5:
        return 1;
    case 6:
        return 1;
    case 7:
        return 1;
    case 8:
        return 1;
    case 9:
        return 1;
    case 10:
        return 1;
    case 11:
        return 1;
    case 12:
        return 1;
    case 13:
        return 1;
    case 14:
        return 1;
    case 15:
        return 1;
    case 16:
        return 1;
    case 17:
        return 1;
    case 18:
        return 1;
    case 20:
        return 1;
    case 21:
        return 1;
    case 22:
        return 1;
    case 23:
        return 1;
    case 25:
        return 1;
    case 26:
        return 1;
    case 27:
        return 1;
    case 29:
        return 1;
    case 28:
        return 1;
    case 31:
        return 1;
    case 33:
        return 1;
    case 32:
        return 1;
    }
    return 0;
}

auto sub_a22f() {
    return 5;
}

auto sub_a238(auto a_0) {
    if (sub_99bb(a_0, -1)) {
        return 5;
    }
    return 0;
}

void sub_a24f(auto a_0, auto a_1, auto a_2, auto a_3) {
    switch (a_1) {
    case 0:
        a_1 = 0;
        break;
    case 1:
        a_1 = 1;
        break;
    case 2:
        a_1 = 2;
        break;
    case 3:
        a_1 = 3;
        break;
    case 4:
        a_1 = 4;
        break;
    case 5:
        a_1 = 5;
        break;
    case 6:
        a_1 = sub_bafe(a_0, a_2);
        break;
    case 7:
    case 8:
        a_1 = sub_ba89(a_0, a_2);
        break;
    }
    v_6 = sub_ba89(a_0, a_2);
    if (a_1 != 0) {
        if (a_1 != 1) {
            if (sub_6d84(a_0, a_2) != 1) {
                a_1 = 1;
            }
        }
    }
    v_7 = sub_b5fd(a_0, a_2);
    v_8 = sub_b157(a_0, a_1, a_2);
    v_9 = sub_a833(a_0, a_1, a_2);
    v_A = sub_a38b(a_0, a_1, a_2);
    v_B = sub_2ac3(a_0, v_6, a_2);
    v_C = sub_2a63(a_0, -1);
    v_D = sub_762a(a_1);
    v_E = sub_2ac3(a_0, v_D, a_2);
    v_F = v_B - v_E;
    v_10 = v_C - v_E;
    v_11 = SYSTEM::FLOOR((SYSTEM::TO_FLOAT(v_10) / SYSTEM::TO_FLOAT(v_F)) * 100.0);
    sub_70f7(v_7, v_8, v_9, v_A, v_B, v_C, v_11, a_1, a_3);
}

auto sub_a38b(auto a_0, auto a_1, auto a_2) {
    switch (a_0) {
    case 53:
        return "MPAwards5";
    case 39:
        return "MPAwards5";
    case 51:
        return "MPAwards5";
    case 52:
        return "MPAwards5";
    case 16:
        return "MPAwards2";
    case 60:
        return "MPAwards4";
    case 61:
        return "MPAwards4";
    case 62:
        return "MPAwards4";
    case 63:
        return "MPAwards4";
    case 0:
        switch (a_2) {
        case 9:
            switch (a_1) {
            case 0:
                return "MPAwards1";
            case 1:
                return "MPAwards1";
            case 2:
                return "MPAwards1";
            case 3:
                return "MPAwards1";
            case 4:
                return "MPAwards1";
            case 5:
                return "MPAwards1";
            }
            break;
        }
        break;
    case 12:
        return "MPAwards3";
    case 11:
        return "MPAwards4";
    case 20:
        return "MPAwards5";
    case 19:
        return "MPAwards2";
    case 15:
        return "MPAwards4";
    case 17:
        return "MPAwards2";
    case 18:
        return "MPAwards2";
    case 21:
        return "MPAwards2";
    case 14:
        return "MPAwards4";
    case 22:
        return "MPAwards1";
    case 1:
        return "MPAwards5";
    case 2:
        return "MPAwards5";
    case 3:
        return "MPAwards5";
    case 4:
        return "MPAwards5";
    case 5:
        return "MPAwards4";
    case 6:
        return "MPAwards5";
    case 7:
        return "MPAwards4";
    case 8:
        return "MPAwards5";
    case 9:
        return "MPAwards4";
    case 10:
        return "MPAwards2";
    case 23:
        return "MPAwards1";
    case 24:
        return "MPAwards1";
    case 25:
        return "MPAwards1";
    case 26:
        return "MPAwards1";
    case 27:
        return "MPAwards1";
    case 28:
        return "MPAwards1";
    case 29:
        return "MPAwards5";
    case 30:
        return "MPAWARDS5";
    case 31:
        return "MPAWARDS5";
    case 32:
        return "MPAWARDS5";
    case 33:
        return "MPAWARDS5";
    case 34:
        return "MPAWARDS5";
    case 35:
        return "MPAWARDS5";
    case 36:
        return "MPAWARDS5";
    case 37:
        return "MPAWARDS5";
    case 38:
        return "MPAWARDS5";
    case 40:
        return "MPAWARDS5";
    case 41:
        return "MPAWARDS5";
    case 42:
        return "MPAWARDS5";
    case 43:
        return "MPAWARDS5";
    case 44:
        return "MPAWARDS5";
    case 45:
        return "MPAWARDS5";
    case 46:
        return "MPAWARDS5";
    case 47:
        return "MPAWARDS5";
    case 48:
        return "MPAWARDS5";
    case 49:
        return "MPAWARDS5";
    case 50:
        return "MPAWARDS5";
    case 54:
        return "MPAWARDS5";
    case 55:
        return "MPAWARDS5";
    case 56:
        return "MPAWARDS5";
    case 57:
        return "MPAWARDS5";
    case 58:
        return "MPAWARDS5";
    case 59:
        return "MPAWARDS5";
    case 75:
        return "MPAwardHeists";
    case 76:
        return "MPAwardHeists";
    case 77:
        return "MPAwardHeists";
    case 78:
        return "MPAwardHeists";
    case 79:
        return "MPAwardHeists";
    case 67:
        return "MPAwardHeists";
    case 65:
        return "MPAWARDS6";
    case 66:
        return "MPAWARDS6";
    case 68:
        return "MPAWARDS6";
    case 69:
        return "MPAwardHeists";
    case 70:
        return "MPAwardHeists";
    case 71:
        return "MPAwardHeists";
    case 72:
        return "MPAwardHeists";
    case 73:
        return "MPAwardHeists";
    case 74:
        return "MPAwardHeists";
    case 80:
        return "MPAwardHeists";
    case 81:
        return "MPAwardHeists";
    case 82:
        return "MPAwardHeists";
    case 83:
        return "MPAwardHeists";
    case 84:
        return "MPAwardHeists";
    case 85:
        return "MPAwardHeists";
    case 86:
        return "MPAwardHeists";
    case 87:
        return "MPAwardHeists";
    }
    return "";
}

auto sub_a833(auto a_0, auto a_1, auto a_2) {
    if (a_2 == 9) {}
    switch (a_0) {
    case 53:
        return "ShootDownPoliceHeli";
    case 39:
        return "ComeFromBehind";
    case 60:
        return "TheFugitive";
    case 61:
        return "NoClaimsBonus";
    case 62:
        return "swallow";
    case 63:
        return "Spinderella";
    case 16:
        return "Timeinheli";
    case 0:
        return "HangingOutInCars";
    case 51:
        return "WinRallyAsDriver";
    case 52:
        return "WinRallyAsNavigator";
    case 12:
        switch (a_2) {
        case 9:
            return "Killenemiesindriveby";
        }
        break;
    case 11:
        switch (a_2) {
        case 9:
            return "JackVehicles";
        }
        break;
    case 20:
        return "Jump40m";
    case 19:
        switch (a_2) {
        case 9:
            return "Timesavoiding5stars";
        }
        break;
    case 15:
        switch (a_2) {
        case 9:
            switch (a_1) {
            case 0:
                return "GetLapDances";
            case 1:
                return "GetLapDances";
            case 2:
                return "GetLapDances";
            case 3:
                return "GetLapDances";
            case 4:
                return "GetLapDances";
            case 5:
                return "GetLapDances";
            }
            break;
        }
        break;
    case 17:
        switch (a_2) {
        case 9:
            switch (a_1) {
            case 0:
                return "Delivercars";
            case 1:
                return "Delivercars";
            case 2:
                return "Delivercars";
            case 3:
                return "Delivercars";
            case 4:
                return "Delivercars";
            case 5:
                return "Delivercars";
            }
            break;
        }
        break;
    case 18:
        switch (a_1) {
        case 0:
            return "Securityvansrobbed";
        case 1:
            return "Securityvansrobbed";
        case 2:
            return "Securityvansrobbed";
        case 3:
            return "Securityvansrobbed";
        case 4:
            return "Securityvansrobbed";
        case 5:
            return "Securityvansrobbed";
        }
        break;
    case 21:
        switch (a_2) {
        case 9:
            switch (a_1) {
            case 0:
                return "racesWon_generic";
            case 1:
                return "racesWon_generic";
            case 2:
                return "racesWon_generic";
            case 3:
                return "racesWon_generic";
            case 4:
                return "racesWon_generic";
            case 5:
                return "racesWon_generic";
            }
            break;
        }
        break;
    case 14:
        switch (a_2) {
        case 9:
            switch (a_1) {
            case 0:
                return "HoldUpShops";
            case 1:
                return "HoldUpShops";
            case 2:
                return "HoldUpShops";
            case 3:
                return "HoldUpShops";
            case 4:
                return "HoldUpShops";
            case 5:
                return "HoldUpShops";
            }
            break;
        }
        break;
    case 22:
        switch (a_2) {
        case 9:
            switch (a_1) {
            case 0:
                return "ArmWrestlingVictories";
            case 1:
                return "ArmWrestlingVictories";
            case 2:
                return "ArmWrestlingVictories";
            case 3:
                return "ArmWrestlingVictories";
            case 4:
                return "ArmWrestlingVictories";
            case 5:
                return "ArmWrestlingVictories";
            }
            break;
        }
        break;
    case 1:
        switch (a_2) {
        case 9:
            switch (a_1) {
            case 0:
                return "KillPistol";
            case 1:
                return "KillPistol";
            case 2:
                return "KillPistol";
            case 3:
                return "KillPistol";
            case 4:
                return "KillPistol";
            case 5:
                return "KillPistol";
            }
            break;
        }
        break;
    case 2:
        switch (a_2) {
        case 9:
            switch (a_1) {
            case 0:
                return "KillSniperrifle";
            case 1:
                return "KillSniperrifle";
            case 2:
                return "KillSniperrifle";
            case 3:
                return "KillSniperrifle";
            case 4:
                return "KillSniperrifle";
            case 5:
                return "KillSniperrifle";
            }
            break;
        }
        break;
    case 3:
        switch (a_2) {
        case 9:
            switch (a_1) {
            case 0:
                return "KillGrenades";
            case 1:
                return "KillGrenades";
            case 2:
                return "KillGrenades";
            case 3:
                return "KillGrenades";
            case 4:
                return "KillGrenades";
            case 5:
                return "KillGrenades";
            }
            break;
        }
        break;
    case 4:
        switch (a_2) {
        case 9:
            switch (a_1) {
            case 0:
                return "KillShotgun";
            case 1:
                return "KillShotgun";
            case 2:
                return "KillShotgun";
            case 3:
                return "KillShotgun";
            case 4:
                return "KillShotgun";
            case 5:
                return "KillShotgun";
            }
            break;
        }
        break;
    case 5:
        switch (a_2) {
        case 9:
            switch (a_1) {
            case 0:
                return "KillSMG";
            case 1:
                return "KillSMG";
            case 2:
                return "KillSMG";
            case 3:
                return "KillSMG";
            case 4:
                return "KillSMG";
            case 5:
                return "KillSMG";
            }
            break;
        }
        break;
    case 6:
        switch (a_2) {
        case 9:
            switch (a_1) {
            case 0:
                return "KillRocketLauncher";
            case 1:
                return "KillRocketLauncher";
            case 2:
                return "KillRocketLauncher";
            case 3:
                return "KillRocketLauncher";
            case 4:
                return "KillRocketLauncher";
            case 5:
                return "KillRocketLauncher";
            }
            break;
        }
        break;
    case 7:
        return "KillStickyBombs";
    case 8:
        return "KillMeleeWeapons";
    case 9:
        return "Headshots";
    case 10:
        return "BlowupVehicles";
    case 23:
        return "Winatdarts";
    case 24:
        return "Blowupenemiesusingcarbombs";
    case 25:
        return "KilledpeoplewithanAssaultRifle";
    case 26:
        return "KilledpeoplewithaMachineGun";
    case 27:
        return "Gethaircuts";
    case 28:
        return "Parachute1min";
    case 29:
        return "ParachuteJumps20m";
    case 30:
        return "Birdie";
    case 31:
        return "GolfWin";
    case 32:
        return "TargetGridWin";
    case 33:
        return "RandomTargetsWin";
    case 34:
        return "CoveredTargetsWin";
    case 35:
        return "TennisMatchesWon";
    case 36:
        return "TennisServiceAce";
    case 37:
        return "GTARacesWon";
    case 38:
        return "FastestLap";
    case 40:
        return "DeathmatchWin";
    case 41:
        return "TeamDeathmatchWin";
    case 42:
        return "TeamDeathmatchMVP";
    case 43:
        return "KillStreak";
    case 44:
        return "TotalKills";
    case 45:
        return "HatTrickKiller";
    case 46:
        return "StolenKill";
    case 47:
        return "Land2mFromTarget";
    case 48:
        return "ReachHordeModeWave";
    case 49:
        return "EarnCashFromBetting";
    case 50:
        return "CollectedCrates";
    case 54:
        return "RaceToPointWinner";
    case 55:
        return "BountyHunter";
    case 56:
        return "OverallKills";
    case 57:
        return "WinASeaRace";
    case 58:
        return "WinAPlaneRace";
    case 59:
        return "GetRevengeKillDeathmatch";
    case 75:
        return "Captured";
    case 76:
        return "ThePostman";
    case 77:
        return "GimmeThat";
    case 78:
        return "NoYouDont";
    case 79:
        return "DeathDefying";
    case 65:
        return "FlyBye";
    case 66:
        return "Overhere";
    case 68:
        return "Autogo";
    case 67:
        return "dailyduty";
    case 69:
        return "TheBigTime";
    case 70:
        return "BePrepared";
    case 71:
        return "ForHire";
    case 72:
        return "ShotCaller";
    case 73:
        return "LiveALittle";
    case 74:
        return "Decorated";
    case 80:
        return "LightsOut";
    case 81:
        return "InControl";
    case 82:
        return "PsychoKiller";
    case 83:
        return "CalmDown";
    case 84:
        return "StillStanding";
    case 85:
        return "OneAndOnly";
    case 86:
        return "OneManArmy";
    case 87:
        return "MovingDay";
    }
    return "";
}

auto sub_b157(auto a_0, auto a_1, auto a_2) {
    if (a_1 == 5) {}
    if (a_2 == 9) {}
    switch (a_0) {
    case 53:
        return "AWS_721";
    case 60:
        return "AWS_728";
    case 61:
        return "AWS_730";
    case 62:
        return "AWS_731";
    case 63:
        return "AWS_732";
    case 16:
        return "AWS_550";
    case 0:
        return "AWS_282";
    case 51:
        return "AWS_707";
    case 52:
        return "AWS_708";
    case 12:
        return "AWS_581";
    case 11:
        return "AWS_582";
    case 19:
        return "AWS_534";
    case 20:
        if (GAMEPLAY::_D3D15555431AB793()) {
            return "AWS_509_M";
        } else { 
            return "AWS_509";
        }
        break;
    case 39:
        return "AWS_678";
    case 15:
        return "AWS_559";
    case 17:
        return "AWS_535";
    case 18:
        return "AWS_571";
    case 21:
        return "AWS_586";
    case 14:
        return "AWS_566";
    case 22:
        return "AWS_589";
    case 1:
        return "AWS_506";
    case 2:
        return "AWS_585";
    case 3:
        return "AWS_541";
    case 4:
        return "AWS_584";
    case 5:
        return "AWS_540";
    case 6:
        return "AWS_539";
    case 7:
        return "AWS_538";
    case 8:
        return "AWS_537";
    case 9:
        return "AWS_536";
    case 10:
        return "AWS_583";
    case 23:
        return "AWS_610";
    case 24:
        return "AWS_611";
    case 25:
        return "AWS_631";
    case 26:
        return "AWS_632";
    case 27:
        return "AWS_639";
    case 28:
        return "AWS_640";
    case 29:
        if (GAMEPLAY::_D3D15555431AB793()) {
            return "AWS_699_m";
        } else { 
            return "AWS_699";
        }
        break;
    case 30:
        return "AWS_661";
    case 31:
        return "AWS_662";
    case 32:
        return "AWS_663";
    case 33:
        return "AWS_665";
    case 34:
        return "AWS_666";
    case 35:
        return "AWS_668";
    case 36:
        return "AWS_669";
    case 37:
        return "AWS_675";
    case 38:
        return "AWS_676";
    case 40:
        return "AWS_679";
    case 41:
        return "AWS_681";
    case 42:
        return "AWS_682";
    case 43:
        return "AWS_677";
    case 44:
        return "AWS_683";
    case 45:
        return "AWS_684";
    case 46:
        return "AWS_685";
    case 47:
        return "AWS_692";
    case 48:
        return "AWS_696";
    case 49:
        return "AWS_693";
    case 50:
        return "AWS_695";
    case 54:
        return "AWS_710";
    case 55:
        return "AWS_703";
    case 56:
        return "AWS_704";
    case 57:
        return "AWS_722";
    case 58:
        return "AWS_723";
    case 59:
        return "AWS_716";
    case 75:
        return "AWS_740";
    case 76:
        return "AWS_741";
    case 77:
        return "AWS_742";
    case 78:
        return "AWS_743";
    case 79:
        return "AWS_744";
    case 67:
        return "AWS_782";
    case 65:
        return "AWS_766";
    case 66:
        return "AWS_769";
    case 68:
        return "AWS_770";
    case 69:
        return "AWS_745";
    case 70:
        return "AWS_746";
    case 71:
        return "AWS_747";
    case 72:
        return "AWS_748";
    case 73:
        return "AWS_749";
    case 74:
        return "AWS_752";
    case 80:
        return "AWS_755";
    case 81:
        return "AWS_757";
    case 82:
        return "AWS_758";
    case 83:
        return "AWS_759";
    case 84:
        return "AWS_760";
    case 85:
        return "AWS_761";
    case 86:
        return "AWS_762";
    case 87:
        return "AWS_764";
    }
    return "";
}

auto sub_b5fd(auto a_0, auto a_1) {
    if (a_1 == 9) {}
    switch (a_0) {
    case 53:
        return "AWT_721";
    case 39:
        return "AWT_678";
    case 51:
        return "AWT_707";
    case 52:
        return "AWT_708";
    case 60:
        return "AWT_728";
    case 61:
        return "AWT_730";
    case 62:
        return "AWT_731";
    case 63:
        return "AWT_732";
    case 16:
        return "AWT_550";
    case 0:
        return "AWT_282";
    case 12:
        return "AWT_581";
    case 11:
        return "AWT_582";
    case 19:
        return "AWT_534";
    case 20:
        if (GAMEPLAY::_D3D15555431AB793()) {
            return "AWT_509";
        } else { 
            return "AWT_509";
        }
        break;
    case 15:
        return "AWT_559";
    case 17:
        return "AWT_535";
    case 18:
        return "AWT_571";
    case 21:
        return "AWT_586";
    case 14:
        return "AWT_566";
    case 22:
        return "AWT_589";
    case 1:
        return "AWT_506";
    case 2:
        return "AWT_585";
    case 3:
        return "AWT_541";
    case 4:
        return "AWT_584";
    case 5:
        return "AWT_540";
    case 6:
        return "AWT_539";
    case 7:
        return "AWT_538";
    case 8:
        return "AWT_537";
    case 9:
        return "AWT_536";
    case 10:
        return "AWT_583";
    case 23:
        return "AWT_610";
    case 24:
        return "AWT_611";
    case 25:
        return "AWT_631";
    case 26:
        return "AWT_632";
    case 27:
        return "AWT_639";
    case 28:
        return "AWT_640";
    case 29:
        return "AWT_699";
    case 30:
        return "AWT_661";
    case 31:
        return "AWT_662";
    case 32:
        return "AWT_663";
    case 33:
        return "AWT_665";
    case 34:
        return "AWT_666";
    case 35:
        return "AWT_668";
    case 36:
        return "AWT_669";
    case 37:
        return "AWT_675";
    case 38:
        return "AWT_676";
    case 40:
        return "AWT_679";
    case 41:
        return "AWT_681";
    case 42:
        return "AWT_682";
    case 43:
        return "AWT_677";
    case 44:
        return "AWT_683";
    case 45:
        return "AWT_684";
    case 46:
        return "AWT_685";
    case 47:
        return "AWT_692";
    case 48:
        return "AWT_696";
    case 49:
        return "AWT_693";
    case 50:
        return "AWT_695";
    case 54:
        return "AWT_710";
    case 55:
        return "AWT_703";
    case 56:
        return "AWT_704";
    case 57:
        return "AWT_722";
    case 58:
        return "AWT_723";
    case 59:
        return "AWT_716";
    case 75:
        return "AWT_740";
    case 76:
        return "AWT_741";
    case 77:
        return "AWT_742";
    case 78:
        return "AWT_743";
    case 79:
        return "AWT_744";
    case 67:
        return "AWT_782";
    case 65:
        return "AWT_766";
    case 66:
        return "AWT_769";
    case 68:
        return "AWT_770";
    case 69:
        return "AWT_745";
    case 70:
        return "AWT_746";
    case 71:
        return "AWT_747";
    case 72:
        return "AWT_748";
    case 73:
        return "AWT_749";
    case 74:
        return "AWT_752";
    case 80:
        return "AWT_755";
    case 81:
        return "AWT_757";
    case 82:
        return "AWT_758";
    case 83:
        return "AWT_759";
    case 84:
        return "AWT_760";
    case 85:
        return "AWT_761";
    case 86:
        return "AWT_762";
    case 87:
        return "AWT_764";
    }
    return "";
}

auto sub_ba89(auto a_0, auto a_1) {
    if (sub_7a01(sub_2a63(a_0, -1), sub_2ac3(a_0, 5, a_1))) {
        return 5;
    }
    if (sub_7a01(sub_2a63(a_0, -1), sub_2ac3(a_0, 4, a_1))) {
        return 5;
    }
    if (sub_7a01(sub_2a63(a_0, -1), sub_2ac3(a_0, 3, a_1))) {
        return 4;
    }
    if (sub_7a01(sub_2a63(a_0, -1), sub_2ac3(a_0, 2, a_1))) {
        return 3;
    }
    return 2;
}

auto sub_bafe(auto a_0, auto a_1) {
    if (!sub_7a01(sub_2a63(a_0, -1), sub_2ac3(a_0, 2, a_1))) {
        return 0;
    }
    if (!sub_7a01(sub_2a63(a_0, -1), sub_2ac3(a_0, 3, a_1))) {
        return 2;
    }
    if (!sub_7a01(sub_2a63(a_0, -1), sub_2ac3(a_0, 4, a_1))) {
        return 3;
    }
    if (!sub_7a01(sub_2a63(a_0, -1), sub_2ac3(a_0, 5, a_1))) {
        return 4;
    }
    return 5;
}

void sub_bb77(auto a_0, auto a_1) {
    v_4 = 12;
    v_5 = a_0._f1C7;
    switch (a_1._f5) {
    case 0:
        v_5 = v_5;
        break;
    default:
        if (a_1._f5 < l_CA) {
            v_5 += v_4 * a_1._f5;
        } else { 
            v_5 += v_4 * a_1._f5;
        }
        break;
    }
    v_6 = a_1._f5 + 1;
    v_7 = l_CA + 1;
    sub_bbe3(0, v_6, v_7, "HUD_PAGE", 0);
}

void sub_bbe3(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    GRAPHICS::_AB58C27C2E6123C6("SET_COLUMN_SCROLL");
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(a_0);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(a_1);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(a_2);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(-1);
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_3)) {
        GRAPHICS::_BEGIN_TEXT_COMPONENT(a_3);
        UI::ADD_TEXT_COMPONENT_INTEGER(a_1);
        UI::ADD_TEXT_COMPONENT_INTEGER(a_2);
        GRAPHICS::_END_TEXT_COMPONENT();
    } else { 
        sub_25bb("");
    }
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_BOOL(a_4);
    GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
}

auto sub_bc40(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6 = a_0 + (a_1 * 4);
    switch (a_3) {
    case 188:
        if (a_2 == l_CA) {
            if ((v_6 < 0) || (v_6 > (l_CB - 1))) {
                for (v_7 = 0; v_7 <= 3; v_7 += 1) {
                    if ((v_6 < 0) || (v_6 > (l_CB - 1))) {
                        a_1 = 3 - v_7;
                        v_6 = a_0 + (a_1 * 4);
                    } else { 
                        v_7 = 3;
                    }
                }
            }
        }
        break;
    case 187:
        if (a_2 == l_CA) {
            if ((v_6 < 0) || (v_6 > (l_CB - 1))) {
                for (v_7 = 0; v_7 <= 3; v_7 += 1) {
                    if ((v_6 < 0) || (v_6 > (l_CB - 1))) {
                        a_1 = v_7;
                        v_6 = a_0 + (a_1 * 4);
                    } else { 
                        v_7 = 3;
                    }
                }
            }
        }
        break;
    case 189:
        break;
    case 190:
        if (a_2 == l_CA) {
            if (a_0 == 0) {
                v_6 = a_0 + (a_1 * 4);
                for (v_7 = 0; v_7 <= 3; v_7 += 1) {
                    if (v_6 > (l_CB - 1)) {
                        a_1 -= 1;
                        v_6 = a_0 + (a_1 * 4);
                    } else { 
                        v_7 = 3;
                    }
                }
            } else if (v_6 > (l_CB - 1)) {
                if (a_0 > 0) {
                    a_0 -= 1;
                } else { 
                    a_0 = 0;
                }
                v_6 = a_0 + (a_1 * 4);
            }
        }
        break;
    }
    return v_6;
}

void sub_bdaa(auto a_0, auto a_1) {
    if (a_1._f5 > l_CA) {
        sub_be97(a_0);
        a_1._f5 = 0;
        a_1._f1 = 0;
    }
}

void sub_bdcb() {
    sub_bbe3(0, -1, -1, 0, 0);
}

void sub_bddc() {
    sub_bdf1();
    sub_bbe3(0, -1, -1, 0, 0);
}

void sub_bdf1() {
    sub_bdfe(0);
}

void sub_bdfe(auto a_0) {
    if (a_0) {
        sub_be22(0, 3, 0, 2, 0, 0);
    } else { 
        sub_be22(0, 2, 0, 2, 1, 0);
    }
}

void sub_be22(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    GRAPHICS::_AB58C27C2E6123C6("INIT_COLUMN_SCROLL");
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(a_0);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_BOOL(0);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(a_1);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(a_2);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(a_3);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_BOOL(1);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(a_4);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_BOOL(a_5);
    GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
}

void sub_be65(auto a_0) {
    a_0._f1CF = 1;
}

void sub_be73(auto a_0) {
    a_0._f1CE = 1;
}

void sub_be81(auto a_0, auto a_1) {
    a_1._f1C7 = a_0;
    a_1._f1C8 = a_0;
}

void sub_be97(auto a_0) {
    sub_beab(a_0);
    a_0._f1CC = 1;
}

void sub_beab(auto a_0) {
    asm .vardef<F> 3, "[{\"type\":\"field\",\"value\":[{\"offset\":1,\"value\":12}]},{\"type\":\"field\",\"value\":[{\"offset\":14,\"value\":12}]},{\"type\":\"field\",\"value\":[{\"offset\":111,\"value\":12}]},{\"type\":\"field\",\"value\":[{\"offset\":208,\"value\":12}]},{\"type\":\"field\",\"value\":[{\"offset\":221,\"value\":12}]},{\"type\":\"field\",\"value\":[{\"offset\":234,\"value\":12}]},{\"type\":\"field\",\"value\":[{\"offset\":331,\"value\":12}]},{\"type\":\"field\",\"value\":[{\"offset\":428,\"value\":12}]},{\"type\":\"field\",\"value\":[{\"offset\":441,\"value\":12}]}]"
    a_0/*{471}*/ = v_3;
}

void sub_bf04(auto a_0) {
    a_0._f17F = 1;
}

void sub_bf12(auto a_0, auto a_1) {
    a_1._f17C = a_0;
}

void sub_bf21(auto a_0) {
    sub_bf35(a_0);
    a_0._f17E = 1;
}

void sub_bf35(auto a_0) {
    asm .vardef<F> 3, "[{\"type\":\"field\",\"value\":[{\"offset\":1,\"value\":16}]},{\"type\":\"field\",\"value\":[{\"offset\":18,\"value\":16}]},{\"type\":\"field\",\"value\":[{\"offset\":275,\"value\":16}]},{\"type\":\"field\",\"value\":[{\"offset\":292,\"value\":16}]},{\"type\":\"field\",\"value\":[{\"offset\":309,\"value\":16}]},{\"type\":\"field\",\"value\":[{\"offset\":326,\"value\":16}]},{\"type\":\"field\",\"value\":[{\"offset\":343,\"value\":16}]},{\"type\":\"field\",\"value\":[{\"offset\":360,\"value\":16}]}]"
    a_0/*{384}*/ = v_3;
}