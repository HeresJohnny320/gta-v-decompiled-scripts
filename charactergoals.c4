// listener's C4 decompiler

void main() {
    l_2 = 1;
    l_3 = 134;
    l_4 = 134;
    l_5 = 1;
    l_6 = 1;
    l_7 = 1;
    l_8 = 134;
    l_9 = 1;
    l_A = 12;
    l_B = 12;
    l_E = 0.001;
    if (PLAYER::_C968670BFACE42D9(2)) {
        sub_164d();
    }
    while (1) {
        SYSTEM::WAIT(250);
        switch (l_11) {
        case 0:
            if (l_12[0/*1*/]) {
                if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
                    g_41AB[3/*42*/]._f1B[0/*1*/] = sub_15f5(2);
                    sub_15ac(2, 32, g_41AB[3/*42*/]._f1B[0/*1*/]);
                }
                g_41AB[3/*42*/]/*"16"*/ = "PA_TREV1";
                g_41AB[3/*42*/]._f4/*"16"*/ = "PA_TREV1";
                g_41AB[3/*42*/]._f8 = 0;
                g_41AB[3/*42*/]._f9 = 1;
                g_41AB[3/*42*/]._fA[1/*4*/]/*"16"*/ = "PA_TREV1A";
                g_41AB[3/*42*/]._f25[1/*1*/] = 0;
                if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
                    g_41AB[3/*42*/]._f1B[1/*1*/] = sub_15f5(2);
                }
                sub_12af(2, 3, 1, 1);
                sub_120f("PA_TREV1A", g_41AB[3/*42*/]._f1B[1/*1*/]);
                l_11 = 1;
            }
            break;
        case 1:
            if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
                g_41AB[3/*42*/]._f1B[1/*1*/] = sub_15f5(2);
                if (sub_11f4(2, 999999)) {
                    sub_11d5("PA_COMPLETE", "PA_TREV1", 2000, 1);
                    g_41AB[3/*42*/]._f25[1/*1*/] = 1;
                    g_41AB[3/*42*/]._f8 = 1;
                    l_17 = GAMEPLAY::GET_GAME_TIMER();
                    l_11 = 2;
                } else if (sub_11f4(2, 499999)) {
                    if (!l_15) {
                        sub_11bc("PA_TREV1", 2000, 1);
                        l_15 = 1;
                    }
                }
                if (l_12[1/*1*/]) {
                    sub_1d2(2, 32, 500000, 0, 0);
                    l_12[1/*1*/] = 0;
                }
            }
            break;
        case 2:
            l_16 = GAMEPLAY::GET_GAME_TIMER();
            if ((l_16 - l_17) < 5000) {
                sub_120f("PA_TREV1A", g_41AB[3/*42*/]._f1B[1/*1*/]);
            }
            break;
        }
    }
}

void sub_1d2(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (g_17C49._f744E[a_0/*29*/]._f11 == 3) {
        return ;
    }
    if (g_17C49._f744E[a_0/*29*/]._f11 == 4) {
        return ;
    }
    sub_2b9(g_17C49._f744E[a_0/*29*/]._f11, 1, a_1, a_2, 0);
    if (a_3) {
        v_7 = 0;
        if (a_4) {
            switch (a_0) {
            case 0:
                v_8 = 0x690be17a;
                break;
            case 1:
                v_8 = 0xdf8f768a;
                break;
            case 2:
                v_8 = 0xbb95b3e0;
                break;
            default:
                return ;
            }
        } else { 
            switch (a_0) {
            case 0:
                v_8 = 0x841e7ef;
                break;
            case 1:
                v_8 = 0x29337bb6;
                break;
            case 2:
                v_8 = 0xbc68cf93;
                break;
            default:
                return ;
            }
        }
        STATS::STAT_GET_INT(v_8, &v_7, -1);
        v_7 += a_2;
        STATS::STAT_SET_INT(v_8, v_7, 1);
    }
}

auto sub_2b9(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    sub_1147();
    if (a_3 < 1) {
        return 0;
    }
    v_7 = 1.0;
    switch (a_1) {
    case 0:
        switch (a_0) {
        case 0:
            sub_10ea(99, 1);
            sub_10c7(0xd8dde3ac, a_3);
            break;
        case 1:
            sub_10c7(0x82f04461, a_3);
            break;
        case 2:
            sub_10c7(0x5e1032a2, a_3);
            break;
        }
        sub_d2f(0);
        switch (a_2) {
        case 123:
        case 124:
        case 125:
        case 126:
        case 127:
            if (sub_cf3(5)) {
                v_7 = 0.9;
                v_8 = 5;
            }
            break;
        case 63:
        case 64:
        case 65:
        case 66:
        case 67:
        case 68:
            switch (a_0) {
            case 0:
                sub_10c7(0xb90a1501, a_3);
                break;
            case 1:
                sub_10c7(0x1d36ffe4, a_3);
                break;
            case 2:
                sub_10c7(0x7375f79, a_3);
                break;
            }
            if (sub_cf3(1)) {
                v_7 = 0.0;
                v_8 = 1;
            }
            break;
        case 21:
            switch (a_0) {
            case 0:
                sub_10c7(0xd156803, a_3);
                break;
            case 1:
                sub_10c7(0x6f8ce97a, a_3);
                break;
            case 2:
                sub_10c7(0x87561c19, a_3);
                break;
            }
            break;
        case 25:
            switch (a_0) {
            case 0:
                sub_10c7(0x1a5c0a6, a_3);
                break;
            case 1:
                sub_10c7(0x192b26bc, a_3);
                break;
            case 2:
                sub_10c7(0x12d8dfd0, a_3);
                break;
            }
            break;
        case 97:
        case 98:
        case 99:
        case 100:
        case 102:
        case 103:
        case 104:
        case 105:
        case 106:
        case 107:
        case 108:
        case 109:
        case 110:
        case 111:
            switch (a_0) {
            case 0:
                sub_10c7(0x6bb0a613, a_3);
                break;
            case 1:
                sub_10c7(0x5dfbc6d0, a_3);
                break;
            case 2:
                sub_10c7(0x280c1bd4, a_3);
                break;
            }
            break;
        default:
            switch (SCRIPT::_GET_THIS_SCRIPT_HASH()) {
            case ${clothes_shop_sp}:
                switch (a_0) {
                case 0:
                    sub_10c7(0x185b8f46, a_3);
                    break;
                case 1:
                    sub_10c7(0xe6ae13d3, a_3);
                    break;
                case 2:
                    sub_10c7(0xdebb7d4a, a_3);
                    break;
                }
                break;
            case ${hairdo_shop_sp}:
                switch (a_0) {
                case 0:
                    sub_10c7(0x79818787, a_3);
                    break;
                case 1:
                    sub_10c7(0xddda2f69, a_3);
                    break;
                case 2:
                    sub_10c7(0xc723e8ec, a_3);
                    break;
                }
                if (sub_cf3(0)) {
                    v_7 = 0.0;
                    v_8 = 0;
                }
                break;
            case ${gunclub_shop}:
                switch (a_0) {
                case 0:
                    sub_10c7(0xe56d46f6, a_3);
                    break;
                case 1:
                    sub_10c7(0xad57c3a1, a_3);
                    break;
                case 2:
                    sub_10c7(0xd49e38cd, a_3);
                    break;
                }
                break;
            case ${carmod_shop}:
                switch (a_0) {
                case 0:
                    sub_10c7(0x980b9ad0, a_3);
                    break;
                case 1:
                    sub_10c7(0x2fa911e0, a_3);
                    break;
                case 2:
                    sub_10c7(0xad45726, a_3);
                    break;
                }
                sub_cd3(a_3);
                break;
            }
            break;
        }
        break;
    case 1:
        switch (a_0) {
        case 0:
            sub_10ea(95, a_3);
            break;
        case 1:
            sub_10ea(97, a_3);
            break;
        case 2:
            sub_10ea(96, a_3);
            break;
        }
        sub_10ea(98, a_3);
        break;
    }
    v_9 = a_0;
    a_3 = SYSTEM::FLOOR(v_7 * SYSTEM::TO_FLOAT(a_3));
    v_A = 0;
    v_B = a_3;
    if (v_7 == 0.0) {
        sub_b94(v_8);
        return 1;
    } else if (v_7 != 1.0) {
        sub_b94(v_8);
    }
    v_C = g_CAD5[v_9/*1*/] + a_3;
    switch (a_1) {
    case 1:
        if ((g_CAD5[v_9/*1*/] >= 0) && (a_3 > 0)) {
            if (v_C <= 0) {
                g_CAD5[v_9/*1*/] = 0x7fffffff;
            } else { 
                g_CAD5[v_9/*1*/] += a_3;
            }
        }
        switch (a_0) {
        case 0:
            sub_10c7(0xec4f6a3c, a_3);
            break;
        case 1:
            sub_10c7(0x652ec70d, a_3);
            break;
        case 2:
            sub_10c7(0x63d3c8a1, a_3);
            break;
        }
        break;
    case 0:
        if (!a_4) {
            if ((g_CAD5[v_9/*1*/] - a_3) < 0) {
                return 0;
            }
        }
        v_A = g_CAD5[v_9/*1*/];
        g_CAD5[v_9/*1*/] -= a_3;
        if (a_4) {
            v_B = v_A;
        }
        break;
    }
    if (a_2 == 1) {
        if (v_B > 20) {}
    } else { 
        g_17C49._f5CED._fE9[v_9/*69*/]._f2[g_17C49._f5CED._fE9[v_9/*69*/]._f1/*6*/] = a_1;
        g_17C49._f5CED._fE9[v_9/*69*/]._f2[g_17C49._f5CED._fE9[v_9/*69*/]._f1/*6*/]._f1 = a_2;
        g_17C49._f5CED._fE9[v_9/*69*/]._f2[g_17C49._f5CED._fE9[v_9/*69*/]._f1/*6*/]._f2 = a_3;
        g_17C49._f5CED._fE9[v_9/*69*/] += 1;
        g_17C49._f5CED._fE9[v_9/*69*/]._f1 += 1;
        if (g_17C49._f5CED._fE9[v_9/*69*/]._f1 > 10) {
            g_17C49._f5CED._fE9[v_9/*69*/]._f1 = 0;
        }
    }
    sub_b3a(a_0);
    if (g_8861 == 15) {
        sub_8b8(0);
    }
    return 1;
}

void sub_8b8(auto a_0) {
    v_3 = 0;
    v_4 = 0;
    for (v_3 = 0; v_3 < 3; v_3 += 1) {
        for (v_4 = 0; v_4 < 11; v_4 += 1) {
            g_17C49._f5CED._fE9[v_3/*69*/]._f2[v_4/*6*/]._f3 = g_17C49._f5CED._fE9[v_3/*69*/]._f2[v_4/*6*/];
            g_17C49._f5CED._fE9[v_3/*69*/]._f2[v_4/*6*/]._f4 = g_17C49._f5CED._fE9[v_3/*69*/]._f2[v_4/*6*/]._f1;
            g_17C49._f5CED._fE9[v_3/*69*/]._f2[v_4/*6*/]._f5 = g_17C49._f5CED._fE9[v_3/*69*/]._f2[v_4/*6*/]._f2;
        }
    }
    for (v_3 = 0; v_3 < 10; v_3 += 1) {
        g_CADD[v_3/*3*/][0/*1*/] = g_17C49._f5CED[v_3/*1*/];
        g_CADD._f1F[v_3/*3*/][0/*1*/] = g_17C49._f5CED._fB[v_3/*1*/];
        g_CADD._f3E[v_3/*3*/][0/*1*/] = g_17C49._f5CED._f16[v_3/*1*/];
        g_CADD._f5D[v_3/*3*/][0/*1*/] = g_17C49._f5CED._f21[v_3/*1*/];
        g_CADD._f7C[v_3/*3*/][0/*1*/] = g_17C49._f5CED._f2C[v_3/*1*/];
        g_CADD._f9B[v_3/*3*/][0/*1*/] = g_17C49._f5CED._f37[v_3/*1*/];
        g_CADD._fBA[v_3/*3*/][0/*1*/] = g_17C49._f5CED._f42[v_3/*1*/];
        g_CADD._fD9[v_3/*3*/][0/*1*/] = g_17C49._f5CED._f4D[v_3/*1*/];
        g_CADD._fF8[v_3/*3*/][0/*1*/] = g_17C49._f5CED._f58[v_3/*1*/];
        if (!a_0) {
            g_CADD[v_3/*3*/][1/*1*/] = g_17C49._f5CED[v_3/*1*/];
            g_CADD._f1F[v_3/*3*/][1/*1*/] = g_17C49._f5CED._fB[v_3/*1*/];
            g_CADD._f3E[v_3/*3*/][1/*1*/] = g_17C49._f5CED._f16[v_3/*1*/];
            g_CADD._f5D[v_3/*3*/][1/*1*/] = g_17C49._f5CED._f21[v_3/*1*/];
            g_CADD._f7C[v_3/*3*/][1/*1*/] = g_17C49._f5CED._f2C[v_3/*1*/];
            g_CADD._f9B[v_3/*3*/][1/*1*/] = g_17C49._f5CED._f37[v_3/*1*/];
            g_CADD._fBA[v_3/*3*/][1/*1*/] = g_17C49._f5CED._f42[v_3/*1*/];
            g_CADD._fD9[v_3/*3*/][1/*1*/] = g_17C49._f5CED._f4D[v_3/*1*/];
            g_CADD._fF8[v_3/*3*/][1/*1*/] = g_17C49._f5CED._f58[v_3/*1*/];
        }
    }
}

void sub_b3a(auto a_0) {
    v_3 = g_CAD5[a_0/*1*/];
    switch (a_0) {
    case 0:
        STATS::STAT_SET_INT(0x324c31d, v_3, 1);
        break;
    case 1:
        STATS::STAT_SET_INT(0x44bd6982, v_3, 1);
        break;
    case 2:
        STATS::STAT_SET_INT(0x8d75047d, v_3, 1);
        break;
    }
}

void sub_b94(auto a_0) {
    v_3 = 0;
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (GAMEPLAY::IS_BIT_SET(g_17C49._f5CED._f1D7, a_0)) {
            v_3 = 1;
            GAMEPLAY::CLEAR_BIT(&g_17C49._f5CED._f1D7, a_0);
        }
    } else if (GAMEPLAY::IS_BIT_SET(g_17C49._f5CED._f1D7, a_0) || GAMEPLAY::IS_BIT_SET(g_200000[sub_cc6()/*8053*/]._f167C._fA, a_0)) {
        v_3 = 1;
        GAMEPLAY::CLEAR_BIT(&g_17C49._f5CED._f1D7, a_0);
        GAMEPLAY::CLEAR_BIT(&g_200000[sub_cc6()/*8053*/]._f167C._fA, a_0);
    }
    if (v_3) {
        v_4/*"64"*/ = "CHAR_LIFEINVADER";
        UI::_SET_NOTIFICATION_TEXT_ENTRY("COUP_RED");
        UI::_ADD_TEXT_COMPONENT_ITEM_STRING(sub_c54(a_0));
        UI::_1CCD9A37359072CF(&v_4, &v_4, 1, 0, "", 0);
    }
}

auto sub_c54(auto a_0) {
    switch (a_0) {
    case 0:
        return "COUP_HAIRC";
    case 1:
        return "COUP_TATTOO";
    case 2:
        return "COUP_WARSTOCK";
    case 3:
        return "COUP_MOSPORT";
    case 4:
        return "COUP_ELITAS";
    case 5:
        return "COUP_MEDSPENS";
    case 6:
        return "COUP_SPRUNK";
    case 7:
        return "COUP_RESPRAY";
    }
    return "";
}

auto sub_cc6() {
    v_2 = 0;
    return v_2;
}

void sub_cd3(auto a_0) {
    sub_10ea(93, a_0);
    sub_10ea(29, a_0);
    sub_10ea(30, a_0);
}

auto sub_cf3(auto a_0) {
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        return GAMEPLAY::IS_BIT_SET(g_17C49._f5CED._f1D7, a_0);
    } else { 
        return GAMEPLAY::IS_BIT_SET(g_200000[sub_cc6()/*8053*/]._f167C._fA, a_0);
    }
}

auto sub_d2f(auto a_0) {
    v_4 = 0;
    if (PLAYER::HAS_ACHIEVEMENT_BEEN_PASSED(27)) {
        return 0;
    }
    if (STATS::STAT_GET_INT(0xd8dde3ac, &v_3, -1)) {
        v_4 += v_3;
    }
    if (STATS::STAT_GET_INT(0x82f04461, &v_3, -1)) {
        v_4 += v_3;
    }
    if (STATS::STAT_GET_INT(0x5e1032a2, &v_3, -1)) {
        v_4 += v_3;
    }
    if (a_0) {}
    v_5 = 0;
    STATS::STAT_GET_INT(0xe6d69c91, &v_5, -1);
    if ((v_4 > 0) && ((v_5 / 0x1e8480) != (v_4 / 0x1e8480))) {
        STATS::STAT_SET_INT(0xe6d69c91, v_4, 1);
        sub_1076(27, v_4);
    }
    if (v_4 < 0xbebc200) {
        return 0;
    }
    sub_de6(27, 1);
    return 1;
}

auto sub_de6(auto a_0, auto a_1) {
    if (a_0 >= 61) {
        return 0;
    }
    return sub_e01(a_0, a_1);
}

auto sub_e01(auto a_0, auto a_1) {
    if (PLAYER::HAS_ACHIEVEMENT_BEEN_PASSED(a_0) && (a_1 == 1)) {
        return 0;
    }
    if ((g_6072 != 0) && (!g_10A95)) {
        return 0;
    }
    if (sub_1068(&g_26D4DB)) {
        if (sub_1029(&g_26D4DB, a_0)) {
            return 0;
        }
        if (sub_e85(&g_26D4DB, a_0)) {
            return 1;
        }
    } else { 
        if (!PLAYER::GIVE_ACHIEVEMENT_TO_PLAYER(a_0)) {
            return 0;
        }
        if (PLAYER::HAS_ACHIEVEMENT_BEEN_PASSED(a_0)) {
            return 1;
        }
        return 0;
    }
    return 0;
}

auto sub_e85(auto a_0, auto a_1) {
    asm .vardef<F> 5, "[{\"type\":\"field\",\"value\":[{\"offset\":0,\"value\":61}]}]"
    if (PLAYER::HAS_ACHIEVEMENT_BEEN_PASSED(a_1)) {
        return 0;
    }
    if (sub_1029(a_0, a_1)) {
        return 0;
    }
    sub_f6c(&v_5);
    v_4 = 0;
    for (v_4 = 0; v_4 < (a_0 - 1); v_4 += 1) {
        v_5[v_4 + 1/*1*/] = a_0[v_4/*1*/];
    }
    sub_f0b(&v_5, a_1);
    v_4 = 0;
    for (v_4 = 0; v_4 < a_0; v_4 += 1) {
        a_0[v_4/*1*/] = v_5[v_4/*1*/];
    }
    return 1;
}

auto sub_f0b(auto a_0, auto a_1) {
    if (PLAYER::HAS_ACHIEVEMENT_BEEN_PASSED(a_1)) {
        return 0;
    }
    if (sub_1029(a_0, a_1)) {
        return 0;
    }
    for (v_4 = 0; v_4 < a_0; v_4 += 1) {
        if (sub_f5b(a_0, v_4)) {
            a_0[v_4/*1*/] = a_1;
            return 1;
        }
    }
    return 0;
}

auto sub_f5b(auto a_0, auto a_1) {
    return a_0[a_1/*1*/] == 61;
}

void sub_f6c(auto a_0) {
    for (v_3 = 0; v_3 < a_0; v_3 += 1) {
        sub_1019(a_0, v_3);
    }
    sub_fa3(&a_0._f3E, 8.0 - 0.5);
}

void sub_fa3(auto a_0, auto a_1) {
    a_0._f1 = sub_fd1(GAMEPLAY::IS_BIT_SET(a_0, 4)) - a_1;
    GAMEPLAY::SET_BIT(a_0, 1);
    GAMEPLAY::CLEAR_BIT(a_0, 2);
    a_0._f2 = 0.0;
}

auto sub_fd1(auto a_0) {
    if (a_0) {
        return SYSTEM::TO_FLOAT(GAMEPLAY::GET_GAME_TIMER()) / 1000.0;
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        v_3 = NETWORK::GET_NETWORK_TIME();
        return SYSTEM::TO_FLOAT(v_3) / 1000.0;
    }
    return SYSTEM::TO_FLOAT(GAMEPLAY::GET_GAME_TIMER()) / 1000.0;
}

void sub_1019(auto a_0, auto a_1) {
    a_0[a_1/*1*/] = 61;
}

auto sub_1029(auto a_0, auto a_1) {
    return sub_103b(a_0, a_1) != -1;
}

auto sub_103b(auto a_0, auto a_1) {
    for (v_4 = 0; v_4 < a_0; v_4 += 1) {
        if (a_0[v_4/*1*/] == a_1) {
            return v_4;
        }
    }
    return -1;
}

auto sub_1068(auto a_0) {
    return a_0._f44 == 1;
}

auto sub_1076(auto a_0, auto a_1) {
    if (a_0 < 0) {
        return 0;
    }
    if (a_0 > 61) {
        return 0;
    }
    if ((a_1 <= 0) || (a_1 > 100)) {
        return 0;
    }
    v_4 = PLAYER::_1C186837D0619335(a_0);
    if (a_1 > v_4) {
        return PLAYER::_C2AFFFDABBDC2C5C(a_0, a_1);
    } else { }
    return 0;
}

void sub_10c7(auto a_0, auto a_1) {
    STATS::STAT_GET_INT(a_0, &v_4, -1);
    v_4 += a_1;
    STATS::STAT_SET_INT(a_0, v_4, 1);
}

void sub_10ea(auto a_0, auto a_1) {
    if (a_1 < 1) {
        return ;
    }
    if (g_C53D[a_0/*7*/]._f2) {
        return ;
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        return ;
    }
    if (g_C53D[a_0/*7*/]) {
        STATS::STAT_GET_INT(g_C53D[a_0/*7*/]._f1, &v_4, -1);
        v_4 += a_1;
        STATS::STAT_SET_INT(g_C53D[a_0/*7*/]._f1, v_4, 1);
    }
}

void sub_1147() {
    if (NETWORK::NETWORK_IS_SIGNED_IN()) {
        STATS::STAT_GET_INT(0x324c31d, &v_2, -1);
        if (!(g_CAD5[0/*1*/] == v_2)) {
            g_CAD5[0/*1*/] = v_2;
        }
        STATS::STAT_GET_INT(0x44bd6982, &v_2, -1);
        if (!(g_CAD5[1/*1*/] == v_2)) {
            g_CAD5[1/*1*/] = v_2;
        }
        STATS::STAT_GET_INT(0x8d75047d, &v_2, -1);
        if (!(g_CAD5[2/*1*/] == v_2)) {
            g_CAD5[2/*1*/] = v_2;
        }
    }
}

void sub_11bc(auto a_0, auto a_1, auto a_2) {
    a_2 = a_2;
    UI::_SET_TEXT_ENTRY_2(a_0);
    UI::_9D77056A530643F6(a_1, 0);
}

void sub_11d5(auto a_0, auto a_1, auto a_2, auto a_3) {
    a_3 = a_3;
    UI::_SET_TEXT_ENTRY_2(a_0);
    UI::_ADD_TEXT_COMPONENT_ITEM_STRING(a_1);
    UI::_9D77056A530643F6(a_2, 0);
}

auto sub_11f4(auto a_0, auto a_1) {
    if (sub_15f5(a_0) > a_1) {
        return 1;
    } else { 
        return 0;
    }
}

void sub_120f(auto a_0, auto a_1) {
    GRAPHICS::DRAW_RECT(0.852, 0.81, 0.141, 0.025, 0, 0, 0, 175, 0);
    sub_1270(255, 255, 255, 255);
    sub_1252(0.81, 0.8, a_0, a_1, 0);
}

void sub_1252(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    UI::_SET_TEXT_ENTRY(a_2);
    UI::ADD_TEXT_COMPONENT_INTEGER(a_3);
    UI::_DRAW_TEXT(a_0, a_1, a_4);
}

void sub_1270(auto a_0, auto a_1, auto a_2, auto a_3) {
    UI::SET_TEXT_SCALE(0.3, 0.3);
    UI::SET_TEXT_DROPSHADOW(0, 0, 0, 0, 0);
    UI::SET_TEXT_EDGE(1, 0, 0, 0, 205);
    UI::SET_TEXT_PROPORTIONAL(1);
    UI::SET_TEXT_FONT(0);
    UI::SET_TEXT_COLOUR(a_0, a_1, a_2, a_3);
}

auto sub_12af(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (sub_1585()) {
        return 0;
    }
    if (sub_12da(a_0, a_1, a_2, a_3) == 1) {
        return 1;
    } else { 
        return 0;
    }
}

auto sub_12da(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${appsidetask}) > 0) {
        return 0;
    }
    if (sub_13c0() == 0) {
        sub_13b8();
        return 0;
    } else { 
        sub_133e(g_41AA);
        g_4254[g_41AA/*9*/]._f1 = a_1;
        g_4254[g_41AA/*9*/] = a_0;
        if (a_3 == 0) {
        } else { 
            g_4254[g_41AA/*9*/]._f8 = a_3;
        }
        if (a_2) {}
        return 1;
    }
}

void sub_133e(auto a_0) {
    v_3 = TIME::GET_CLOCK_SECONDS();
    v_4 = TIME::GET_CLOCK_MINUTES();
    v_5 = TIME::GET_CLOCK_HOURS();
    v_6 = TIME::GET_CLOCK_DAY_OF_MONTH();
    v_7 = TIME::GET_CLOCK_MONTH() + 1;
    v_8 = TIME::GET_CLOCK_YEAR();
    g_4254[a_0/*9*/]._f2 = v_3;
    g_4254[a_0/*9*/]._f2._f1 = v_4;
    g_4254[a_0/*9*/]._f2._f2 = v_5;
    g_4254[a_0/*9*/]._f2._f3 = v_6;
    g_4254[a_0/*9*/]._f2._f4 = v_7;
    g_4254[a_0/*9*/]._f2._f5 = v_8;
}

void sub_13b8() {
}

auto sub_13c0() {
    for (v_2 = 0; v_2 < 2; v_2 += 1) {
        if (g_4254[v_2/*9*/]._f8 == 0) {
            g_41AA = v_2;
            return 1;
        }
    }
    v_2 = 0;
    g_41AA = 3;
    g_4254[g_41AA/*9*/]._f2 = -1;
    g_4254[g_41AA/*9*/]._f2._f1 = 0;
    g_4254[g_41AA/*9*/]._f2._f2 = 0;
    g_4254[g_41AA/*9*/]._f2._f3 = 0;
    g_4254[g_41AA/*9*/]._f2._f5 = 99999;
    for (; v_2 < 2; v_2 += 1) {
        if ((g_4254[v_2/*9*/]._f8 == 0) || (g_4254[v_2/*9*/]._f8 == 1)) {
            if (!sub_149a(g_4254[v_2/*9*/]._f2, g_4254[g_41AA/*9*/]._f2)) {
                g_41AA = v_2;
            }
        }
    }
    if (g_41AA == 3) {
        return 0;
    } else { 
        return 1;
    }
}

auto sub_149a(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11) {
    if (a_0._f5 < a_6._f5) {
        return 0;
    }
    if (a_0._f5 > a_6._f5) {
        return 1;
    }
    if (a_0._f5 == a_6._f5) {
        if (a_0._f4 < a_6._f4) {
            return 0;
        }
        if (a_0._f4 > a_6._f4) {
            return 1;
        }
        if (a_0._f4 == a_6._f4) {
            v_E = a_0;
            v_E._f1 = a_0._f1 * 60;
            v_E._f2 = a_0._f2 * 3600;
            v_E._f3 = a_0._f3 * 86400;
            v_1A = ((v_E + v_E._f1) + v_E._f2) + v_E._f3;
            v_14 = a_6;
            v_14._f1 = a_6._f1 * 60;
            v_14._f2 = a_6._f2 * 3600;
            v_14._f3 = a_6._f3 * 86400;
            v_1B = ((v_14 + v_14._f1) + v_14._f2) + v_14._f3;
            if ((v_1A > v_1B) || (v_1A == v_1B)) {
                return 1;
            } else { 
                return 0;
            }
        }
    }
    return 0;
}

auto sub_1585() {
    if ((g_3839._f1 == 1) || (g_3839._f1 == 0)) {
        return 1;
    } else { 
        return 0;
    }
}

auto sub_15ac(auto a_0, auto a_1, auto a_2) {
    if (g_17C49._f744E[a_0/*29*/]._f11 == 3) {
        return 0;
    }
    if (g_17C49._f744E[a_0/*29*/]._f11 == 4) {
        return 0;
    }
    return sub_2b9(g_17C49._f744E[a_0/*29*/]._f11, 0, a_1, a_2, 0);
}

auto sub_15f5(auto a_0) {
    switch (a_0) {
    case 0:
        STATS::STAT_GET_INT(0x324c31d, &v_3, -1);
        return v_3;
    case 1:
        STATS::STAT_GET_INT(0x44bd6982, &v_3, -1);
        return v_3;
    case 2:
        STATS::STAT_GET_INT(0x8d75047d, &v_3, -1);
        return v_3;
    }
    return 0;
}

void sub_164d() {
    SCRIPT::TERMINATE_THIS_THREAD();
}