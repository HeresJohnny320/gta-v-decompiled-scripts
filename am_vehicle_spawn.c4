// listener's C4 decompiler

void main() {
    l_2 = 1;
    l_3 = 134;
    l_4 = 134;
    l_5 = 1;
    l_6 = 1;
    l_7 = 1;
    l_8 = 134;
    l_9 = 1;
    l_A = 12;
    l_B = 12;
    l_E = 0.001;
    l_11 = "NULL";
    l_16 = 80.0;
    l_17 = 140.0;
    l_18 = 180.0;
    l_1B = 0.0;
    l_1F = -0.0375;
    l_20 = 0.17;
    l_23 = 3;
    l_27 = 1;
    l_28 = 65;
    l_29 = 49;
    l_2A = 64;
    l_56 = (0.05 + 0.275) - 0.009999999999999998;
    l_5D/*{3}*/ = {0.0, 0.0, 0.0 };
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (!sub_fc3c(l_7D1)) {
            sub_fc20();
        }
        l_67C = 0;
    }
    while (1) {
        if (((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) || sub_f9ce()) || sub_e395()) {
            if (!sub_e389()) {
                sub_fc20();
            }
        }
        sub_e37c();
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            l_580 = NETWORK::GET_NETWORK_TIME();
        }
        sub_e374();
        if (!sub_e322(PLAYER::PLAYER_ID())) {
            sub_e238(&l_57F);
        }
        sub_dbfd();
        switch (sub_dbef(PLAYER::_EE68096F9F37341E())) {
        case 0:
            if (sub_dbe5() == 1) {
                l_E3[PLAYER::_EE68096F9F37341E()/*30*/] = 1;
            } else if (sub_dbe5() == 4) {
                l_E3[PLAYER::_EE68096F9F37341E()/*30*/] = 3;
            }
            break;
        case 1:
            if (sub_dbe5() == 1) {
                switch (l_61) {
                case 0:
                    if (sub_dac5(&l_67C, 0, &l_60)) {
                        sub_dab8(&l_61, 2);
                        l_E3[PLAYER::PLAYER_ID()/*30*/]._f1B = -1;
                    }
                    break;
                case 2:
                    if (sub_dac5(&l_67C, 0, &l_60)) {
                        l_67C._f5 = sub_da01(l_67C._f9);
                        if (l_67C._f5 >= 0) {
                            sub_dab8(&l_61, 3);
                        }
                    } else { 
                        sub_dab8(&l_61, 5);
                    }
                    break;
                case 3:
                    if (!NETWORK::NETWORK_IS_SCRIPT_ACTIVE("luxe_veh_activity", l_67C._f5, 1, 0)) {
                        SCRIPT::REQUEST_SCRIPT("luxe_veh_activity");
                        if (GAMEPLAY::IS_BIT_SET(g_6083, l_67C._f5)) {
                            GAMEPLAY::CLEAR_BIT(&g_6083, l_67C._f5);
                        }
                        if (SCRIPT::HAS_SCRIPT_LOADED("luxe_veh_activity")) {
                            SYSTEM::START_NEW_SCRIPT_WITH_ARGS("luxe_veh_activity", &l_67C, 304, 1424);
                            SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED("luxe_veh_activity");
                            l_7D0 = 0;
                            g_6082 = l_67C._f5;
                            sub_dab8(&l_61, 4);
                        }
                    } else { 
                        l_7D0 = 1;
                        g_6082 = l_67C._f5;
                        sub_dab8(&l_61, 4);
                    }
                    break;
                case 4:
                    if (l_7D0 && (!NETWORK::NETWORK_IS_SCRIPT_ACTIVE("luxe_veh_activity", l_67C._f5, 1, 0))) {
                        sub_dab8(&l_61, 3);
                    } else if (GAMEPLAY::IS_BIT_SET(g_6083, l_67C._f5)) {
                        sub_dab8(&l_61, 5);
                    } else { }
                    break;
                case 5:
                    if (!sub_dac5(&l_67C, l_67C._f9, &l_60)) {
                        sub_d9c6();
                        sub_dab8(&l_61, 0);
                    } else if (l_67C._f5 >= 0) {
                        if (!NETWORK::_1AD5B71586B94820(PLAYER::PLAYER_ID(), "luxe_veh_activity", l_67C._f5)) {
                            if (l_67C._f7 > 15) {
                                sub_d9c6();
                                sub_dab8(&l_61, 0);
                            }
                            l_67C._f7 += 1;
                        }
                    } else { 
                        sub_d9c6();
                        sub_dab8(&l_61, 0);
                    }
                    break;
                }
                sub_e45();
            } else if (sub_dbe5() == 0) {
                sub_c1c();
                l_E3[PLAYER::_EE68096F9F37341E()/*30*/] = 0;
            } else if (sub_dbe5() == 4) {
                l_E3[PLAYER::_EE68096F9F37341E()/*30*/] = 3;
            }
            break;
        case 3:
            sub_bfd(&l_62._f5B);
            if (sub_bd4(&l_62._f5B)) {
                l_E3[PLAYER::_EE68096F9F37341E()/*30*/] = 4;
            }
            break;
        case 2:
            l_E3[PLAYER::_EE68096F9F37341E()/*30*/] = 4;
        case 4:
            sub_fc20();
            break;
        }
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT()) {
                sub_bcc();
                switch (sub_dbe5()) {
                case 0:
                    sub_b86();
                    sub_b4d();
                    l_62 = 1;
                    l_62._f5E = -1;
                    for (v_2 = 0; v_2 <= 31; v_2 += 1) {
                        l_62._f60[v_2/*1*/] = -1;
                    }
                    break;
                case 1:
                    sub_6f2();
                    sub_57f();
                    sub_3f0();
                    break;
                case 4:
                    break;
                }
                if (sub_dbe5() < 4) {
                    if (sub_3e7()) {
                        l_62 = 4;
                    }
                }
            }
        }
    }
}

auto sub_3e7() {
    return 0;
}

void sub_3f0() {
    if (!sub_573(&l_7AD)) {
        sub_52e(&l_7AD, 0, 0);
    }
    if (sub_4d0(&l_7AD, 3000, 0)) {
        for (v_2 = 0; v_2 <= 31; v_2 += 1) {
            if (l_62._f60[v_2/*1*/] >= 0) {
                if (!NETWORK::NETWORK_IS_SCRIPT_ACTIVE("luxe_veh_activity", v_2, 0, 0)) {
                    for (v_3 = 0; v_3 <= 2; v_3 += 1) {
                        if (!v_4) {
                            if (!GAMEPLAY::IS_BIT_SET(l_7AF[v_2/*1*/], v_3)) {
                                GAMEPLAY::SET_BIT(&l_7AF[v_2/*1*/], v_3);
                                v_4 = 1;
                            }
                        }
                    }
                    if (!v_4) {
                        l_62._f60[v_2/*1*/] = -1;
                        for (v_3 = 0; v_3 <= 2; v_3 += 1) {
                            GAMEPLAY::CLEAR_BIT(&l_7AF[v_2/*1*/], v_3);
                        }
                    }
                    v_4 = 0;
                } else { 
                    l_7AF[v_2/*1*/] = 0;
                }
            }
        }
        sub_4c3(&l_7AD);
    }
}

void sub_4c3(auto a_0) {
    a_0._f1 = 0;
}

auto sub_4d0(auto a_0, auto a_1, auto a_2) {
    if (a_1 == -1) {
        return 1;
    }
    sub_52e(a_0, a_2, 0);
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (!a_2)) {
        if (GAMEPLAY::ABSI(NETWORK::GET_TIME_DIFFERENCE(NETWORK::GET_NETWORK_TIME(), a_0)) >= a_1) {
            return 1;
        }
    } else if (GAMEPLAY::ABSI(NETWORK::GET_TIME_DIFFERENCE(GAMEPLAY::GET_GAME_TIMER(), a_0)) >= a_1) {
        return 1;
    }
    return 0;
}

void sub_52e(auto a_0, auto a_1, auto a_2) {
    if (a_0._f1 == 0) {
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (!a_1)) {
            if (!a_2) {
                a_0 = NETWORK::GET_NETWORK_TIME();
            } else { 
                a_0 = NETWORK::_89023FBBF9200E9F();
            }
        } else { 
            a_0 = GAMEPLAY::GET_GAME_TIMER();
        }
        a_0._f1 = 1;
    }
}

auto sub_573(auto a_0) {
    return a_0._f1;
}

void sub_57f() {
    if (l_62._f5E == -1) {
        for (v_2 = 0; v_2 < 32; v_2 += 1) {
            if (l_E3[v_2/*30*/]._f1C == 1) {
                if (l_E3[v_2/*30*/]._f1B >= 0) {
                    l_62._f5E = PLAYER::INT_TO_PLAYERINDEX(v_2);
                    for (v_3 = 0; v_3 <= 31; v_3 += 1) {
                        if (l_62._f60[v_3/*1*/] == l_E3[v_2/*30*/]._f1B) {
                            l_62._f5D = v_3;
                            v_3 = 31;
                            v_4 = 1;
                        }
                    }
                    if (!v_4) {
                        for (v_3 = 0; v_3 <= 31; v_3 += 1) {
                            if (l_62._f60[v_3/*1*/] < 0) {
                                l_62._f60[v_3/*1*/] = l_E3[v_2/*30*/]._f1B;
                                l_62._f5D = v_3;
                                v_3 = 31;
                            }
                        }
                    }
                    v_2 = 32;
                    v_4 = 0;
                }
            } else { }
        }
    } else if ((l_E3[l_62._f5E/*30*/]._f1D == 1) && (l_E3[l_62._f5E/*30*/]._f1C == 0)) {
        l_62._f5E = -1;
    } else if ((l_E3[l_62._f5E/*30*/]._f1D == 0) && (l_E3[l_62._f5E/*30*/]._f1C == 0)) {
        l_62._f5E = -1;
    } else if (l_62._f5E >= 0) {
        if (!sub_6ae(l_62._f5E, 0, 1)) {
            l_62._f5E = -1;
        }
    }
}

auto sub_6ae(auto a_0, auto a_1, auto a_2) {
    v_5 = a_0;
    if (NETWORK::NETWORK_IS_PLAYER_ACTIVE(a_0)) {
        if (a_1) {
            if (!PLAYER::IS_PLAYER_PLAYING(a_0)) {
                return 0;
            }
        }
        if (a_2) {
            if (!g_24F57C._f3[v_5/*1*/]) {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_6f2() {
    sub_892();
    sub_702();
}

void sub_702() {
    if (((g_252B45 != -1) || (g_252B47 != -1)) || (g_252B46 != -1)) {
        sub_806();
    }
    sub_74a(l_63E);
    l_63E += 1;
    if (l_63E >= 55) {
        l_63E = 0;
    }
}

void sub_74a(auto a_0) {
    if (l_62._f2[a_0/*1*/] > -1) {
        if (!sub_6ae(PLAYER::INT_TO_PLAYERINDEX(l_62._f2[a_0/*1*/]), 0, 1)) {
            sub_7c7(a_0);
        } else { 
            v_3 = 0;
            for (v_4 = 0; v_4 < 5; v_4 += 1) {
                if (sub_7b4(l_62._f2[a_0/*1*/], v_4) == a_0) {
                    v_3 = 1;
                }
            }
            if (!v_3) {
                sub_7c7(a_0);
            }
        }
    }
}

auto sub_7b4(auto a_0, auto a_1) {
    return l_4BE[a_0/*6*/][a_1/*1*/];
}

void sub_7c7(auto a_0) {
    if (l_62._f2[a_0/*1*/] != -1) {
        l_62._f2[a_0/*1*/] = -1;
        sub_7eb(a_0);
    }
}

auto sub_7eb(auto a_0) {
    if (GAMEPLAY::GET_GAME_TIMER() < l_63F[a_0/*1*/]) {
        return 1;
    }
    return 0;
}

void sub_806() {
    if ((g_252B45 > -1) && (g_252B45 < 32)) {
        if ((g_252B47 > -1) && (g_252B47 < 55)) {
            if ((g_252B46 > -1) && (g_252B46 < 5)) {
                sub_86f(g_252B45, g_252B46);
                sub_7c7(g_252B47);
            }
        }
    }
    g_252B45 = -1;
    g_252B47 = -1;
    g_252B46 = -1;
}

void sub_86f(auto a_0, auto a_1) {
    if (l_4BE[a_0/*6*/][a_1/*1*/] != -1) {
        l_4BE[a_0/*6*/][a_1/*1*/] = -1;
    }
}

void sub_892() {
    if (((g_252B2D != -1) || (g_252B2F != -1)) || (g_252B2E != -1)) {
        sub_ae1();
    } else { 
        sub_986(l_63D);
    }
    sub_8e4(l_63D);
    l_63D += 1;
    if (l_63D >= 32) {
        l_63D = 0;
    }
}

void sub_8e4(auto a_0) {
    for (v_3 = 0; v_3 < 5; v_3 += 1) {
        if (sub_7b4(a_0, v_3) != -1) {
            if (!sub_96d(sub_7b4(a_0, v_3))) {
                if (!sub_7eb(sub_7b4(a_0, v_3))) {
                    sub_938(a_0, sub_7b4(a_0, v_3));
                }
            }
        }
    }
}

void sub_938(auto a_0, auto a_1) {
    if ((a_0 > -1) && sub_6ae(PLAYER::INT_TO_PLAYERINDEX(a_0), 0, 1)) {
        l_62._f2[a_1/*1*/] = a_0;
        l_62._f3A[a_0/*1*/] = l_580;
    }
}

auto sub_96d(auto a_0) {
    if (l_62._f2[a_0/*1*/] > -1) {
        return 1;
    }
    return 0;
}

void sub_986(auto a_0) {
    if (sub_6ae(PLAYER::INT_TO_PLAYERINDEX(a_0), 0, 1) && (!sub_a49(PLAYER::INT_TO_PLAYERINDEX(a_0), 0))) {
        for (v_3 = 0; v_3 < 5; v_3 += 1) {
            if (GAMEPLAY::IS_BIT_SET(l_E3[a_0/*30*/]._f5[v_3/*4*/]._f1, 0)) {
                sub_a24(a_0, v_3, l_E3[a_0/*30*/]._f5[v_3/*4*/]);
            } else { 
                sub_86f(a_0, v_3);
            }
        }
    } else { 
        sub_9fe(a_0);
    }
}

void sub_9fe(auto a_0) {
    for (v_3 = 0; v_3 < 5; v_3 += 1) {
        l_4BE[a_0/*6*/][v_3/*1*/] = -1;
    }
}

void sub_a24(auto a_0, auto a_1, auto a_2) {
    if (l_4BE[a_0/*6*/][a_1/*1*/] != a_2) {
        l_4BE[a_0/*6*/][a_1/*1*/] = a_2;
    }
}

auto sub_a49(auto a_0, auto a_1) {
    if (a_0 == PLAYER::PLAYER_ID()) {
        v_4 = sub_a94(-1, 0) == 8;
    } else { 
        v_4 = g_182604[a_0/*324*/]._fB4 == 8;
    }
    if (a_1 == 1) {
        if (NETWORK::NETWORK_IS_PLAYER_ACTIVE(a_0)) {
            v_4 = PLAYER::GET_PLAYER_TEAM(a_0) == 8;
        }
    }
    return v_4;
}

auto sub_a94(auto a_0, auto a_1) {
    v_5 = a_0;
    if (v_5 == -1) {
        v_5 = sub_ad5();
    }
    if (g_141425[v_5/*1*/] == 1) {
        if (a_1) {}
        v_4 = 8;
    } else { 
        v_4 = g_1407DB[v_5/*1*/];
        if (a_1) {}
    }
    return v_4;
}

auto sub_ad5() {
    return g_1407E1;
}

void sub_ae1() {
    if ((g_252B2D > -1) && (g_252B2D < 32)) {
        if ((g_252B2F > -1) && (g_252B2F < 55)) {
            if ((g_252B2E > -1) && (g_252B2D < 5)) {
                sub_a24(g_252B2D, g_252B2E, g_252B2F);
                l_63D = g_252B2D;
            }
        }
    }
    g_252B2D = -1;
    g_252B2E = -1;
    g_252B2F = -1;
}

void sub_b4d() {
    for (v_2 = 0; v_2 < 32; v_2 += 1) {
        for (v_3 = 0; v_3 < 5; v_3 += 1) {
            l_4BE[v_2/*6*/][v_3/*1*/] = -1;
        }
    }
}

void sub_b86() {
    for (v_2 = 0; v_2 < 55; v_2 += 1) {
        sub_baf(v_2, 0);
        sub_7eb(v_2);
    }
}

void sub_baf(auto a_0, auto a_1) {
    l_62._f2[a_0/*1*/] = -1;
    if (a_1) {
        sub_7eb(a_0);
    }
}

void sub_bcc() {
}

auto sub_bd4(auto a_0) {
    if (a_0._f1) {
        if (GAMEPLAY::ABSI(NETWORK::GET_TIME_DIFFERENCE(NETWORK::GET_NETWORK_TIME(), a_0)) >= 1000) {
            return 1;
        }
    }
    return 0;
}

void sub_bfd(auto a_0) {
    if (!a_0._f1) {
        if (NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT()) {
            sub_52e(a_0, 0, 0);
        }
    }
}

void sub_c1c() {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT()) {
            l_62._f1 = 0;
        }
        l_E3[PLAYER::PLAYER_ID()/*30*/]._f1 = 0;
        sub_e1d();
        sub_c66(1, 0);
    }
    GAMEPLAY::CLEAR_BIT(&g_24F57C._fCCB, 8);
    GAMEPLAY::CLEAR_BIT(&g_24F57C._fCCB, 10);
}

void sub_c66(auto a_0, auto a_1) {
    if (a_1) {
        if (GAMEPLAY::IS_BIT_SET(l_4AC, 11)) {
            sub_dd8();
        }
    }
    if (a_0) {
        if (GAMEPLAY::IS_BIT_SET(l_4AC, 0)) {
            if (GAMEPLAY::IS_BIT_SET(l_4AC, 6)) {
                if (!sub_dac(138, -1)) {
                    sub_d39(138, 1, -1, 1);
                }
            }
        }
    }
    g_252BB6 = 0;
    if (UI::DOES_BLIP_EXIST(l_4AC._f4)) {
        UI::REMOVE_BLIP(&l_4AC._f4);
    }
    l_4AC = 0;
    l_4AC._f1 = 0;
    l_4AC._f2 = -1;
    l_4AC._f3 = -1;
    sub_d15(&g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31);
    if (l_4AC._fC != 0) {
        STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(l_4AC._fC);
    }
    l_4AC._fC = 0;
    l_4AC._fD/*{3}*/ = l_5D;
}

void sub_d15(auto a_0) {
    if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(a_0)) {
        v_3 = NETWORK::NET_TO_ENT(a_0);
        ENTITY::SET_ENTITY_AS_NO_LONGER_NEEDED(&v_3);
    } else { }
}

void sub_d39(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (sub_d9f()) {
        v_6 = g_25BDB1[a_0/*6*/][sub_d6b(a_2)/*1*/];
        if (v_6 != 0) {
            STATS::STAT_SET_BOOL(v_6, a_1, a_3);
        }
    }
}

auto sub_d6b(auto a_0) {
    v_3 = a_0;
    if (v_3 == -1) {
        v_4 = sub_ad5();
        if (v_4 > -1) {
            g_25732E = 0;
            v_3 = v_4;
        } else { 
            v_3 = 0;
            g_25732E = 1;
        }
    }
    return v_3;
}

auto sub_d9f() {
    return 1;
    return 0;
}

auto sub_dac(auto a_0, auto a_1) {
    v_4 = g_25BDB1[a_0/*6*/][sub_d6b(a_1)/*1*/];
    if (STATS::STAT_GET_BOOL(v_4, &v_5, -1)) {
        return v_5;
    }
    return 0;
}

void sub_dd8() {
    if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID())) {
        if (!GAMEPLAY::IS_BIT_SET(l_4AC, 12)) {
            GAMEPLAY::SET_BIT(&l_4A6, 5);
            PLAYER::SET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID(), 2, 0);
            PLAYER::SET_PLAYER_WANTED_LEVEL_NOW(PLAYER::PLAYER_ID(), 0);
            GAMEPLAY::SET_BIT(&l_4AC, 12);
        }
    }
}

void sub_e1d() {
    if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(l_4BC)) {
        v_2 = NETWORK::NET_TO_ENT(l_4BC);
        ENTITY::SET_ENTITY_AS_NO_LONGER_NEEDED(&v_2);
        ENTITY::_3910051CCECDB00C(v_2, 1);
    }
}

void sub_e45() {
    if (!sub_d9af()) {
        sub_d94a();
        sub_d454();
        sub_aab8();
        sub_9c98();
        sub_6ad5();
        sub_5761();
        sub_45fb();
        sub_435e();
        sub_11e1();
        sub_fd2();
    }
    sub_e81();
}

void sub_e81() {
    if (ENTITY::DOES_ENTITY_EXIST(g_24F57C._f237[l_7AC/*1*/])) {
        v_2 = ENTITY::GET_ENTITY_MODEL(g_24F57C._f237[l_7AC/*1*/]);
        if (sub_fbb(v_2)) {
            if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(g_24F57C._f237[l_7AC/*1*/])) {
                if (VEHICLE::IS_VEHICLE_DOOR_FULLY_OPEN(g_24F57C._f237[l_7AC/*1*/], 2) || VEHICLE::IS_VEHICLE_DOOR_FULLY_OPEN(g_24F57C._f237[l_7AC/*1*/], 3)) {
                    if (!sub_f51(g_24F57C._f237[l_7AC/*1*/], &v_3, &v_4)) {
                        if (!v_3) {
                            VEHICLE::SET_VEHICLE_DOOR_SHUT(g_24F57C._f237[l_7AC/*1*/], 2, 0);
                        }
                        if (!v_4) {
                            VEHICLE::SET_VEHICLE_DOOR_SHUT(g_24F57C._f237[l_7AC/*1*/], 3, 0);
                        }
                    }
                }
            }
        }
    }
    l_7AC += 1;
    if (l_7AC >= 32) {
        l_7AC = 0;
    }
}

auto sub_f51(auto a_0, auto a_1, auto a_2) {
    a_1 = 0;
    a_2 = 0;
    v_5 = VEHICLE::_218297BF0CFD853B(a_0, 2);
    v_6 = VEHICLE::_218297BF0CFD853B(a_0, 3);
    if (ENTITY::DOES_ENTITY_EXIST(v_5) && (!ENTITY::IS_ENTITY_DEAD(v_5))) {
        a_1 = 1;
    }
    if (ENTITY::DOES_ENTITY_EXIST(v_6) && (!ENTITY::IS_ENTITY_DEAD(v_6))) {
        a_2 = 1;
    }
    if (a_1 && a_2) {
        return 1;
    } else { 
        return 0;
    }
}

auto sub_fbb(auto a_0) {
    if (a_0 == 0x4019cb4c) {
        return 1;
    }
    return 0;
}

void sub_fd2() {
    for (v_2 = 0; v_2 < 5; v_2 += 1) {
        if (l_62A[v_2/*1*/]) {
            if (sub_4d0(&l_630[v_2/*2*/], 5000, 0)) {
                sub_1016(v_2);
                l_62A[v_2/*1*/] = 0;
            }
        }
    }
}

void sub_1016(auto a_0) {
    v_3 = PLAYER::PLAYER_ID();
    sub_114b(sub_117c(1, 1), v_3, a_0, l_E3[v_3/*30*/]._f5[a_0/*4*/]);
    if (GAMEPLAY::IS_BIT_SET(l_E3[v_3/*30*/]._f5[a_0/*4*/]._f1, 2)) {
        NETWORK::RESERVE_NETWORK_MISSION_VEHICLES(NETWORK::GET_NUM_RESERVED_MISSION_VEHICLES(0) - 1);
    }
    sub_10eb(l_E3[v_3/*30*/]._f5[a_0/*4*/]);
    l_E3[v_3/*30*/]._f5[a_0/*4*/] = -1;
    l_E3[v_3/*30*/]._f5[a_0/*4*/]._f1 = 0;
    l_E3[v_3/*30*/]._f5[a_0/*4*/]._f2 = 0;
    if (l_E3[v_3/*30*/]._f5[a_0/*4*/]._f3 != 0) {
        STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(l_E3[v_3/*30*/]._f5[a_0/*4*/]._f3);
    }
    l_E3[v_3/*30*/]._f5[a_0/*4*/]._f3 = 0;
    if (l_E3[v_3/*30*/]._f1A > 0) {
        l_E3[v_3/*30*/]._f1A -= 1;
    }
}

void sub_10eb(auto a_0) {
    if (a_0 >= 0) {
        if (GAMEPLAY::IS_BIT_SET(l_627[sub_1133(a_0)/*1*/], sub_1126(a_0))) {
            GAMEPLAY::CLEAR_BIT(&l_627[sub_1133(a_0)/*1*/], sub_1126(a_0));
        }
    }
}

auto sub_1126(auto a_0) {
    return a_0 % 32;
}

auto sub_1133(auto a_0) {
    return SYSTEM::FLOOR(SYSTEM::TO_FLOAT(a_0) / 32.0);
}

void sub_114b(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6 = 299;
    v_6._f1 = PLAYER::PLAYER_ID();
    v_6._f2 = a_1;
    v_6._f3 = a_2;
    v_6._f4 = a_3;
    SCRIPT::TRIGGER_SCRIPT_EVENT(1, &v_6, 5, a_0);
}

auto sub_117c(auto a_0, auto a_1) {
    for (v_5 = 0; v_5 < 32; v_5 += 1) {
        v_6 = PLAYER::INT_TO_PLAYERINDEX(v_5);
        if (sub_6ae(v_6, 0, 0)) {
            if ((v_6 != PLAYER::PLAYER_ID()) || a_0) {
                if (a_1) {
                    GAMEPLAY::SET_BIT(&v_4, v_5);
                } else if (!sub_a49(v_6, 0)) {
                    GAMEPLAY::SET_BIT(&v_4, v_5);
                }
            }
        }
    }
    return v_4;
}

void sub_11e1() {
    if (!GAMEPLAY::IS_BIT_SET(l_4A6, 0)) {
        if (sub_dac(138, -1)) {
            if (GAMEPLAY::IS_BIT_SET(l_4AC, 1)) {
                sub_d39(138, 0, -1, 1);
            } else if (sub_4d0(&l_4AC._f9, 10000, 0)) {
                GAMEPLAY::SET_BIT(&l_4A6, 0);
            }
        } else { 
            sub_4c3(&l_4AC._f9);
        }
    }
    if (l_4A6 != 0) {
        if (sub_4288(&v_2, &v_6, &v_7)) {
            if (sub_414f()) {
                if ((!sub_4114(8, -1)) && (!STREAMING::_D9D2CFFF49FAB35F())) {
                    if (sub_1296(v_6, &v_2, 0, 0)) {
                        if (v_7 == 0) {
                            sub_d39(138, 0, -1, 1);
                        }
                        GAMEPLAY::CLEAR_BIT(&l_4A6, v_7);
                    }
                }
            }
        } else { 
            l_4A6 = 0;
        }
    }
}

auto sub_1296(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6 = 0;
    v_7 = 0;
    v_8 = -99;
    return sub_12bf(a_0, a_1, v_6, v_7, v_8, v_6, v_6, a_2, a_3);
}

auto sub_12bf(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8) {
    asm .vardef<F> 11, "[{\"type\":\"field\",\"value\":[{\"offset\":0,\"value\":16}]}]"
    v_B0 = 2;
    if (a_7) {
        v_B0 = 5;
    }
    return sub_12f8(&v_B, a_0, sub_4109(), a_1, v_B0, 3, a_8, a_2, a_3, a_4, a_5, a_6, -1);
}

auto sub_12f8(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11, auto a_12) {
    if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_2)) {
        return 0;
    }
    if (UI::_43E4111189E54F0E(a_2) > 7) {
        return 0;
    }
    if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_3)) {
        return 0;
    }
    if (UI::_43E4111189E54F0E(a_3) > 15) {
        return 0;
    }
    v_F = GAMEPLAY::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME());
    v_10 = sub_40ef(a_2, a_3);
    v_11 = 0;
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_7)) {
        v_11 = GAMEPLAY::GET_HASH_KEY(a_7);
    }
    if (sub_40d1(v_F, v_10, v_11)) {
        return 1;
    }
    if (!sub_3fc8(a_6)) {
        return 0;
    }
    if (sub_3f4a(v_F, v_10, v_11)) {
        if (sub_3f3a()) {
            return 0;
        }
        sub_3f2b();
        return sub_14e3(a_0, a_1, a_C, a_2, a_3, a_4, a_5, a_6, a_7, a_8, a_9, a_A, a_B);
    }
    if (!sub_14d0(a_4)) {
        return 0;
    }
    sub_13dd(v_F, v_10, v_11, a_3, a_4, a_5, a_6);
    return 0;
}

void sub_13dd(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    g_14292B._f28._f1 = a_0;
    g_14292B._f28._f2 = a_1;
    g_14292B._f28._f3 = a_2;
    g_14292B._f28._f4/*"16"*/ = a_3;
    g_14292B._f28._f8 = a_4;
    g_14292B._f28._f9 = a_5;
    g_14292B._f28._fE = a_6;
    sub_144a(a_4);
    sub_3f2b();
    g_14292B._f28._fD = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), 7000);
}

void sub_144a(auto a_0) {
    if (sub_1488(a_0)) {
        sub_1477();
        return ;
    }
    sub_1466();
}

void sub_1466() {
    g_14292B._f28._fA = 0;
}

void sub_1477() {
    g_14292B._f28._fA = 1;
}

auto sub_1488(auto a_0) {
    switch (a_0) {
    case 4:
    case 5:
        return 1;
    case 0:
    case 1:
    case 2:
    case 3:
    case 7:
    case 8:
        return 0;
    }
    return 0;
}

auto sub_14d0(auto a_0) {
    return a_0 > g_14292B._f28._f8;
}

auto sub_14e3(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11, auto a_12) {
    sub_3f05();
    if (a_6 == 5) {
        a_6 = 0;
    }
    if (a_5 == 8) {
        return sub_3e7b(a_0, a_3, a_4);
    }
    if (a_5 == 4) {
        v_F/*"16"*/ = "CELL_226";
        return sub_3dc8(a_0, a_1, a_3, a_4, &v_F);
    }
    if ((a_5 == 1) || (a_5 == 7)) {
        if (a_6 == 2) {
            return sub_3e7b(a_0, a_3, a_4);
        }
        return sub_36b9(a_0, a_1, a_3, a_4, a_7);
    }
    if (a_5 == 5) {
        return sub_3667(a_1, a_2, a_4, a_7, a_8, a_9, a_A, a_B, a_C);
    }
    if (a_5 == 2) {
        return sub_2b42(a_1, a_2, a_4, a_7, a_8, a_9, a_A, a_B, a_C);
    }
    if (a_5 == 3) {
        return sub_2b1b(a_1, a_2, a_4, a_7, a_8, a_9, a_A, a_B, a_C);
    }
    if (a_5 == 6) {
        return sub_15dc(a_1, a_2, a_4, a_7, a_8, a_9, a_A, a_B, a_C);
    }
    return 0;
}

auto sub_15dc(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8) {
    sub_2b0a();
    v_B = 1;
    if (sub_1636(a_0, a_1, a_2, v_B, a_3, a_4, a_5, a_6, a_7, a_8)) {
        sub_1613(120000);
        return 1;
    }
    return 0;
}

void sub_1613(auto a_0) {
    g_14292B._f28._fB = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), a_0);
    g_14292B._f28._fC = 1;
}

auto sub_1636(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9) {
    v_C = sub_2b01();
    v_D = 0;
    if (a_0 == 145) {
        v_C = a_1;
        v_E = PLAYER::GET_PLAYER_NAME(v_C);
        v_D = sub_28cc(v_C);
        if (v_D == 0) {
            if (NETWORK::_CB2CF5148012C8D0(NETWORK::GET_NETWORK_TIME(), g_14292B._f28._fD)) {
                return 0;
            }
        }
    } else { 
        v_E = "";
    }
    v_F = 0;
    v_10 = sub_288f(a_5, a_6, &v_F);
    v_11 = sub_27bf(a_7, &v_F);
    v_12 = 0;
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_8)) {
        v_12 += 1;
        if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_9)) {
            v_12 += 1;
        }
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(v_10, " ")) {
        v_10 = "";
    }
    v_13 = 1;
    v_14 = 0;
    v_15 = 0;
    v_16 = 1;
    v_17 = 0;
    if (a_3) {
        v_15 = 1;
        v_16 = 2;
        v_17 = 1;
        if (GAMEPLAY::IS_BIT_SET(a_4, 1)) {
            v_14 = 1;
        }
    }
    if (GAMEPLAY::IS_BIT_SET(a_4, 2)) {
        v_16 = 2;
    }
    v_18 = 0;
    if ((!(v_F == 0)) || (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(v_E))) {
        v_18 = sub_273d(a_0, a_2, v_16, v_10, v_11, v_E, v_F, v_17, 1, v_15, 0, v_13, v_14, 0, v_12, a_8, a_9);
    } else { 
        v_18 = sub_17bf(a_0, a_2, v_16, v_17, 1, v_15, 0, v_13, v_14, 0);
    }
    if (!v_18) {
        return 0;
    }
    if (GAMEPLAY::IS_BIT_SET(a_4, 0)) {
        sub_17ae();
    }
    sub_2b0a();
    sub_179f();
    sub_1787();
    return 1;
}

void sub_1787() {
    g_14292B._f39 = 0;
    g_14292B._f39._f1 = 0;
}

void sub_179f() {
    g_14292B._f28 = 3;
}

void sub_17ae() {
    GAMEPLAY::SET_BIT(&g_8D7, 8);
}

auto sub_17bf(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9) {
    v_C = 0;
    v_D = "NULL";
    v_E = -99;
    v_F = "NULL";
    v_10 = 0;
    v_11 = "NULL";
    v_12 = "NULL";
    v_13 = 3;
    if (sub_182b(a_0, a_1, a_2, v_C, v_D, v_F, v_E, a_3, a_4, a_5, a_7, a_8, a_9, v_10, v_11, v_12, v_13) == 1) {
        if (a_7 == 1) {
            g_B9A = a_6;
            GAMEPLAY::SET_BIT(&g_26D408, 0);
        }
        return 1;
    } else { 
        return 0;
    }
}

auto sub_182b(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11, auto a_12, auto a_13, auto a_14, auto a_15, auto a_16) {
    if (a_D > 99) {}
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_E, a_F)) {}
    sub_2513();
    v_13 = 0;
    switch (a_10) {
    case 0:
        if (g_3839 == 0) {
            v_13 = 0;
        } else { 
            v_13 = 1;
        }
        break;
    case 2:
        if (g_3839 == 2) {
            v_13 = 0;
        } else { 
            v_13 = 1;
        }
        break;
    case 1:
        if (g_3839 == 1) {
            v_13 = 0;
        } else { 
            v_13 = 1;
        }
        break;
    default:
        v_13 = 0;
        break;
    }
    if (v_13 == 0) {
        if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
            if (PED::IS_PED_SWIMMING_UNDER_WATER(PLAYER::PLAYER_PED_ID())) {
                return 0;
            }
        }
        if (g_26D3F9 == 1) {
            return 0;
        }
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${appemail}) > 0) {
            return 0;
        }
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${appmpemail}) > 0) {
            return 0;
        }
    }
    if (sub_23e8() == 0) {
        sub_2253();
        return 0;
    } else { 
        sub_21d3(g_26D3F8);
        g_26CF17[g_26D3F8/*104*/]/*"64"*/ = a_1;
        g_26CF17[g_26D3F8/*104*/]._f11 = a_0;
        if (a_2 == 0) {
        } else { 
            g_26CF17[g_26D3F8/*104*/]._f18 = a_2;
        }
        g_26CF17[g_26D3F8/*104*/]._f19 = a_7;
        g_26CF17[g_26D3F8/*104*/]._f1A = a_8;
        g_26CF17[g_26D3F8/*104*/]._f1D = a_9;
        g_26CF17[g_26D3F8/*104*/]._f1E = a_C;
        g_26CF17[g_26D3F8/*104*/]._f1F = a_B;
        g_26CF17[g_26D3F8/*104*/]._f1C = 0;
        g_26CF17[g_26D3F8/*104*/]._f20 = a_3;
        g_26CF17[g_26D3F8/*104*/]._f21/*"64"*/ = a_4;
        g_26CF17[g_26D3F8/*104*/]._f31 = a_6;
        g_26CF17[g_26D3F8/*104*/]._f32/*"64"*/ = a_5;
        g_26CF17[g_26D3F8/*104*/]._f42 = a_D;
        g_26CF17[g_26D3F8/*104*/]._f43/*"64"*/ = a_E;
        g_26CF17[g_26D3F8/*104*/]._f53/*"64"*/ = a_F;
        sub_2513();
        switch (a_10) {
        case 3:
            g_26CF17[g_26D3F8/*104*/]._f63[g_3839/*1*/] = 1;
            break;
        case 0:
            g_26CF17[g_26D3F8/*104*/]._f63[0/*1*/] = 1;
            break;
        case 2:
            g_26CF17[g_26D3F8/*104*/]._f63[2/*1*/] = 1;
            break;
        case 1:
            g_26CF17[g_26D3F8/*104*/]._f63[1/*1*/] = 1;
            break;
        }
        if (a_10 == 3) {
            switch (g_3839) {
            case 0:
                sub_21b4(0);
                break;
            case 1:
                sub_21b4(1);
                break;
            case 2:
                sub_21b4(2);
                break;
            case 3:
                sub_21b4(3);
                break;
            default:
                break;
            }
        }
        if (a_7 == 1) {
            switch (a_10) {
            case 3:
                g_26D3F9 = 1;
                break;
            case 0:
                g_26D3F9 = 1;
                break;
            case 2:
                g_26D3F9 = 1;
                break;
            case 1:
                g_26D3F9 = 1;
                break;
            }
        }
        g_4179[g_26D3F8/*1*/] = 0;
        if (a_A) {
            sub_2513();
            if (g_3800) {
                g_382E/*"24"*/ = "Phone_SoundSet_Prologue";
            } else { 
                switch (g_3839) {
                case 0:
                    g_382E/*"24"*/ = "Phone_SoundSet_Michael";
                    break;
                case 2:
                    g_382E/*"24"*/ = "Phone_SoundSet_Trevor";
                    break;
                case 1:
                    g_382E/*"24"*/ = "Phone_SoundSet_Franklin";
                    break;
                default:
                    g_382E/*"24"*/ = "Phone_SoundSet_Default";
                    break;
                }
            }
            if (!(g_BFC[g_3839/*2811*/][0/*281*/]._f103 == 1)) {
                if (!sub_21a8()) {
                    AUDIO::PLAY_SOUND_FRONTEND(-1, "Text_Arrive_Tone", &g_382E, 1);
                }
            }
        }
        if (!g_38D8) {
            if (g_3839._f1 == 6) {
                sub_2145(g_3826, "SET_DATA_SLOT_EMPTY", 1.0, 0xbf800000, 0xbf800000, 0xbf800000, 0xbf800000);
                sub_1be6(1);
                sub_2145(g_3826, "DISPLAY_VIEW", 1.0, SYSTEM::TO_FLOAT(g_3825), 0xbf800000, 0xbf800000, 0xbf800000);
            }
        }
        return 1;
    }
}

void sub_1be6(auto a_0) {
    g_4178 = 0;
    g_B34 = a_0;
    for (v_3 = 0; v_3 < 9; v_3 += 1) {
        g_B10[v_3/*1*/] = 0;
    }
    for (v_3 = 0; v_3 < 9; v_3 += 1) {
        v_4 = 0;
        if (sub_2137(14)) {
            for (; v_4 < 34; v_4 += 1) {
                if (a_0 == g_8DE[v_4/*15*/]._fB) {
                    if (v_3 == g_8DE[v_4/*15*/]._f4) {
                        if (g_B10[v_3/*1*/] == 0) {
                            g_AEC[v_3/*1*/] = v_4;
                            if (v_4 == 3) {
                                if (GAMEPLAY::IS_BIT_SET(g_8D8, 3)) {
                                    v_5 = 42;
                                    g_38DB = 1;
                                } else { 
                                    v_5 = 255;
                                    g_38DB = 0;
                                }
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(g_3826, "SET_DATA_SLOT");
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(1);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_3);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(g_8DE[v_4/*15*/]._fA);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
                                sub_2125(&g_8DE[v_4/*15*/]);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_5);
                                GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                            }
                            g_B10[v_3/*1*/] = 1;
                        }
                    }
                }
            }
        } else { 
            for (; v_4 < 34; v_4 += 1) {
                if (a_0 == g_8DE[v_4/*15*/]._fB) {
                    if (v_3 == g_8DE[v_4/*15*/]._f4) {
                        if (g_B10[v_3/*1*/] == 0) {
                            g_AEC[v_3/*1*/] = v_4;
                            if (v_4 == 1) {
                                for (v_6 = 0; v_6 < 35; v_6 += 1) {
                                    if (g_17C49._f306B[v_6/*104*/]._f18 != 0) {
                                        if (g_17C49._f306B[v_6/*104*/]._f1C == 0) {
                                            if (g_17C49._f306B[v_6/*104*/]._f63[g_3839/*1*/] == 1) {
                                                g_4178 += 1;
                                            }
                                        }
                                    }
                                }
                                sub_2072(g_3826, "SET_DATA_SLOT", SYSTEM::TO_FLOAT(1), SYSTEM::TO_FLOAT(v_3), SYSTEM::TO_FLOAT(g_8DE[v_4/*15*/]._fA), SYSTEM::TO_FLOAT(g_4178), -1.0, &g_8DE[v_4/*15*/], 0, 0, 0, 0);
                            } else if (v_4 == 7) {
                                if (g_10A95) {
                                    v_7 = 0;
                                    v_8 = 0;
                                    for (; v_7 < 12; v_7 += 1) {
                                        if (g_26CF17[v_7/*104*/]._f18 != 0) {
                                            if (g_26CF17[v_7/*104*/]._f1C == 0) {
                                                if (g_26CF17[v_7/*104*/]._f63[g_3839/*1*/] == 1) {
                                                    v_8 += 1;
                                                }
                                            }
                                        }
                                    }
                                    sub_2072(g_3826, "SET_DATA_SLOT", SYSTEM::TO_FLOAT(1), SYSTEM::TO_FLOAT(v_3), SYSTEM::TO_FLOAT(g_8DE[v_4/*15*/]._fA), SYSTEM::TO_FLOAT(v_8), -1.0, &g_8DE[v_4/*15*/], 0, 0, 0, 0);
                                } else { 
                                    switch (g_3839) {
                                    case 0:
                                        v_9 = g_8C7A;
                                        break;
                                    case 1:
                                        v_9 = g_8C7B;
                                        break;
                                    case 2:
                                        v_9 = g_8C7C;
                                        break;
                                    default:
                                        break;
                                    }
                                    sub_2072(g_3826, "SET_DATA_SLOT", SYSTEM::TO_FLOAT(1), SYSTEM::TO_FLOAT(v_3), SYSTEM::TO_FLOAT(g_8DE[v_4/*15*/]._fA), SYSTEM::TO_FLOAT(v_9), -1.0, &g_8DE[v_4/*15*/], 0, 0, 0, 0);
                                }
                            } else if (v_4 == 14) {
                                sub_2072(g_3826, "SET_DATA_SLOT", SYSTEM::TO_FLOAT(1), SYSTEM::TO_FLOAT(v_3), SYSTEM::TO_FLOAT(g_8DE[v_4/*15*/]._fA), SYSTEM::TO_FLOAT(g_4173), -1.0, &g_8DE[v_4/*15*/], 0, 0, 0, 0);
                            } else if (v_4 == 20) {
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(g_3826, "SET_DATA_SLOT");
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(1);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_3);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(g_8DE[v_4/*15*/]._fA);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
                                sub_2125(&g_8DE[v_4/*15*/]);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(g_8DD);
                                GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                            } else if (v_4 == 2) {
                                if (GAMEPLAY::IS_BIT_SET(g_8D8, 6)) {
                                    v_A = 42;
                                } else { 
                                    v_A = 255;
                                }
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(g_3826, "SET_DATA_SLOT");
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(1);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_3);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(g_8DE[v_4/*15*/]._fA);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
                                sub_2125(&g_8DE[v_4/*15*/]);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_A);
                                GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                            } else if (v_4 == 3) {
                                if (GAMEPLAY::IS_BIT_SET(g_8D8, 3)) {
                                    v_B = 42;
                                    g_38DB = 1;
                                } else { 
                                    v_B = 255;
                                    g_38DB = 0;
                                }
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(g_3826, "SET_DATA_SLOT");
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(1);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_3);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(g_8DE[v_4/*15*/]._fA);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
                                sub_2125(&g_8DE[v_4/*15*/]);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_B);
                                GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                            } else if (v_4 == 8) {
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(g_3826, "SET_DATA_SLOT");
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(1);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_3);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(g_8DE[v_4/*15*/]._fA);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
                                sub_2125(&g_8DE[v_4/*15*/]);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(42);
                                GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                            } else { 
                                sub_2072(g_3826, "SET_DATA_SLOT", SYSTEM::TO_FLOAT(1), SYSTEM::TO_FLOAT(v_3), SYSTEM::TO_FLOAT(g_8DE[v_4/*15*/]._fA), SYSTEM::TO_FLOAT(0), -1.0, &g_8DE[v_4/*15*/], 0, 0, 0, 0);
                            }
                            g_B10[v_3/*1*/] = 1;
                        }
                    }
                }
            }
        }
    }
}

void sub_2072(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11) {
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(a_0, a_1);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_2));
    if (a_3 != -1.0) {
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_3));
    }
    if (a_4 != -1.0) {
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_4));
    }
    if (a_5 != -1.0) {
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_5));
    }
    if (a_6 != -1.0) {
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_6));
    }
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_7)) {
        sub_2125(a_7);
    }
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_8)) {
        sub_2125(a_8);
    }
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_9)) {
        sub_2125(a_9);
    }
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_A)) {
        sub_2125(a_A);
    }
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_B)) {
        sub_2125(a_B);
    }
    GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
}

void sub_2125(auto a_0) {
    GRAPHICS::_BEGIN_TEXT_COMPONENT(a_0);
    GRAPHICS::_END_TEXT_COMPONENT();
}

auto sub_2137(auto a_0) {
    return g_8861 == a_0;
}

void sub_2145(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(a_0, a_1);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_2));
    if (a_3 != -1.0) {
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_3));
    }
    if (a_4 != -1.0) {
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_4));
    }
    if (a_5 != -1.0) {
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_5));
    }
    if (a_6 != -1.0) {
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_6));
    }
    GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
}

auto sub_21a8() {
    return g_14143C;
}

void sub_21b4(auto a_0) {
    v_3 = g_17C49._f3011[a_0/*20*/]._f8;
    v_3 = v_3;
    v_4 = v_4;
}

void sub_21d3(auto a_0) {
    v_3 = TIME::GET_CLOCK_SECONDS();
    v_4 = TIME::GET_CLOCK_MINUTES();
    v_5 = TIME::GET_CLOCK_HOURS();
    v_6 = TIME::GET_CLOCK_DAY_OF_MONTH();
    v_7 = TIME::GET_CLOCK_MONTH() + 1;
    v_8 = TIME::GET_CLOCK_YEAR();
    g_26CF17[a_0/*104*/]._f12 = v_3;
    g_26CF17[a_0/*104*/]._f12._f1 = v_4;
    g_26CF17[a_0/*104*/]._f12._f2 = v_5;
    g_26CF17[a_0/*104*/]._f12._f3 = v_6;
    g_26CF17[a_0/*104*/]._f12._f4 = v_7;
    g_26CF17[a_0/*104*/]._f12._f5 = v_8;
}

void sub_2253() {
    v_2 = 0;
    v_3 = 10;
    v_4 = v_2;
    g_26D3F8 = 11;
    g_26CF17[g_26D3F8/*104*/]._f12 = -1;
    g_26CF17[g_26D3F8/*104*/]._f12._f1 = 0;
    g_26CF17[g_26D3F8/*104*/]._f12._f2 = 0;
    g_26CF17[g_26D3F8/*104*/]._f12._f3 = 0;
    g_26CF17[g_26D3F8/*104*/]._f12._f5 = 99999;
    for (; v_4 < v_3; v_4 += 1) {
        if (!sub_22fd(g_26CF17[v_4/*104*/]._f12, g_26CF17[g_26D3F8/*104*/]._f12)) {
            g_26D3F8 = v_4;
        }
    }
    g_26CF17[g_26D3F8/*104*/]._f18 = 1;
}

auto sub_22fd(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11) {
    if (a_0._f5 < a_6._f5) {
        return 0;
    }
    if (a_0._f5 > a_6._f5) {
        return 1;
    }
    if (a_0._f5 == a_6._f5) {
        if (a_0._f4 < a_6._f4) {
            return 0;
        }
        if (a_0._f4 > a_6._f4) {
            return 1;
        }
        if (a_0._f4 == a_6._f4) {
            v_E = a_0;
            v_E._f1 = a_0._f1 * 60;
            v_E._f2 = a_0._f2 * 3600;
            v_E._f3 = a_0._f3 * 86400;
            v_1A = ((v_E + v_E._f1) + v_E._f2) + v_E._f3;
            v_14 = a_6;
            v_14._f1 = a_6._f1 * 60;
            v_14._f2 = a_6._f2 * 3600;
            v_14._f3 = a_6._f3 * 86400;
            v_1B = ((v_14 + v_14._f1) + v_14._f2) + v_14._f3;
            if ((v_1A > v_1B) || (v_1A == v_1B)) {
                return 1;
            } else { 
                return 0;
            }
        }
    }
    return 0;
}

auto sub_23e8() {
    v_2 = 0;
    v_3 = 10;
    for (v_4 = v_2; v_4 < v_3; v_4 += 1) {
        if (g_26CF17[v_4/*104*/]._f18 == 0) {
            g_26D3F8 = v_4;
            return 1;
        }
    }
    v_4 = v_2;
    g_26D3F8 = 11;
    g_26CF17[g_26D3F8/*104*/]._f12 = -1;
    g_26CF17[g_26D3F8/*104*/]._f12._f1 = 0;
    g_26CF17[g_26D3F8/*104*/]._f12._f2 = 0;
    g_26CF17[g_26D3F8/*104*/]._f12._f3 = 0;
    g_26CF17[g_26D3F8/*104*/]._f12._f5 = 99999;
    for (; v_4 < v_3; v_4 += 1) {
        if ((g_26CF17[v_4/*104*/]._f18 == 0) || (g_26CF17[v_4/*104*/]._f18 == 1)) {
            if (!sub_22fd(g_26CF17[v_4/*104*/]._f12, g_26CF17[g_26D3F8/*104*/]._f12)) {
                g_26D3F8 = v_4;
            }
        }
    }
    if (g_26D3F8 == 11) {
        return 0;
    } else { 
        g_26CF17[g_26D3F8/*104*/]._f63[0/*1*/] = 0;
        g_26CF17[g_26D3F8/*104*/]._f63[1/*1*/] = 0;
        g_26CF17[g_26D3F8/*104*/]._f63[2/*1*/] = 0;
        return 1;
    }
}

void sub_2513() {
    if (sub_2137(14)) {
        if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID())) {
            if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == g_17C49._f744E[0/*29*/]) {
                g_3839 = 0;
            } else if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == g_17C49._f744E[1/*29*/]) {
                g_3839 = 1;
            } else if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == g_17C49._f744E[2/*29*/]) {
                g_3839 = 2;
            } else { 
                g_3839 = 0;
            }
        }
    } else { 
        g_3839 = sub_25b4();
        if (g_3839 == 145) {
            g_3839 = 3;
        }
        if (g_10A95) {
            g_3839 = 3;
        }
        if (g_3839 > 3) {
            g_3839 = 3;
        }
    }
}

auto sub_25b4() {
    sub_25cd();
    return g_17C49._f6C1._f21B._fC8D;
}

void sub_25cd() {
    if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID())) {
        if (sub_2713(g_17C49._f6C1._f21B._fC8D) != ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID())) {
            v_2 = sub_26d6(PLAYER::PLAYER_PED_ID());
            if (sub_26ca(v_2) && ((!sub_2137(14)) || g_17832)) {
                if ((g_17C49._f6C1._f21B._fC8D != v_2) && sub_26ca(g_17C49._f6C1._f21B._fC8D)) {
                    g_17C49._f6C1._f21B._fC8E = g_17C49._f6C1._f21B._fC8D;
                }
                g_17C49._f6C1._f21B._fC8F = v_2;
                g_17C49._f6C1._f21B._fC8D = v_2;
                return ;
            }
        } else { 
            if (g_17C49._f6C1._f21B._fC8D != 145) {
                g_17C49._f6C1._f21B._fC8F = g_17C49._f6C1._f21B._fC8D;
            }
            return ;
        }
    }
    g_17C49._f6C1._f21B._fC8D = 145;
}

auto sub_26ca(auto a_0) {
    return a_0 < 3;
}

auto sub_26d6(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        v_4 = ENTITY::GET_ENTITY_MODEL(a_0);
        for (v_3 = 0; v_3 <= 2; v_3 += 1) {
            if (sub_2713(v_3) == v_4) {
                return v_3;
            }
        }
    }
    return 145;
}

auto sub_2713(auto a_0) {
    if (sub_26ca(a_0)) {
        return g_17C49._f744E[a_0/*29*/];
    } else if (a_0 != 145) {}
    return 0;
}

auto sub_273d(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11, auto a_12, auto a_13, auto a_14, auto a_15, auto a_16) {
    switch (a_E) {
    case 0:
        a_F = "NULL";
        a_10 = "NULL";
        break;
    case 1:
        a_10 = "NULL";
        break;
    case 2:
        break;
    default:
        break;
    }
    v_13 = 3;
    if (sub_182b(a_0, a_1, a_2, a_6, a_3, a_5, a_4, a_7, a_8, a_9, a_B, a_C, a_D, a_E, a_F, a_10, v_13) == 1) {
        if (a_B == 1) {
            g_B9A = a_A;
            GAMEPLAY::SET_BIT(&g_26D408, 0);
        }
        return 1;
    } else { 
        return 0;
    }
}

auto sub_27bf(auto a_0, auto a_1) {
    if (a_0 == -99) {
        return -99;
    }
    sub_27de(2, a_1);
    return a_0;
}

void sub_27de(auto a_0, auto a_1) {
    if (a_0 == 0) {
        return ;
    }
    v_4 = 0;
    v_5 = 0;
    switch (a_0) {
    case 1:
        v_4 = 1;
        break;
    case 2:
        v_5 = 1;
        break;
    default:
        return ;
    }
    if (v_4) {
        switch (a_1) {
        case 1:
        case 3:
            break;
        case 0:
            a_1 = 1;
            break;
        case 2:
            a_1 = 3;
            break;
        default:
            return ;
        }
        return ;
    }
    if (v_5) {
        switch (a_1) {
        case 2:
        case 3:
            break;
        case 0:
            a_1 = 2;
            break;
        case 1:
            a_1 = 3;
            break;
        default:
            return ;
        }
        return ;
    }
}

auto sub_288f(auto a_0, auto a_1, auto a_2) {
    if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_0)) {
        return l_11;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, l_11)) {
        return l_11;
    }
    sub_27de(1, a_2);
    if (a_1) {
        return a_0;
    }
    return UI::_GET_LABEL_TEXT(a_0);
}

auto sub_28cc(auto a_0) {
    v_3 = sub_29a0(a_0);
    if (v_3 == -1) {
        sub_2902(a_0, 1);
        return 0;
    }
    g_146450[v_3/*5*/]._f4 = 1;
    return g_146450[v_3/*5*/]._f2;
}

void sub_2902(auto a_0, auto a_1) {
    if (!sub_6ae(a_0, 0, 1)) {
        return ;
    }
    if (sub_29a0(a_0) != -1) {
        return ;
    }
    if (g_1464F3) {
        if (a_0 == g_1464F3._f1) {
            return ;
        }
    }
    if (sub_296e(a_0)) {
        return ;
    }
    if (g_146519 >= 32) {
        return ;
    }
    g_1464F8[g_146519/*1*/] = a_0;
    g_146519 += 1;
    if (a_1) {}
}

auto sub_296e(auto a_0) {
    v_3 = 0;
    for (v_3 = 0; v_3 < g_146519; v_3 += 1) {
        if (g_1464F8[v_3/*1*/] == a_0) {
            return 1;
        }
    }
    return 0;
}

auto sub_29a0(auto a_0) {
    if (!sub_6ae(a_0, 0, 1)) {
        return -1;
    }
    if (g_1464F1 == 0) {
        return -1;
    }
    v_3 = 0;
    for (v_3 = 0; v_3 < g_1464F1; v_3 += 1) {
        if (g_146450[v_3/*5*/]._f1 == a_0) {
            if (PED::IS_PEDHEADSHOT_VALID(g_146450[v_3/*5*/]._f2) && PED::IS_PEDHEADSHOT_READY(g_146450[v_3/*5*/]._f2)) {
                return v_3;
            }
            sub_2a1f(v_3);
            return -1;
        }
    }
    return -1;
}

void sub_2a1f(auto a_0) {
    if (a_0 >= g_1464F1) {
        return ;
    }
    if (PED::IS_PEDHEADSHOT_VALID(g_146450[a_0/*5*/]._f2)) {
        v_3/*"64"*/ = "CHAR_DEFAULT";
        if (g_146450[a_0/*5*/]._f2 != 0) {
            v_13/*"64"*/ = PED::GET_PEDHEADSHOT_TXD_STRING(g_146450[a_0/*5*/]._f2);
            UI::_317EBA71D7543F52(&v_13, &v_13, &v_3, &v_3);
        } else { }
        PED::UNREGISTER_PEDHEADSHOT(g_146450[a_0/*5*/]._f2);
    }
    v_23 = a_0;
    for (v_24 = v_23 + 1; v_24 < g_1464F1; v_24 += 1) {
        g_146450[v_23/*5*/]/*{5}*/ = g_146450[v_24/*5*/];
        v_23 += 1;
    }
    sub_2ad4(&g_146450[v_23/*5*/]);
    g_1464F1 -= 1;
}

void sub_2ad4(auto a_0) {
    a_0 = 0;
    a_0._f1 = sub_2b01();
    a_0._f2 = 0;
    a_0._f4 = 0;
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        a_0._f3 = NETWORK::GET_NETWORK_TIME();
    }
}

auto sub_2b01() {
    return -1;
}

void sub_2b0a() {
    g_14292B._f28._f9 = 4;
}

auto sub_2b1b(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8) {
    sub_2b0a();
    v_B = 0;
    return sub_1636(a_0, a_1, a_2, v_B, a_3, a_4, a_5, a_6, a_7, a_8);
}

auto sub_2b42(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8) {
    v_B = 0;
    return sub_2b65(a_0, a_1, a_2, v_B, a_3, a_4, a_5, a_6, a_7, a_8);
}

auto sub_2b65(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9) {
    v_C = sub_2b01();
    v_D = 0;
    if (a_0 == 145) {
        v_C = a_1;
        v_E = PLAYER::GET_PLAYER_NAME(v_C);
        v_D = sub_28cc(v_C);
        if (v_D == 0) {
            if (NETWORK::_CB2CF5148012C8D0(NETWORK::GET_NETWORK_TIME(), g_14292B._f28._fD)) {
                return 0;
            }
        }
        g_4171 = v_D;
    } else { 
        v_E = "";
    }
    v_F = 0;
    v_10 = sub_288f(a_5, a_6, &v_F);
    v_11 = sub_27bf(a_7, &v_F);
    v_12 = 0;
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_8)) {
        v_12 += 1;
        if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_9)) {
            v_12 += 1;
        }
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(v_10, " ")) {
        v_10 = "";
    }
    v_13 = 1;
    v_14 = 0;
    v_15 = 0;
    v_16 = 1;
    v_17 = 0;
    if (a_3) {
        v_15 = 1;
        v_16 = 2;
        v_17 = 1;
        if (GAMEPLAY::IS_BIT_SET(a_4, 1)) {
            v_14 = 1;
        }
    }
    if (GAMEPLAY::IS_BIT_SET(a_4, 2)) {
        v_16 = 2;
    }
    v_18 = 0;
    if ((!(v_F == 0)) || (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(v_E))) {
        v_18 = sub_35b2(a_0, a_2, v_16, v_10, v_11, v_E, v_F, v_17, 1, v_15, 0, v_13, v_14, 0, v_12, a_8, a_9);
    } else { 
        v_18 = sub_2ccc(a_0, a_2, v_16, v_17, 1, v_15, 0, v_13, v_14, 0);
    }
    if (!v_18) {
        return 0;
    }
    if (GAMEPLAY::IS_BIT_SET(a_4, 0)) {
        sub_17ae();
    }
    sub_2cbb();
    sub_179f();
    sub_1787();
    return 1;
}

void sub_2cbb() {
    g_14292B._f28._f9 = 3;
}

auto sub_2ccc(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9) {
    GAMEPLAY::CLEAR_BIT(&g_8D7, 10);
    v_C = 0;
    v_D = "NULL";
    v_E = -99;
    v_F = "NULL";
    v_10 = 0;
    v_11 = "NULL";
    v_12 = "NULL";
    v_13 = 3;
    if (sub_2d64(a_0, a_1, a_2, v_C, v_D, v_F, v_E, a_3, a_4, a_5, a_7, a_8, a_9, v_10, v_11, v_12, v_13) == 1) {
        if (a_7 == 1) {
            g_B9A = a_6;
            g_B39[3/*6*/]/*{4}*/ = g_17C49._f744E[a_0/*29*/]._f3;
            g_B86 = a_0;
            GAMEPLAY::SET_BIT(&g_8D7, 1);
            GAMEPLAY::SET_BIT(&g_8D7, 7);
        }
        return 1;
    } else { 
        return 0;
    }
}

auto sub_2d64(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11, auto a_12, auto a_13, auto a_14, auto a_15, auto a_16) {
    if (a_D > 99) {}
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_E, a_F)) {}
    sub_2513();
    v_13 = 0;
    switch (a_10) {
    case 0:
        if (g_3839 == 0) {
            v_13 = 0;
        } else { 
            v_13 = 1;
        }
        break;
    case 2:
        if (g_3839 == 2) {
            v_13 = 0;
        } else { 
            v_13 = 1;
        }
        break;
    case 1:
        if (g_3839 == 1) {
            v_13 = 0;
        } else { 
            v_13 = 1;
        }
        break;
    default:
        v_13 = 0;
        break;
    }
    if (v_13 == 0) {
        if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
            if (PED::IS_PED_SWIMMING_UNDER_WATER(PLAYER::PLAYER_PED_ID())) {
                return 0;
            }
        }
        if (g_17C49._f3011[g_3839/*20*/]._f11 == 1) {
            return 0;
        }
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${apptextmessage}) > 0) {
            return 0;
        }
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${apptextmessage}) > 0) {
            return 0;
        }
    }
    if (sub_345b() == 0) {
        sub_32a5();
        return 0;
    } else { 
        sub_3213(g_4177);
        g_17C49._f306B[g_4177/*104*/]/*"64"*/ = a_1;
        g_17C49._f306B[g_4177/*104*/]._f11 = a_0;
        if (a_2 == 0) {
        } else { 
            g_17C49._f306B[g_4177/*104*/]._f18 = a_2;
        }
        g_17C49._f306B[g_4177/*104*/]._f19 = a_7;
        g_17C49._f306B[g_4177/*104*/]._f1A = a_8;
        g_17C49._f306B[g_4177/*104*/]._f1D = a_9;
        g_17C49._f306B[g_4177/*104*/]._f1E = a_C;
        g_17C49._f306B[g_4177/*104*/]._f1F = a_B;
        g_17C49._f306B[g_4177/*104*/]._f1C = 0;
        g_17C49._f306B[g_4177/*104*/]._f20 = a_3;
        g_17C49._f306B[g_4177/*104*/]._f21/*"64"*/ = a_4;
        g_17C49._f306B[g_4177/*104*/]._f31 = a_6;
        g_17C49._f306B[g_4177/*104*/]._f32/*"64"*/ = a_5;
        g_17C49._f306B[g_4177/*104*/]._f42 = a_D;
        g_17C49._f306B[g_4177/*104*/]._f43/*"64"*/ = a_E;
        g_17C49._f306B[g_4177/*104*/]._f53/*"64"*/ = a_F;
        if (GAMEPLAY::IS_BIT_SET(g_8D7, 10)) {
            g_17C49._f306B[g_4177/*104*/]._f63[0/*1*/] = 1;
            g_17C49._f306B[g_4177/*104*/]._f63[1/*1*/] = 1;
            g_17C49._f306B[g_4177/*104*/]._f63[2/*1*/] = 1;
            g_B99 = 4;
            sub_21b4(0);
            sub_21b4(2);
            sub_21b4(1);
        } else { 
            sub_2513();
            switch (a_10) {
            case 3:
                g_17C49._f306B[g_4177/*104*/]._f63[g_3839/*1*/] = 1;
                break;
            case 0:
                g_17C49._f306B[g_4177/*104*/]._f63[0/*1*/] = 1;
                break;
            case 2:
                g_17C49._f306B[g_4177/*104*/]._f63[2/*1*/] = 1;
                break;
            case 1:
                g_17C49._f306B[g_4177/*104*/]._f63[1/*1*/] = 1;
                break;
            }
            if (a_10 == 3) {
                switch (g_3839) {
                case 0:
                    sub_21b4(0);
                    g_B99 = 0;
                    break;
                case 1:
                    sub_21b4(1);
                    g_B99 = 1;
                    break;
                case 2:
                    sub_21b4(2);
                    g_B99 = 2;
                    break;
                case 3:
                    sub_21b4(3);
                    g_B99 = 3;
                    break;
                default:
                    g_B99 = 4;
                    break;
                }
            }
        }
        if (a_7 == 1) {
            if (GAMEPLAY::IS_BIT_SET(g_8D7, 10)) {
                g_17C49._f3011[0/*20*/]._f11 = 1;
                g_17C49._f3011[1/*20*/]._f11 = 1;
                g_17C49._f3011[2/*20*/]._f11 = 1;
            } else { 
                switch (a_10) {
                case 3:
                    g_17C49._f3011[g_3839/*20*/]._f11 = 1;
                    break;
                case 0:
                    g_17C49._f3011[0/*20*/]._f11 = 1;
                    break;
                case 2:
                    g_17C49._f3011[2/*20*/]._f11 = 1;
                    break;
                case 1:
                    g_17C49._f3011[1/*20*/]._f11 = 1;
                    break;
                }
            }
        }
        g_4179[g_4177/*1*/] = 0;
        if (a_A) {
            sub_2513();
            if (g_3800) {
                g_382E/*"24"*/ = "Phone_SoundSet_Prologue";
            } else { 
                switch (g_3839) {
                case 0:
                    g_382E/*"24"*/ = "Phone_SoundSet_Michael";
                    break;
                case 2:
                    g_382E/*"24"*/ = "Phone_SoundSet_Trevor";
                    break;
                case 1:
                    g_382E/*"24"*/ = "Phone_SoundSet_Franklin";
                    break;
                default:
                    g_382E/*"24"*/ = "Phone_SoundSet_Default";
                    break;
                }
            }
            if (!(g_BFC[g_3839/*2811*/][0/*281*/]._f103 == 1)) {
                if (!sub_21a8()) {
                    AUDIO::PLAY_SOUND_FRONTEND(-1, "Text_Arrive_Tone", &g_382E, 1);
                }
            }
        }
        if (!g_38D8) {
            if (g_3839._f1 == 6) {
                sub_2145(g_3826, "SET_DATA_SLOT_EMPTY", 1.0, 0xbf800000, 0xbf800000, 0xbf800000, 0xbf800000);
                sub_1be6(1);
                sub_2145(g_3826, "DISPLAY_VIEW", 1.0, SYSTEM::TO_FLOAT(g_3825), 0xbf800000, 0xbf800000, 0xbf800000);
            }
        }
        return 1;
    }
}

void sub_3213(auto a_0) {
    v_3 = TIME::GET_CLOCK_SECONDS();
    v_4 = TIME::GET_CLOCK_MINUTES();
    v_5 = TIME::GET_CLOCK_HOURS();
    v_6 = TIME::GET_CLOCK_DAY_OF_MONTH();
    v_7 = TIME::GET_CLOCK_MONTH() + 1;
    v_8 = TIME::GET_CLOCK_YEAR();
    g_17C49._f306B[a_0/*104*/]._f12 = v_3;
    g_17C49._f306B[a_0/*104*/]._f12._f1 = v_4;
    g_17C49._f306B[a_0/*104*/]._f12._f2 = v_5;
    g_17C49._f306B[a_0/*104*/]._f12._f3 = v_6;
    g_17C49._f306B[a_0/*104*/]._f12._f4 = v_7;
    g_17C49._f306B[a_0/*104*/]._f12._f5 = v_8;
}

void sub_32a5() {
    if (g_10A95) {
        v_2 = 24;
        v_3 = 33;
    } else { 
        v_2 = 0;
        v_3 = 20;
    }
    v_4 = v_2;
    g_4177 = 34;
    g_17C49._f306B[g_4177/*104*/]._f12 = -1;
    g_17C49._f306B[g_4177/*104*/]._f12._f1 = 0;
    g_17C49._f306B[g_4177/*104*/]._f12._f2 = 0;
    g_17C49._f306B[g_4177/*104*/]._f12._f3 = 0;
    g_17C49._f306B[g_4177/*104*/]._f12._f5 = 99999;
    for (; v_4 < v_3; v_4 += 1) {
        if (!sub_3370(g_17C49._f306B[v_4/*104*/]._f12, g_17C49._f306B[g_4177/*104*/]._f12)) {
            g_4177 = v_4;
        }
    }
    g_17C49._f306B[g_4177/*104*/]._f18 = 1;
}

auto sub_3370(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11) {
    if (a_0._f5 < a_6._f5) {
        return 0;
    }
    if (a_0._f5 > a_6._f5) {
        return 1;
    }
    if (a_0._f5 == a_6._f5) {
        if (a_0._f4 < a_6._f4) {
            return 0;
        }
        if (a_0._f4 > a_6._f4) {
            return 1;
        }
        if (a_0._f4 == a_6._f4) {
            v_E = a_0;
            v_E._f1 = a_0._f1 * 60;
            v_E._f2 = a_0._f2 * 3600;
            v_E._f3 = a_0._f3 * 86400;
            v_1A = ((v_E + v_E._f1) + v_E._f2) + v_E._f3;
            v_14 = a_6;
            v_14._f1 = a_6._f1 * 60;
            v_14._f2 = a_6._f2 * 3600;
            v_14._f3 = a_6._f3 * 86400;
            v_1B = ((v_14 + v_14._f1) + v_14._f2) + v_14._f3;
            if ((v_1A > v_1B) || (v_1A == v_1B)) {
                return 1;
            } else { 
                return 0;
            }
        }
    }
    return 0;
}

auto sub_345b() {
    if (g_10A95) {
        v_2 = 24;
        v_3 = 33;
    } else { 
        v_2 = 0;
        v_3 = 20;
    }
    for (v_4 = v_2; v_4 < v_3; v_4 += 1) {
        if (g_17C49._f306B[v_4/*104*/]._f18 == 0) {
            g_4177 = v_4;
            return 1;
        }
    }
    v_4 = v_2;
    g_4177 = 34;
    g_17C49._f306B[g_4177/*104*/]._f12 = -1;
    g_17C49._f306B[g_4177/*104*/]._f12._f1 = 0;
    g_17C49._f306B[g_4177/*104*/]._f12._f2 = 0;
    g_17C49._f306B[g_4177/*104*/]._f12._f3 = 0;
    g_17C49._f306B[g_4177/*104*/]._f12._f5 = 99999;
    for (; v_4 < v_3; v_4 += 1) {
        if ((g_17C49._f306B[v_4/*104*/]._f18 == 0) || (g_17C49._f306B[v_4/*104*/]._f18 == 1)) {
            if (!sub_3370(g_17C49._f306B[v_4/*104*/]._f12, g_17C49._f306B[g_4177/*104*/]._f12)) {
                g_4177 = v_4;
            }
        }
    }
    if (g_4177 == 34) {
        return 0;
    } else { 
        g_17C49._f306B[g_4177/*104*/]._f63[0/*1*/] = 0;
        g_17C49._f306B[g_4177/*104*/]._f63[1/*1*/] = 0;
        g_17C49._f306B[g_4177/*104*/]._f63[2/*1*/] = 0;
        return 1;
    }
}

auto sub_35b2(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11, auto a_12, auto a_13, auto a_14, auto a_15, auto a_16) {
    switch (a_E) {
    case 0:
        a_F = "NULL";
        a_10 = "NULL";
        break;
    case 1:
        a_10 = "NULL";
        break;
    case 2:
        break;
    default:
        break;
    }
    GAMEPLAY::CLEAR_BIT(&g_8D7, 10);
    v_13 = 3;
    if (sub_2d64(a_0, a_1, a_2, a_6, a_3, a_5, a_4, a_7, a_8, a_9, a_B, a_C, a_D, a_E, a_F, a_10, v_13) == 1) {
        if (a_B == 1) {
            g_B9A = a_A;
            g_B39[3/*6*/]/*{4}*/ = g_17C49._f744E[a_0/*29*/]._f3;
            g_B86 = a_0;
            g_B87/*"64"*/ = a_5;
            GAMEPLAY::SET_BIT(&g_8D7, 1);
            GAMEPLAY::SET_BIT(&g_8D7, 7);
        }
        return 1;
    } else { 
        return 0;
    }
}

auto sub_3667(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8) {
    if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {}
    if (AI::IS_PED_SPRINTING(PLAYER::PLAYER_PED_ID())) {
        return 0;
    }
    sub_2cbb();
    v_B = 1;
    if (sub_2b65(a_0, a_1, a_2, v_B, a_3, a_4, a_5, a_6, a_7, a_8)) {
        sub_1613(120000);
        return 1;
    }
    return 0;
}

auto sub_36b9(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        if (AI::IS_PED_SPRINTING(PLAYER::PLAYER_PED_ID())) {
            return 0;
        }
    }
    v_7 = 0;
    v_8 = 12;
    if (GAMEPLAY::IS_BIT_SET(a_4, 7)) {
        v_8 = 9;
    }
    if (GAMEPLAY::IS_BIT_SET(a_4, 4)) {
        v_7 = sub_3d7a(a_0, a_1, a_2, a_3, v_8, 0, 0, 1);
    } else { 
        v_7 = sub_37d6(a_0, a_1, a_2, a_3, v_8, 0, 0, 1);
    }
    if (v_7) {
        if (GAMEPLAY::IS_BIT_SET(a_4, 3)) {
            sub_37b3(1);
        }
        if (GAMEPLAY::IS_BIT_SET(a_4, 5)) {
            sub_3792(1);
        }
        sub_3781();
        sub_179f();
        sub_3769();
        sub_375c();
        return 1;
    }
    return 0;
}

void sub_375c() {
    g_256D5D = 0;
}

void sub_3769() {
    g_14292B._f39 = 1;
    g_14292B._f39._f1 = 0;
}

void sub_3781() {
    g_14292B._f28._f9 = 1;
}

void sub_3792(auto a_0) {
    if (a_0 == 1) {
        GAMEPLAY::SET_BIT(&g_8D9, 0);
    } else { 
        GAMEPLAY::CLEAR_BIT(&g_8D9, 0);
    }
}

void sub_37b3(auto a_0) {
    if (a_0 == 1) {
        GAMEPLAY::SET_BIT(&g_8D7, 20);
    } else { 
        GAMEPLAY::CLEAR_BIT(&g_8D7, 20);
    }
}

auto sub_37d6(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    sub_3d24(a_0, a_1, a_2, a_5, a_6, 0);
    g_3D7C = 0;
    g_3D53 = 1;
    g_3D5A = 0;
    g_3D55 = 0;
    g_412B = 0;
    g_412D = 0;
    g_4131 = 0;
    g_3D51 = 0;
    g_3D80 = 0;
    g_3D82 = 0;
    g_280001 = 0;
    return sub_3824(a_3, a_4, a_7);
}

auto sub_3824(auto a_0, auto a_1, auto a_2) {
    g_3D4D = 0;
    if ((g_3D4C == 0) || (g_3D4E == 2)) {
        if (g_3D4C != 0) {
            if (a_1 > g_3D4E) {
                if (g_3D53 == 0) {
                    AUDIO::STOP_SCRIPTED_CONVERSATION(0);
                    g_3839._f1 = 3;
                    g_3D4C = 0;
                    g_3D4D = 1;
                    g_3D81 = 0;
                    g_3D48 = 0;
                    g_3D49 = 0;
                    g_3D57 = 0;
                    g_3D56 = 0;
                    g_3838 = 0;
                } else { 
                    sub_3ccd();
                    return 0;
                }
            } else { 
                return 0;
            }
        }
        if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
            return 0;
        }
        if (sub_4114(8, -1)) {
            return 0;
        }
        g_3D98/*{6}*/ = g_3D92;
        sub_3c76();
        g_3A85/*{165}*/ = g_3B2A;
        g_3D52 = g_3D53;
        g_3D59 = g_3D5A;
        g_280002 = g_280001;
        g_3D5B/*{16}*/ = g_3D6B;
        g_3D54 = g_3D55;
        g_412A = g_412B;
        g_4132/*{6}*/ = g_4138;
        g_412C = g_412D;
        g_412E = g_412F;
        g_4130 = g_4131;
        g_3BCF._f172 = g_4129;
        g_3BCF._f170 = g_4127;
        g_3BCF._f171 = g_4128;
        g_3D48 = g_3D49;
        if (g_3D52) {
            GAMEPLAY::CLEAR_BIT(&g_8D7, 20);
            GAMEPLAY::CLEAR_BIT(&g_8D8, 17);
            GAMEPLAY::CLEAR_BIT(&g_8D9, 0);
            if (a_2) {
                sub_2513();
                if (g_BFC[g_3839/*2811*/][0/*281*/]._f103 == 2) {
                    if (a_1 == 13) {
                    } else { 
                        return 0;
                    }
                }
                if (g_3839._f1 > 3) {
                    return 0;
                }
            }
            if (g_3817 == 1) {
                return 0;
            }
            if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
                if (PED::IS_PED_IN_MELEE_COMBAT(PLAYER::PLAYER_PED_ID())) {
                    return 0;
                }
                if (sub_3bdd()) {
                    return 0;
                }
                if (AI::IS_PED_SPRINTING(PLAYER::PLAYER_PED_ID())) {
                    return 0;
                }
                if (PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) {
                    return 0;
                }
                if (PED::_7DCE8BDA0F1C1200(PLAYER::PLAYER_PED_ID())) {
                    return 0;
                }
                if (WEAPON::_IS_PED_USING_GADGET(PLAYER::PLAYER_PED_ID(), ${gadget_parachute})) {
                    return 0;
                }
                if (!g_10A95) {
                    if (ENTITY::IS_ENTITY_IN_WATER(PLAYER::PLAYER_PED_ID())) {
                        return 0;
                    }
                    if (PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID())) {
                        return 0;
                    }
                    if (PED::IS_PED_PLANTING_BOMB(PLAYER::PLAYER_PED_ID())) {
                        return 0;
                    }
                    if (PLAYER::IS_SPECIAL_ABILITY_ACTIVE(PLAYER::PLAYER_ID())) {
                        return 0;
                    }
                }
            }
            if (sub_3bb6()) {
                return 0;
            } else { 
                switch (g_3839._f1) {
                case 7:
                    return 0;
                    break;
                case 8:
                    return 0;
                    break;
                case 9:
                    break;
                case 10:
                    break;
                default:
                    break;
                }
                if (GAMEPLAY::IS_BIT_SET(g_8D7, 9)) {
                    return 0;
                }
            }
            sub_3b21();
            g_3D56 = a_2;
        }
        g_3D4E = a_1;
        g_3BCF/*"24"*/ = a_0;
        g_38DE = 0;
        sub_3af0();
        return 1;
    } else { 
        if (g_3D4C == 5) {
            return 0;
        }
        if ((a_1 < g_3D4E) || (a_1 == g_3D4E)) {
            return 0;
        } else { 
            if (a_1 == 2) {
            } else { 
                sub_3ccd();
            }
            return 0;
        }
    }
}

void sub_3af0() {
    for (v_2 = 0; v_2 <= 69; v_2 += 1) {
        g_38E0[v_2/*6*/]/*"24"*/ = "";
    }
    AUDIO::STOP_SCRIPTED_CONVERSATION(0);
    g_3D4C = 1;
}

void sub_3b21() {
    g_3D81 = g_3D80;
    g_3D7B = g_3D7C;
    g_3DAA/*{6}*/ = g_3D9E;
    g_3DB0/*{6}*/ = g_3DA4;
    g_3D83 = g_3D82;
    g_3DC8/*{6}*/ = g_3DB6;
    g_3DCE/*{6}*/ = g_3DBC;
    g_3DD4/*{6}*/ = g_3DC2;
    g_3DDA/*{6}*/ = g_3DE0;
    g_62A = g_62B;
    g_62C = g_62D;
    g_3D57 = g_3D58;
    g_3D59 = g_3D5A;
    g_3D5B/*{16}*/ = g_3D6B;
    g_3D50 = g_3D51;
    g_4144 = 0;
    g_3D7D = 0;
    g_3D7E = 0;
    GAMEPLAY::CLEAR_BIT(&g_8D8, 16);
}

auto sub_3bb6() {
    if ((g_3839._f1 == 1) || (g_3839._f1 == 0)) {
        return 1;
    } else { 
        return 0;
    }
}

auto sub_3bdd() {
    if (g_10A95) {
        v_2 = 0;
        WEAPON::GET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), &v_3, 1);
        if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
            if (((v_3 == ${weapon_sniperrifle}) || (v_3 == ${weapon_heavysniper})) || (v_3 == ${weapon_remotesniper})) {
                v_2 = 1;
            }
        }
        if (CAM::IS_AIM_CAM_ACTIVE() && (v_2 == 1)) {
            return 1;
        } else { 
            return 0;
        }
    } else if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        if (PED::GET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 78, 1)) {
            return 1;
        } else { 
            return 0;
        }
    } else { 
        return 1;
    }
}

void sub_3c76() {
    for (v_2 = 0; v_2 <= 15; v_2 += 1) {
        g_3A85[v_2/*10*/] = 0;
        g_3A85[v_2/*10*/]._f1/*"24"*/ = "";
        g_3A85[v_2/*10*/]._f7 = 0;
        g_3A85[v_2/*10*/]._f8 = 0;
    }
    g_3A85._fA1 = -99;
    g_3A85._fA2/*{3}*/ = {0.0, 0.0, 0.0 };
}

void sub_3ccd() {
    AUDIO::RESTART_SCRIPTED_CONVERSATION();
    g_413F = 0;
    if ((AUDIO::IS_MOBILE_PHONE_CALL_ONGOING() || (g_3839._f1 == 9)) || (g_3838 == 1)) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(0);
        g_3D4C = 6;
        g_3839._f1 = 3;
        return ;
    }
    if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(1);
        g_3D4C = 6;
        return ;
    }
}

void sub_3d24(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    g_3B2A/*{165}*/ = a_0;
    g_62B = a_1;
    g_3D92/*"24"*/ = a_2;
    g_4129 = a_5;
    if (a_3 == 0) {
        g_4127 = 1;
        g_4125 = 0;
    } else { 
        g_4127 = 0;
        g_4125 = 1;
    }
    if (a_4 == 0) {
        g_4128 = 1;
        g_4126 = 0;
    } else { 
        g_4128 = 0;
        g_4126 = 1;
    }
}

auto sub_3d7a(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    sub_3d24(a_0, a_1, a_2, a_5, a_6, 0);
    g_3D7C = 1;
    g_3D53 = 1;
    g_3D5A = 0;
    g_3D55 = 0;
    g_412B = 0;
    g_412D = 0;
    g_4131 = 0;
    g_3D51 = 0;
    g_3D80 = 0;
    g_3D82 = 0;
    g_280001 = 0;
    return sub_3824(a_3, a_4, a_7);
}

auto sub_3dc8(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {}
    if (AI::IS_PED_SPRINTING(PLAYER::PLAYER_PED_ID())) {
        return 0;
    }
    if (sub_3e26(a_0, a_1, a_2, a_3, 9, a_4, 0, 0, 1)) {
        sub_3e1a();
        sub_3781();
        sub_179f();
        sub_3769();
        sub_375c();
        return 1;
    }
    return 0;
}

void sub_3e1a() {
    g_4146 = 0;
}

auto sub_3e26(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8) {
    sub_3d24(a_0, a_1, a_2, a_6, a_7, 0);
    g_3D7C = 0;
    g_3D53 = 1;
    g_3D5A = 0;
    g_3D55 = 1;
    g_412B = 0;
    g_412D = 0;
    g_4131 = 0;
    g_3D51 = 0;
    g_3D80 = 1;
    g_3D82 = 0;
    g_3DE0/*"24"*/ = a_5;
    g_280001 = 0;
    return sub_3824(a_3, a_4, a_8);
}

auto sub_3e7b(auto a_0, auto a_1, auto a_2) {
    if (sub_3eb7(a_0, a_1, a_2, 12, 0, 0, 0)) {
        sub_3ea6();
        sub_179f();
        sub_3769();
        return 1;
    }
    return 0;
}

void sub_3ea6() {
    g_14292B._f28._f9 = 2;
}

auto sub_3eb7(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    sub_3d24(a_0, 145, a_1, a_4, a_5, a_6);
    if (a_3 > 7) {
        if (a_3 < 12) {
            a_3 = 7;
        }
    }
    g_3D53 = 0;
    g_3D55 = 0;
    g_3D5A = 0;
    g_412B = 0;
    g_412D = 0;
    g_4131 = 0;
    g_280001 = 0;
    return sub_3824(a_2, a_3, 0);
}

void sub_3f05() {
    g_14292B._f37 = g_14292B._f28._f1;
    g_14292B._f37._f1 = g_14292B._f28._fA;
}

void sub_3f2b() {
    g_14292B._f28 = 1;
}

auto sub_3f3a() {
    return g_14292B._f28 == 1;
}

auto sub_3f4a(auto a_0, auto a_1, auto a_2) {
    if (!sub_3f89(a_0)) {
        return 0;
    }
    if (g_14292B._f28._f2 != a_1) {
        return 0;
    }
    if (a_2 != 0) {
        if (g_14292B._f28._f3 != a_2) {
            return 0;
        }
    }
    return 1;
}

auto sub_3f89(auto a_0) {
    if (!sub_3fb1()) {
        return 0;
    }
    if (!(g_14292B._f28._f1 == a_0)) {
        return 0;
    }
    return 1;
}

auto sub_3fb1() {
    if (g_14292B._f28 == 0) {
        return 0;
    }
    return 1;
}

auto sub_3fc8(auto a_0) {
    if (sub_40c5()) {
        return 0;
    }
    if (sub_40b5()) {
        return 0;
    }
    if (sub_405b(0)) {
        return 0;
    }
    if (g_1406D3._f12 != 0) {
        return 0;
    }
    if (g_19B0AA || sub_4043()) {
        return 0;
    }
    if (!GAMEPLAY::IS_BIT_SET(a_0, 6)) {
        if (sub_402f()) {
            return 0;
        }
    }
    return 1;
}

auto sub_402f() {
    return NETWORK::_CB2CF5148012C8D0(NETWORK::GET_NETWORK_TIME(), g_145F98);
}

auto sub_4043() {
    if (g_26AFD5._f31C > -1) {
        return 1;
    }
    return 0;
}

auto sub_405b(auto a_0) {
    if (a_0 == 1) {
        if (g_3839._f1 > 3) {
            if (GAMEPLAY::IS_BIT_SET(g_8D7, 14)) {
                return 1;
            } else { 
                return 0;
            }
        } else { 
            return 0;
        }
    } else { 
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${cellphone_flashhand}) > 0) {
            return 1;
        }
        if (g_3839._f1 > 3) {
            return 1;
        } else { 
            return 0;
        }
    }
}

auto sub_40b5() {
    return g_14292B._f28 == 3;
}

auto sub_40c5() {
    return sub_3bb6();
}

auto sub_40d1(auto a_0, auto a_1, auto a_2) {
    if (!sub_40b5()) {
        return 0;
    }
    return sub_3f4a(a_0, a_1, a_2);
}

auto sub_40ef(auto a_0, auto a_1) {
    v_4/*"64"*/ = a_0;
    v_4/*64*/ += a_1;
    return GAMEPLAY::GET_HASH_KEY(&v_4);
}

auto sub_4109() {
    return "TXTMSG";
}

auto sub_4114(auto a_0, auto a_1) {
    switch (a_0) {
    case 5:
        if (a_1 > -1) {
            return g_1441E9._fCB[a_1/*1*/];
        } else { }
        break;
    }
    return GAMEPLAY::IS_BIT_SET(g_1441E9._f3B5, a_0);
}

auto sub_414f() {
    if (PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        return 0;
    }
    if (!PLAYER::IS_PLAYER_CONTROL_ON(PLAYER::PLAYER_ID())) {
        return 0;
    }
    if (CAM::IS_SCREEN_FADED_OUT()) {
        return 0;
    }
    if (sub_426f()) {
        return 0;
    }
    if (sub_424d()) {
        return 0;
    }
    if (sub_4231()) {
        return 0;
    }
    if (sub_421f()) {
        return 0;
    }
    if (UI::IS_PAUSE_MENU_ACTIVE()) {
        return 0;
    }
    if (sub_420e()) {
        return 0;
    }
    if (g_105F2) {
        return 0;
    }
    if (sub_41ff()) {
        return 0;
    }
    if (sub_41f0()) {
        return 0;
    }
    if (sub_d9af()) {
        return 0;
    }
    return 1;
}

auto sub_41f0() {
    return g_250CE3._f235;
}

auto sub_41ff() {
    return g_250CE3._f2CB;
}

auto sub_420e() {
    return g_250FDB._fB19._f29;
}

auto sub_421f() {
    return g_24F57C._f916._f249;
}

auto sub_4231() {
    return GAMEPLAY::IS_BIT_SET(g_182604[PLAYER::PLAYER_ID()/*324*/]._f1F._f12, 0);
}

auto sub_424d() {
    if ((g_3D4C != 0) || AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
        return 1;
    } else { 
        return 0;
    }
}

auto sub_426f() {
    if (g_3839._f1 == 1) {
        return 1;
    } else { 
        return 0;
    }
}

auto sub_4288(auto a_0, auto a_1, auto a_2) {
    if (GAMEPLAY::IS_BIT_SET(l_4A6, 0)) {
        a_0/*"16"*/ = "TXT_CAR_PEGCOLL";
        a_1 = 41;
        a_2 = 0;
        return 1;
    } else if (GAMEPLAY::IS_BIT_SET(l_4A6, 1)) {
        a_0/*"16"*/ = "PEG_TXT_1";
        a_1 = 41;
        a_2 = 1;
        return 1;
    } else if (GAMEPLAY::IS_BIT_SET(l_4A6, 2)) {
        a_0/*"16"*/ = "PEG_TXT_2";
        a_1 = 41;
        a_2 = 2;
        return 1;
    } else if (GAMEPLAY::IS_BIT_SET(l_4A6, 3)) {
        a_0/*"16"*/ = "PEG_TXT_3";
        a_1 = 41;
        a_2 = 3;
        return 1;
    } else if (GAMEPLAY::IS_BIT_SET(l_4A6, 4)) {
        a_0/*"16"*/ = "PEG_TXT_4";
        a_1 = 12;
        a_2 = 4;
        return 1;
    } else if (GAMEPLAY::IS_BIT_SET(l_4A6, 5)) {
        a_0/*"16"*/ = "PEG_TXT_5";
        a_1 = 12;
        a_2 = 5;
        return 1;
    }
    return 0;
}

void sub_435e() {
    if (l_4A5 != 0) {
        v_2 = sub_44fc();
        if (!GAMEPLAY::ARE_STRINGS_EQUAL(v_2, "NULL")) {
            if (!GAMEPLAY::IS_BIT_SET(l_4A4, 0)) {
                sub_4461(&l_581, 3, 0, "PEGASUS", 0, 1);
                if (sub_43e9(&l_581, 41, "CT_AUD", v_2, 0, 0)) {
                    GAMEPLAY::SET_BIT(&l_4A4, 0);
                }
            } else if (!GAMEPLAY::IS_BIT_SET(l_4A4, 1)) {
                if (sub_405b(0)) {
                    GAMEPLAY::SET_BIT(&l_4A4, 1);
                }
            } else if (!sub_405b(0)) {
                l_4A5 = 0;
                l_4A4 = 0;
            }
        }
    }
}

auto sub_43e9(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (sub_443c()) {
        return 0;
    }
    if (sub_442e()) {
        return 0;
    }
    v_8 = 0;
    v_9 = 0;
    v_A = -99;
    return sub_12f8(a_0, a_1, a_2, a_3, 1, a_5, a_4, v_8, v_9, v_A, v_8, v_8, -1);
}

auto sub_442e() {
    return g_256647._f1;
}

auto sub_443c() {
    if (g_1429E7._f2) {
        return 1;
    }
    return sub_4455();
}

auto sub_4455() {
    return sub_40c5();
}

void sub_4461(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (a_0[a_1/*10*/]._f7 == 1) {}
    a_0[a_1/*10*/] = a_2;
    a_0[a_1/*10*/]._f1/*"24"*/ = a_3;
    a_0[a_1/*10*/]._f7 = 1;
    a_0[a_1/*10*/]._f8 = a_4;
    a_0[a_1/*10*/]._f9 = a_5;
    if (!g_10A95) {
        if (!PED::IS_PED_INJURED(a_2)) {
            if (a_0[a_1/*10*/]._f8 == 0) {
                PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(a_2, 0);
            } else { 
                PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(a_2, 1);
            }
        }
        if (!PED::IS_PED_INJURED(a_2)) {
            if (a_0[a_1/*10*/]._f9 == 0) {
                PED::SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(a_2, 0);
            } else { 
                PED::SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(a_2, 1);
            }
        }
    }
}

auto sub_44fc() {
    if (GAMEPLAY::IS_BIT_SET(l_4A5, 0)) {
        if (sub_45cc()) {
            return "MPCT_19";
        } else { 
            return "MPCT_20";
        }
    } else if (GAMEPLAY::IS_BIT_SET(l_4A5, 1)) {
        v_2 = l_4AC._fC;
        if (v_2 != 0) {
            if ((VEHICLE::IS_THIS_MODEL_A_BOAT(v_2) || (v_2 == ${submersible})) || (v_2 == ${submersible2})) {
                if (sub_45cc()) {
                    return "MPCT_13";
                } else { 
                    return "MPCT_14";
                }
            } else if (VEHICLE::IS_THIS_MODEL_A_PLANE(v_2) || VEHICLE::IS_THIS_MODEL_A_HELI(v_2)) {
                if (sub_45cc()) {
                    return "MPCT_15";
                } else { 
                    return "MPCT_16";
                }
            } else if (sub_45cc()) {
                return "MPCT_17";
            } else { 
                return "MPCT_18";
            }
        }
    }
    return "NULL";
}

auto sub_45cc() {
    return sub_45dc(PLAYER::PLAYER_ID());
}

auto sub_45dc(auto a_0) {
    if (ENTITY::GET_ENTITY_MODEL(PLAYER::GET_PLAYER_PED(a_0)) == ${mp_f_freemode_01}) {
        return 1;
    }
    return 0;
}

void sub_45fb() {
    v_2 = 0;
    v_3 = 0;
    if (GAMEPLAY::IS_BIT_SET(l_4AC, 0)) {
        if (!GAMEPLAY::IS_BIT_SET(l_4AC, 1)) {
            if (NETWORK::NETWORK_DOES_NETWORK_ID_EXIST(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31)) {
                l_4AC._f5 = l_580;
                GAMEPLAY::SET_BIT(&l_4AC, 1);
                GAMEPLAY::CLEAR_BIT(&l_4AC, 9);
            } else { 
                if (!GAMEPLAY::IS_BIT_SET(l_4AC, 2)) {
                    if (!GAMEPLAY::IS_BIT_SET(l_4AC, 3)) {
                        if (UI::DOES_BLIP_EXIST(l_4AC._f4)) {
                            UI::REMOVE_BLIP(&l_4AC._f4);
                        }
                        if (!UI::DOES_BLIP_EXIST(l_4AC._f4)) {
                            l_4AC._f4 = sub_5156(sub_5182(l_4AC._f3), 0);
                        }
                        if (GAMEPLAY::IS_BIT_SET(l_4AC, 6)) {
                            sub_4dd5();
                            UI::SET_BLIP_NAME_FROM_TEXT_FILE(l_4AC._f4, VEHICLE::GET_DISPLAY_NAME_FROM_VEHICLE_MODEL(l_4AC._fC));
                        } else { 
                            UI::SET_BLIP_COLOUR(l_4AC._f4, 3);
                            if (GAMEPLAY::IS_BIT_SET(l_4AC, 5) && (l_4AC._f2 != -1)) {
                                UI::SET_BLIP_NAME_FROM_TEXT_FILE(l_4AC._f4, VEHICLE::GET_DISPLAY_NAME_FROM_VEHICLE_MODEL(l_4AC._fC));
                            } else { 
                                UI::SET_BLIP_NAME_FROM_TEXT_FILE(l_4AC._f4, "VED_BLIPN");
                            }
                        }
                        if (!GAMEPLAY::IS_BIT_SET(l_4AC, 8)) {
                            UI::SET_BLIP_FLASHES(l_4AC._f4, 1);
                            UI::SET_BLIP_FLASH_TIMER(l_4AC._f4, 10000);
                            GAMEPLAY::SET_BIT(&l_4AC, 8);
                        }
                        GAMEPLAY::SET_BIT(&l_4AC, 3);
                    }
                }
                if (!GAMEPLAY::IS_BIT_SET(l_4AC, 9)) {
                    GAMEPLAY::SET_BIT(&l_4AC, 9);
                    l_4AC._f5 = l_580;
                } else if (GAMEPLAY::IS_BIT_SET(l_4AC, 6)) {
                    if (NETWORK::GET_TIME_DIFFERENCE(l_580, l_4AC._f5) > 0xdbba00) {
                        GAMEPLAY::SET_BIT(&l_4A6, 3);
                        v_2 = 1;
                    }
                }
            }
        } else if (NETWORK::NETWORK_DOES_NETWORK_ID_EXIST(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31)) {
            v_4 = NETWORK::NET_TO_VEH(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31);
            if (!GAMEPLAY::IS_BIT_SET(l_4AC, 2)) {
                if (!PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), v_4, 1)) {
                    if (UI::DOES_BLIP_EXIST(l_4AC._f4)) {
                        UI::REMOVE_BLIP(&l_4AC._f4);
                    }
                    if (GAMEPLAY::IS_BIT_SET(l_4AC, 3)) {
                        GAMEPLAY::CLEAR_BIT(&l_4AC, 3);
                    }
                    if (GAMEPLAY::IS_BIT_SET(l_4AC, 6)) {
                        l_4AC._f4 = UI::ADD_BLIP_FOR_ENTITY(v_4);
                        sub_4dd5();
                        UI::SET_BLIP_NAME_FROM_TEXT_FILE(l_4AC._f4, VEHICLE::GET_DISPLAY_NAME_FROM_VEHICLE_MODEL(l_4AC._fC));
                    } else { 
                        l_4AC._f4 = sub_4d07(v_4, 0, 0);
                        UI::SET_BLIP_NAME_FROM_TEXT_FILE(l_4AC._f4, VEHICLE::GET_DISPLAY_NAME_FROM_VEHICLE_MODEL(l_4AC._fC));
                    }
                    if (!GAMEPLAY::IS_BIT_SET(l_4AC, 8)) {
                        UI::SET_BLIP_FLASHES(l_4AC._f4, 1);
                        UI::SET_BLIP_FLASH_TIMER(l_4AC._f4, 10000);
                        GAMEPLAY::SET_BIT(&l_4AC, 8);
                    }
                    GAMEPLAY::SET_BIT(&l_4AC, 2);
                }
            } else if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), v_4, 1)) {
                if (UI::DOES_BLIP_EXIST(l_4AC._f4)) {
                    UI::REMOVE_BLIP(&l_4AC._f4);
                }
                GAMEPLAY::CLEAR_BIT(&l_4AC, 2);
            }
            if (!GAMEPLAY::IS_BIT_SET(l_4AC, 4)) {
                if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0), ENTITY::GET_ENTITY_COORDS(v_4, 0)) < 40000.0) {
                    GAMEPLAY::SET_BIT(&l_4AC, 4);
                    if (GAMEPLAY::IS_BIT_SET(l_4AC, 9)) {
                        GAMEPLAY::CLEAR_BIT(&l_4AC, 9);
                    }
                } else if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0), ENTITY::GET_ENTITY_COORDS(v_4, 0)) > 62500.0) {
                    if (GAMEPLAY::IS_BIT_SET(l_4AC, 9)) {
                        if (GAMEPLAY::IS_BIT_SET(l_4AC, 6)) {
                            if (NETWORK::GET_TIME_DIFFERENCE(l_580, l_4AC._f5) > 120000) {
                                GAMEPLAY::SET_BIT(&l_4A6, 3);
                                v_2 = 1;
                            }
                        }
                    }
                }
            } else if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0), ENTITY::GET_ENTITY_COORDS(v_4, 0)) > 62500.0) {
                GAMEPLAY::CLEAR_BIT(&l_4AC, 4);
                if (!GAMEPLAY::IS_BIT_SET(l_4AC, 6)) {
                    v_2 = 1;
                } else if (!GAMEPLAY::IS_BIT_SET(l_4AC, 9)) {
                    GAMEPLAY::SET_BIT(&l_4AC, 9);
                    l_4AC._f5 = l_580;
                }
            }
            if (!GAMEPLAY::IS_BIT_SET(l_4AC, 6)) {
                if (!GAMEPLAY::IS_BIT_SET(l_4AC, 10)) {
                    if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), v_4, 1)) {
                        GAMEPLAY::SET_BIT(&l_4A6, 4);
                        l_4AC._f6 = l_580;
                        GAMEPLAY::SET_BIT(&l_4AC, 10);
                    }
                } else if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(v_4, 0), l_4AC._fD) > 2500.0) {
                    if (!GAMEPLAY::IS_BIT_SET(l_4AC, 11)) {
                        GAMEPLAY::SET_BIT(&l_4AC, 11);
                    }
                    if (NETWORK::GET_TIME_DIFFERENCE(l_580, l_4AC._f6) > 0x15f900) {
                        sub_dd8();
                    }
                } else if (GAMEPLAY::IS_BIT_SET(l_4AC, 11)) {
                    GAMEPLAY::CLEAR_BIT(&l_4AC, 11);
                }
            }
            if (!ENTITY::IS_ENTITY_DEAD(v_4)) {
                if (!VEHICLE::IS_VEHICLE_SEAT_FREE(v_4, -1)) {
                    if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(v_4, -1) != PLAYER::PLAYER_PED_ID()) {
                        v_3 = 0;
                        if (GAMEPLAY::IS_BIT_SET(l_4AC, 6)) {
                            if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(v_4, 0), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1)) > 40000.0) {
                                v_3 = 1;
                            }
                        } else { 
                            v_3 = 1;
                        }
                        if (v_3) {
                            if (GAMEPLAY::IS_BIT_SET(l_4AC, 6)) {
                                if (!GAMEPLAY::IS_BIT_SET(l_4AC, 13)) {
                                    GAMEPLAY::SET_BIT(&l_4A6, 1);
                                    GAMEPLAY::SET_BIT(&l_4AC, 13);
                                }
                            } else { 
                                v_2 = 1;
                            }
                        }
                    }
                }
            }
            if (!GAMEPLAY::IS_BIT_SET(l_4AC, 6)) {
                if (!GAMEPLAY::IS_BIT_SET(l_4AC, 4)) {
                    if (GAMEPLAY::IS_BIT_SET(l_4AC, 7)) {
                        l_4AC._f5 = l_580;
                        GAMEPLAY::CLEAR_BIT(&l_4AC, 7);
                    }
                    if (NETWORK::GET_TIME_DIFFERENCE(l_580, l_4AC._f5) > 300000) {
                        v_2 = 1;
                    }
                } else if (!GAMEPLAY::IS_BIT_SET(l_4AC, 7)) {
                    GAMEPLAY::SET_BIT(&l_4AC, 7);
                }
            }
            if (!VEHICLE::IS_VEHICLE_DRIVEABLE(v_4, 0)) {
                if (GAMEPLAY::IS_BIT_SET(l_4AC, 6)) {
                    GAMEPLAY::SET_BIT(&l_4A6, 2);
                }
                v_2 = 1;
            }
        } else if (GAMEPLAY::IS_BIT_SET(l_4AC, 6)) {
            GAMEPLAY::CLEAR_BIT(&l_4AC, 1);
            GAMEPLAY::CLEAR_BIT(&l_4AC, 2);
            GAMEPLAY::CLEAR_BIT(&l_4AC, 3);
            GAMEPLAY::CLEAR_BIT(&l_4AC, 4);
            GAMEPLAY::CLEAR_BIT(&l_4AC, 5);
        } else { 
            v_2 = 1;
        }
        if (!g_252BB6) {
            if (sub_4cd2(l_4AC._f3)) {
                g_252BB6 = 1;
            }
        }
        if (GAMEPLAY::IS_BIT_SET(l_4AC, 6)) {
            if (!GAMEPLAY::IS_BIT_SET(g_24F57C._fCCB, 8)) {
                GAMEPLAY::SET_BIT(&g_24F57C._fCCB, 8);
            }
        }
        if (!GAMEPLAY::IS_BIT_SET(g_24F57C._fCCB, 10)) {
            GAMEPLAY::SET_BIT(&g_24F57C._fCCB, 10);
        }
    } else { 
        if (GAMEPLAY::IS_BIT_SET(g_24F57C._fCCB, 8)) {
            GAMEPLAY::CLEAR_BIT(&g_24F57C._fCCB, 8);
        }
        if (GAMEPLAY::IS_BIT_SET(g_24F57C._fCCB, 10)) {
            GAMEPLAY::CLEAR_BIT(&g_24F57C._fCCB, 10);
        }
    }
    if (GAMEPLAY::IS_BIT_SET(g_24F57C._fCCB, 8) && GAMEPLAY::IS_BIT_SET(g_24F57C._fCCB, 9)) {
        if (UI::DOES_BLIP_EXIST(l_4AC._f4)) {
            v_5/*{3}*/ = UI::GET_BLIP_COORDS(l_4AC._f4);
            if (!GAMEPLAY::IS_BIT_SET(l_4A7, 0)) {
                UI::SET_NEW_WAYPOINT(v_5, v_5._f1);
                l_4A9/*{3}*/ = v_5;
                GAMEPLAY::SET_BIT(&l_4A7, 0);
            } else if ((l_4A9 != v_5) || (l_4A9._f1 != v_5._f1)) {
                UI::SET_NEW_WAYPOINT(v_5, v_5._f1);
                l_4A9/*{3}*/ = v_5;
            }
        }
    } else if (GAMEPLAY::IS_BIT_SET(l_4A7, 0)) {
        l_4A9/*{3}*/ = l_5D;
        GAMEPLAY::CLEAR_BIT(&l_4A7, 0);
    }
    if (v_2) {
        sub_c66(0, 1);
    }
}

auto sub_4cd2(auto a_0) {
    switch (a_0) {
    case 5:
    case 14:
    case 15:
    case 31:
    case 43:
        return 1;
        break;
    }
    return 0;
}

auto sub_4d07(auto a_0, auto a_1, auto a_2) {
    return sub_4d1a(a_0, !a_1, a_2);
}

auto sub_4d1a(auto a_0, auto a_1, auto a_2) {
    if (!ENTITY::DOES_ENTITY_EXIST(a_0)) {
        return 0;
    }
    v_5 = UI::ADD_BLIP_FOR_ENTITY(a_0);
    if (ENTITY::IS_ENTITY_A_VEHICLE(a_0)) {
        UI::SET_BLIP_SCALE(v_5, sub_4dbe(NETWORK::NETWORK_IS_GAME_IN_PROGRESS(), 1.0, 1.0));
        if (!a_2) {
            UI::SET_BLIP_AS_FRIENDLY(v_5, a_1);
        } else { 
            UI::SET_BLIP_COLOUR(v_5, 2);
        }
    } else if (ENTITY::IS_ENTITY_A_PED(a_0)) {
        UI::SET_BLIP_SCALE(v_5, sub_4dbe(NETWORK::NETWORK_IS_GAME_IN_PROGRESS(), 0.7, 0.7));
        UI::SET_BLIP_AS_FRIENDLY(v_5, a_1);
    } else if (ENTITY::IS_ENTITY_AN_OBJECT(a_0)) {
        UI::SET_BLIP_SCALE(v_5, sub_4dbe(NETWORK::NETWORK_IS_GAME_IN_PROGRESS(), 0.7, 0.7));
    } else { }
    return v_5;
}

auto sub_4dbe(auto a_0, auto a_1, auto a_2) {
    if (a_0) {
        return a_1;
    } else { 
        return a_2;
    }
}

void sub_4dd5() {
    if (VEHICLE::IS_THIS_MODEL_A_BIKE(l_4AC._fC)) {
        UI::SET_BLIP_SPRITE(l_4AC._f4, 226);
    } else if (VEHICLE::IS_THIS_MODEL_A_HELI(l_4AC._fC)) {
        UI::SET_BLIP_SPRITE(l_4AC._f4, 64);
    } else if (VEHICLE::IS_THIS_MODEL_A_BOAT(l_4AC._fC)) {
        UI::SET_BLIP_SPRITE(l_4AC._f4, 410);
    } else if (sub_5122(l_4AC._fC)) {
        UI::SET_BLIP_SPRITE(l_4AC._f4, 424);
    } else if (VEHICLE::IS_THIS_MODEL_A_PLANE(l_4AC._fC)) {
        UI::SET_BLIP_SPRITE(l_4AC._f4, 423);
    } else if (l_4AC._fC == ${rhino}) {
        UI::SET_BLIP_SPRITE(l_4AC._f4, 421);
    } else if ((l_4AC._fC == ${submersible}) || (l_4AC._fC == ${submersible2})) {
        UI::SET_BLIP_SPRITE(l_4AC._f4, 308);
    } else { 
        UI::SET_BLIP_SPRITE(l_4AC._f4, 225);
    }
    sub_4ec2(&l_4AC._f4, 13);
}

void sub_4ec2(auto a_0, auto a_1) {
    if (UI::DOES_BLIP_EXIST(a_0)) {
        UI::SET_BLIP_COLOUR(a_0, sub_4ee4(a_1));
    } else { }
}

auto sub_4ee4(auto a_0) {
    switch (a_0) {
    case 1:
        return 4;
    case 0:
        return 4;
    case 6:
        return 59;
    case 18:
        return 2;
    case 13:
        return 5;
    case 116:
        return 38;
    case 28:
        return 6;
    case 29:
        return 7;
    case 30:
        return 8;
    case 31:
        return 9;
    case 32:
        return 10;
    case 33:
        return 11;
    case 34:
        return 12;
    case 35:
        return 13;
    case 36:
        return 14;
    case 37:
        return 15;
    case 38:
        return 16;
    case 39:
        return 17;
    case 40:
        return 18;
    case 41:
        return 19;
    case 42:
        return 20;
    case 43:
        return 21;
    case 44:
        return 22;
    case 45:
        return 23;
    case 46:
        return 24;
    case 47:
        return 25;
    case 48:
        return 26;
    case 49:
        return 27;
    case 50:
        return 28;
    case 51:
        return 29;
    case 52:
        return 30;
    case 53:
        return 31;
    case 54:
        return 32;
    case 55:
        return 33;
    case 56:
        return 34;
    case 57:
        return 35;
    case 58:
        return 36;
    case 59:
        return 37;
    case 9:
        return 57;
    case 10:
        return 53;
    case 118:
        return 57;
    case 14:
        return 56;
    case 3:
        return 55;
    case 21:
        return 50;
    case 15:
        return 51;
    case 20:
        return 52;
    case 11:
        return 54;
    case 23:
        return 58;
    case 12:
        return 60;
    case 24:
        return 61;
    case 4:
        return 62;
    }
    asm j 0x511e
    return 0;
}

auto sub_5122(auto a_0) {
    if (((a_0 == ${lazer}) || (a_0 == 0x6cbd1d6d)) || (a_0 == ${hydra})) {
        return 1;
    }
    return 0;
}

auto sub_5156(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6 = UI::ADD_BLIP_FOR_COORD(a_0);
    UI::SET_BLIP_SCALE(v_6, sub_4dbe(NETWORK::NETWORK_IS_GAME_IN_PROGRESS(), 1.0, 1.0));
    UI::SET_BLIP_ROUTE(v_6, a_3);
    return v_6;
}

auto<3> sub_5182(auto a_0) {
    switch (a_0) {
    case 0:
        return {-1625.6124267578125, -1164.28125, 0.9334 };
        break;
    case 1:
        return {-842.4, -1450.9, 6.1216 };
        break;
    case 2:
        return {1518.520263671875, 3793.134765625, 32.50590133666992 };
        break;
    case 3:
        return {-733.5297241210938, 6058.2333984375, 0.2164 };
        break;
    case 4:
        return {-731.8922119140625, -1452.25244140625, 5.4344 };
        break;
    case 5:
        return {-1146.1617431640625, -2864.179443359375, 12.948399543762207 };
        break;
    case 6:
        return {-475.3544921875, 5988.729, 30.3369 };
        break;
    case 7:
        return {1771.0804443359375, 3240.019775390625, 41.13949966430664 };
        break;
    case 8:
        return {1715.443115234375, 3262.263671875, 40.13119888305664 };
        break;
    case 9:
        return {520.1676025390625, -3025.9404296875, 5.0005 };
        break;
    case 10:
        return {575.7730102539062, -3135.996337890625, -8.99489974975586 };
        break;
    case 11:
        return {-1093.371826171875, -438.2651062011719, 35.5541 };
        break;
    case 12:
        return {324.88641357421875, 3420.4375, 35.583999999999996 };
        break;
    case 13:
        return {-323.5444030761719, 6099.31689453125, 30.463199615478516 };
        break;
    case 14:
        return {-1148.3404541015625, -2395.466552734375, 12.9455 };
        break;
    case 15:
        return {-1393.22583, -3264.6533203125, 12.9452 };
        break;
    case 16:
        return {2141.1865234375, 4820.23046875, 40.25019836425781 };
        break;
    case 17:
        return {2111.08447265625, 4778.60791015625, 40.03139877319336 };
        break;
    case 18:
        return {-1598.6851806640625, -1118.418701171875, 1.7377 };
        break;
    case 19:
        return {1130.077880859375, 57.6775016784668, 79.75640106201172 };
        break;
    case 20:
        return {2555.8349609375, 4682.13671875, 32.95640182495117 };
        break;
    case 21:
        return {-114.7, 2803.052, 52.002601623535156 };
        break;
    case 22:
        return {-3239.9931640625, 1348.457275390625, -1.5927 };
        break;
    case 23:
        return {3857.871337890625, 4462.2783203125, 1.7288999999999999 };
        break;
    case 24:
        return {478.3669128417969, -3370.251220703125, 5.07 };
        break;
    case 25:
        return {391.9728088378906, -1620.703, 28.2928 };
        break;
    case 26:
        return {-1052.068603515625, -857.0933227539062, 3.8774 };
        break;
    case 27:
        return {1871.8719482421875, 3688.03833, 32.66189956665039 };
        break;
    case 28:
        return {-481.9919128417969, 6024.171875, 30.340499877929688 };
        break;
    case 29:
        return {3896.305908203125, 4256.55615234375, -4.811699867248535 };
        break;
    case 30:
        return {-1606.4571533203125, 5232.18115234375, 2.0718 };
        break;
    case 31:
        return {-1269.0205078125, -3376.48681640625, 12.945 };
        break;
    case 32:
        return {-139.01620483398438, -998.11962890625, 26.27739906311035 };
        break;
    case 33:
        return {-829.9290161132812, -805.603515625, 18.1434 };
        break;
    case 34:
        return {844.3568115234375, 2371.8, 52.660701751708984 };
        break;
    case 35:
        return {63.41849899291992, 6516.1044921875, 30.55739974975586 };
        break;
    case 36:
        return {-2004.8624267578125, 3018.930908203125, 31.810199737548828 };
        break;
    case 37:
        return {293.9661865234375, 175.65890502929688, 103.08769989013672 };
        break;
    case 38:
        return {-311.639404296875, 226.61509704589844, 86.85769653320312 };
        break;
    case 39:
        return {1407.98828125, 1118.8448486328125, 113.83789825439453 };
        break;
    case 40:
        return {-1889.739013671875, 2047.2791748046875, 139.872406 };
        break;
    case 41:
        return {-3418.4013671875, 947.1168212890625, -2.4595 };
        break;
    case 42:
        return {708.33447265625, 4102.0751953125, 27.17029953 };
        break;
    case 43:
        return {-970.36181640625, -2980.644775390625, 12.945099830627441 };
        break;
    case 44:
        return {306.74139404296875, -1459.144775390625, 45.509498596191406 };
        break;
    case 45:
        return {-190.39059448242188, 6287.017578125, 30.489299774169922 };
        break;
    case 46:
        return {2925.42919921875, 4635.04248046875, 47.545101165771484 };
        break;
    case 47:
        return {-1647.03857421875, 3089.380859375, 30.6732 };
        break;
    case 48:
        return {2858.68798828125, -639.0316772460938, -2.6077 };
        break;
    case 49:
        return {3385.162109375, 5187.80126953125, -2.4114 };
        break;
    case 50:
        return {2503.076904296875, -391.11138916015625, 93.11990356445312 };
        break;
    case 51:
        return {434.5729064941406, -622.2772827148438, 27.5 };
        break;
    case 52:
        return {2689.15966796875, 1643.110595703125, 23.599199295043945 };
        break;
    case 53:
        return {-86.21559906, 1909.3109130859375, 195.7091064453125 };
        break;
    case 54:
        return {-702.2061157226562, 5805.3603515625, 16.2945 };
        break;
    }
    return {0.0, 0.0, 0.0 };
}

void sub_5761() {
    if (GAMEPLAY::IS_BIT_SET(g_250FDB._f1580, 0)) {
        if ((!GAMEPLAY::IS_BIT_SET(g_250FDB._f1580, 1)) && (!GAMEPLAY::IS_BIT_SET(g_250FDB._f1580, 2))) {
            if (sub_4d0(&l_4AC._f7, 10000, 0)) {
                GAMEPLAY::SET_BIT(&g_250FDB._f1580, 2);
            } else if (!GAMEPLAY::IS_BIT_SET(l_4AC, 1)) {
                if (!GAMEPLAY::IS_BIT_SET(l_4AC, 0)) {
                    v_2 = g_250FDB._fC05._f2A;
                    if (v_2 != 0) {
                        STREAMING::REQUEST_MODEL(v_2);
                        if (STREAMING::HAS_MODEL_LOADED(v_2)) {
                            if (!GAMEPLAY::IS_BIT_SET(l_4AC._f1, 0)) {
                                if (sub_68a1(NETWORK::GET_NUM_RESERVED_MISSION_VEHICLES(0) + 1, 0, 1)) {
                                    NETWORK::RESERVE_NETWORK_MISSION_VEHICLES(NETWORK::GET_NUM_RESERVED_MISSION_VEHICLES(0) + 1);
                                    GAMEPLAY::SET_BIT(&l_4AC._f1, 0);
                                }
                            } else if (NETWORK::CAN_REGISTER_MISSION_VEHICLES(1)) {
                                GAMEPLAY::SET_BIT(&l_4AC, 0);
                                GAMEPLAY::SET_BIT(&l_4AC, 6);
                                if (sub_5907(v_2, g_250FDB._fD9F, g_250FDB._fDA2, 0)) {
                                    l_4AC._f5 = l_580;
                                    l_4AC._fB = sub_58a2(v_2);
                                    l_4AC._fC = v_2;
                                    l_4AC._f1 = 0;
                                    NETWORK::RESERVE_NETWORK_MISSION_VEHICLES(NETWORK::GET_NUM_RESERVED_MISSION_VEHICLES(0) - 1);
                                    STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_2);
                                    GAMEPLAY::SET_BIT(&g_250FDB._f1580, 1);
                                }
                            }
                        }
                    }
                }
            }
        }
    } else { 
        sub_4c3(&l_4AC._f7);
    }
}

auto sub_58a2(auto a_0) {
    if ((VEHICLE::IS_THIS_MODEL_A_BOAT(a_0) || (a_0 == ${submersible})) || (a_0 == ${submersible2})) {
        return 0;
    }
    if (VEHICLE::IS_THIS_MODEL_A_HELI(a_0)) {
        return 1;
    }
    if (VEHICLE::IS_THIS_MODEL_A_CAR(a_0) || VEHICLE::IS_THIS_MODEL_A_QUADBIKE(a_0)) {
        return 2;
    }
    if (VEHICLE::IS_THIS_MODEL_A_PLANE(a_0)) {
        return 3;
    }
    return 2;
}

auto sub_5907(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (!NETWORK::NETWORK_DOES_NETWORK_ID_EXIST(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31)) {
        if (sub_6883(a_0)) {
            if (sub_6800(&g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31, a_0, a_1, a_4, 0, 1, 0, 0, 1, 1)) {
                g_2554DA._f116 = NETWORK::NET_TO_VEH(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31);
                if (a_0 == 0xb79f589e) {
                    l_67C._f1B = g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31;
                }
                if ((a_0 == 0xb79f589e) || (a_0 == 0x4019cb4c)) {
                    if (DECORATOR::_IS_DECORATOR_OF_TYPE("MPBitset", 3)) {
                        if (DECORATOR::_DOES_DECORATOR_EXIST(NETWORK::NET_TO_VEH(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31), "MPBitset")) {
                            v_8 = DECORATOR::_GET_DECORATOR_INT(NETWORK::NET_TO_VEH(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31), "MPBitset");
                        }
                        GAMEPLAY::SET_BIT(&v_8, 10);
                        DECORATOR::_SET_DECORATOR_INT(NETWORK::NET_TO_VEH(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31), "MPBitset", v_8);
                    }
                }
                NETWORK::_A8A024587329F36A(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31, PLAYER::PLAYER_ID(), 1);
                if (a_5) {
                    NETWORK::NETWORK_FADE_IN_ENTITY(NETWORK::NET_TO_ENT(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31), 1);
                }
                VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(NETWORK::NET_TO_VEH(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31));
                if ((VEHICLE::IS_THIS_MODEL_A_BOAT(a_0) || (a_0 == ${submersible})) || (a_0 == ${submersible2})) {
                    VEHICLE::SET_BOAT_ANCHOR(NETWORK::NET_TO_VEH(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31), 1);
                }
                if (a_0 == ${monster}) {
                    VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(NETWORK::NET_TO_VEH(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31), 0, 0, 0);
                }
                if ((a_0 == ${insurgent}) || (a_0 == ${insurgent2})) {
                    VEHICLE::SET_VEHICLE_MOD_KIT(NETWORK::NET_TO_VEH(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31), 0);
                    VEHICLE::SET_VEHICLE_MOD(NETWORK::NET_TO_VEH(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31), 16, VEHICLE::GET_NUM_VEHICLE_MODS(NETWORK::NET_TO_VEH(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31), 16) - 1, 0);
                    VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(NETWORK::NET_TO_VEH(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31), 0);
                }
                if (a_0 == ${technical}) {
                    VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(NETWORK::NET_TO_VEH(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31), 0);
                }
                v_9 = sub_5c8f(a_0);
                if (sub_5c43(v_9)) {
                    if (VEHICLE::GET_NUM_MOD_KITS(NETWORK::NET_TO_VEH(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31)) > 0) {
                        VEHICLE::SET_VEHICLE_MOD_KIT(NETWORK::NET_TO_VEH(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31), 0);
                    }
                    VEHICLE::SET_VEHICLE_LIVERY(NETWORK::NET_TO_VEH(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31), g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f32);
                    if (g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f33 != -1) {
                        VEHICLE::SET_VEHICLE_COLOURS(NETWORK::NET_TO_VEH(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31), g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f33, g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f34);
                    }
                }
                ENTITY::_3910051CCECDB00C(NETWORK::NET_TO_VEH(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31), 0);
                l_4AC._fD/*{3}*/ = a_1;
                if (GAMEPLAY::IS_BIT_SET(l_4AC, 6)) {
                    DECORATOR::_SET_DECORATOR_BOOL(NETWORK::NET_TO_VEH(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31), "CreatedByPegasus", 1);
                    VEHICLE::SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER(NETWORK::NET_TO_VEH(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31), 1);
                } else { 
                    VEHICLE::SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER(NETWORK::NET_TO_VEH(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31), 0);
                }
                STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(a_0);
                return 1;
            }
        }
    }
    return 0;
}

auto sub_5c43(auto a_0) {
    if ((((((a_0 == 94) || (a_0 == 68)) || (a_0 == 101)) || (a_0 == 164)) || (a_0 == 200)) || (a_0 == 219)) {
        return 1;
    }
    return 0;
}

auto sub_5c8f(auto a_0) {
    switch (a_0) {
    case ${ztype}:
        return 0;
    case ${stinger}:
        return 1;
    case ${jb700}:
        return 2;
    case ${cheetah}:
        return 3;
    case ${entityxf}:
        return 4;
    case ${adder}:
        return 5;
    case ${monroe}:
        return 6;
    case ${cogcabrio}:
        return 7;
    case ${shamal}:
        return 10;
    case ${stunt}:
        return 11;
    case ${cuban800}:
        return 12;
    case ${duster}:
        return 13;
    case ${luxor}:
        return 14;
    case ${frogger}:
        return 15;
    case ${maverick}:
        return 16;
    case ${rhino}:
        return 17;
    case ${titan}:
        return 18;
    case ${cargobob}:
        return 19;
    case ${buzzard}:
        return 20;
    case ${crusader}:
        return 21;
    case ${barracks}:
        return 22;
    case ${marquis}:
        return 24;
    case ${jetmax}:
        return 25;
    case ${squalo}:
        return 27;
    case ${tropic}:
        return 29;
    case ${seashark}:
        return 30;
    case ${submersible}:
        return 31;
    case ${suntrap}:
        return 32;
    case ${bmx}:
        return 33;
    case ${scorcher}:
        return 34;
    case ${tribike}:
        return 35;
    case ${tribike2}:
        return 36;
    case ${tribike3}:
        return 37;
    case ${cruiser}:
        return 38;
    case ${schwarzer}:
        return 39;
    case ${zion}:
        return 40;
    case ${gauntlet}:
        return 41;
    case ${vigero}:
        return 42;
    case ${issi2}:
        return 43;
    case ${infernus}:
        return 44;
    case ${surano}:
        return 45;
    case ${vacca}:
        return 46;
    case ${ninef}:
        return 47;
    case ${comet2}:
        return 48;
    case ${banshee}:
        return 49;
    case ${feltzer2}:
        return 50;
    case ${bfinjection}:
        return 51;
    case ${sandking}:
        return 52;
    case ${fugitive}:
        return 53;
    case ${dilettante}:
        return 54;
    case ${superd}:
        return 55;
    case ${exemplar}:
        return 56;
    case ${baller2}:
        return 57;
    case ${cavalcade}:
        return 58;
    case ${rocoto}:
        return 59;
    case ${felon}:
        return 60;
    case ${oracle2}:
        return 61;
    case ${bati}:
        return 62;
    case ${akuma}:
        return 63;
    case ${ruffian}:
        return 64;
    case ${vader}:
        return 65;
    case ${blazer}:
        return 66;
    case ${pcj}:
        return 67;
    case ${sanchez}:
        return 68;
    case ${faggio2}:
        return 69;
    case ${airbus}:
        return 82;
    case ${annihilator}:
        return 78;
    case ${bati2}:
        return 94;
    case ${bison}:
        return 89;
    case ${bullet}:
        return 70;
    case ${bus}:
        return 83;
    case ${carbonizzare}:
        return 71;
    case ${coach}:
        return 84;
    case ${coquette}:
        return 72;
    case ${double}:
        return 90;
    case ${dump}:
        return 81;
    case ${felon2}:
        return 91;
    case ${hexer}:
        return 92;
    case ${journey}:
        return 85;
    case ${mammatus}:
        return 79;
    case ${mule}:
        return 86;
    case ${ninef2}:
        return 73;
    case ${rapidgt}:
        return 74;
    case ${rapidgt2}:
        return 75;
    case ${rentalbus}:
        return 87;
    case ${stingergt}:
        return 76;
    case ${stretch}:
        return 88;
    case ${velum}:
        return 80;
    case ${voltic}:
        return 77;
    case ${zion2}:
        return 93;
    case ${bodhi2}:
        return 103;
    case ${dune}:
        return 104;
    case ${rebel}:
        return 105;
    case ${sadler}:
        return 106;
    case ${sanchez2}:
        return 107;
    case ${sandking2}:
        return 108;
    case ${asea}:
        return 128;
    case ${asterope}:
        return 129;
    case ${bobcatxl}:
        return 130;
    case ${cavalcade2}:
        return 131;
    case ${granger}:
        return 132;
    case ${ingot}:
        return 133;
    case ${intruder}:
        return 134;
    case ${minivan}:
        return 135;
    case ${premier}:
        return 136;
    case ${radi}:
        return 137;
    case ${rancherxl}:
        return 138;
    case ${ratloader}:
        return 139;
    case ${stanier}:
        return 140;
    case ${stratum}:
        return 141;
    case ${washington}:
        return 142;
    case ${dominator}:
        return 122;
    case ${f620}:
        return 123;
    case ${fusilade}:
        return 124;
    case ${penumbra}:
        return 125;
    case ${sentinel}:
        return 126;
    case ${sentinel2}:
        return 127;
    case ${picador}:
        return 150;
    case ${regina}:
        return 151;
    case ${surfer}:
        return 152;
    case ${youga}:
        return 153;
    case ${blazer3}:
        return 154;
    case ${rebel2}:
        return 155;
    case ${primo}:
        return 156;
    case ${buffalo}:
        return 157;
    case ${buffalo2}:
        return 158;
    case ${tailgater}:
        return 159;
    }
    if (a_0 == ${bifta}) {
        return 99;
    } else if (a_0 == ${kalahari}) {
        return 100;
    } else if (a_0 == ${paradise}) {
        return 101;
    } else if (a_0 == ${speeder}) {
        return 102;
    } else if ((a_0 == 0x16219b3d) || (a_0 == ${btype})) {
        return 109;
    } else if (a_0 == ${jester}) {
        return 111;
    } else if (a_0 == ${massacro}) {
        return 114;
    } else if (a_0 == ${turismor}) {
        return 112;
    } else if (a_0 == ${zentorno}) {
        return 115;
    } else if (a_0 == ${huntley}) {
        return 116;
    } else if (a_0 == ${alpha}) {
        return 110;
    } else if (a_0 == ${vestra}) {
        return 113;
    } else if (a_0 == ${coquette}) {
        return 117;
    } else if (a_0 == ${banshee}) {
        return 118;
    } else if (a_0 == ${stinger}) {
        return 119;
    } else if (a_0 == ${voltic}) {
        return 120;
    } else if (a_0 == ${thrust}) {
        return 121;
    } else if (a_0 == ${blade}) {
        return 143;
    } else if (a_0 == ${warrener}) {
        return 144;
    } else if (a_0 == 0x47a6bc1) {
        return 145;
    } else if (a_0 == ${rhapsody}) {
        return 146;
    } else if (a_0 == ${panto}) {
        return 147;
    } else if (a_0 == ${dubsta3}) {
        return 148;
    } else if (a_0 == 0x404b6381) {
        return 149;
    } else if (a_0 == ${monster}) {
        return 160;
    } else if (a_0 == ${sovereign}) {
        return 161;
    } else if (a_0 == ${miljet}) {
        return 162;
    } else if (a_0 == 0x6cbd1d6d) {
        return 163;
    } else if (a_0 == 0xebc24df2) {
        return 164;
    } else if (a_0 == 0x3c4e2113) {
        return 165;
    } else if (a_0 == 0x3c4e2113) {
        return 166;
    } else if (a_0 == ${innovation}) {
        return 167;
    } else if (a_0 == ${hakuchou}) {
        return 168;
    } else if (a_0 == 0xbf1691e0) {
        return 169;
    } else if (a_0 == ${kalahari}) {
        return 170;
    } else if (a_0 == ${valkyrie}) {
        return 187;
    } else if (a_0 == ${hydra}) {
        return 177;
    } else if (a_0 == ${savage}) {
        return 185;
    } else if (a_0 == ${enduro}) {
        return 174;
    } else if (a_0 == ${boxville4}) {
        return 171;
    } else if (a_0 == ${casco}) {
        return 172;
    } else if (a_0 == ${dinghy3}) {
        return 173;
    } else if (a_0 == ${gburrito2}) {
        return 175;
    } else if (a_0 == ${guardian}) {
        return 176;
    } else if (a_0 == ${insurgent}) {
        return 178;
    } else if (a_0 == ${mule3}) {
        return 183;
    } else if (a_0 == ${insurgent2}) {
        return 179;
    } else if (a_0 == ${lectro}) {
        return 182;
    } else if (a_0 == ${pbus}) {
        return 184;
    } else if (a_0 == ${technical}) {
        return 186;
    } else if (a_0 == ${velum2}) {
        return 188;
    } else if (a_0 == ${gresley}) {
        return 189;
    } else if (a_0 == ${jackal}) {
        return 190;
    } else if (a_0 == ${kuruma}) {
        return 180;
    } else if (a_0 == ${kuruma2}) {
        return 181;
    } else if (a_0 == ${landstalker}) {
        return 191;
    } else if (a_0 == ${mesa3}) {
        return 192;
    } else if (a_0 == ${nemesis}) {
        return 193;
    } else if (a_0 == ${oracle}) {
        return 194;
    } else if (a_0 == ${rumpo}) {
        return 195;
    } else if (a_0 == ${schafter2}) {
        return 196;
    } else if (a_0 == ${seminole}) {
        return 197;
    } else if (a_0 == ${surge}) {
        return 198;
    } else if (a_0 == ${dodo}) {
        return 199;
    } else if (a_0 == 0x49863e9c) {
        return 200;
    } else if (a_0 == ${submersible2}) {
        return 201;
    } else if (a_0 == ${blista2}) {
        return 202;
    } else if (a_0 == ${stalion}) {
        return 203;
    } else if (a_0 == 0x2b26f456) {
        return 204;
    } else if (a_0 == 0xec8f7094) {
        return 205;
    } else if (a_0 == ${stalion2}) {
        return 206;
    } else if (a_0 == ${dominator2}) {
        return 207;
    } else if (a_0 == ${gauntlet2}) {
        return 208;
    } else if (a_0 == ${buffalo3}) {
        return 209;
    } else if (a_0 == ${slamvan}) {
        return 210;
    } else if (a_0 == ${ratloader2}) {
        return 211;
    } else if (a_0 == ${jester2}) {
        return 212;
    } else if (a_0 == ${massacro2}) {
        return 213;
    } else if (a_0 == 0xa29d6d10) {
        return 214;
    } else if (a_0 == 0xb79f589e) {
        return 215;
    } else if (a_0 == 0x767164d6) {
        return 216;
    } else if (a_0 == 0x4019cb4c) {
        return 217;
    } else if (a_0 == 0xe2504942) {
        return 218;
    } else if (a_0 == 0x5e4327c8) {
        return 219;
    }
    return -1;
}

auto sub_6800(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11) {
    if (!NETWORK::CAN_REGISTER_MISSION_VEHICLES(1)) {
        return 0;
    }
    if (a_B) {
        GAMEPLAY::CLEAR_AREA_OF_VEHICLES(a_2, 1.0, 0, 0, 1, 1, 1);
    }
    v_E = VEHICLE::CREATE_VEHICLE(a_1, a_2, a_5, a_7, a_6);
    a_0 = NETWORK::VEH_TO_NET(v_E);
    if (NETWORK::NETWORK_DOES_NETWORK_ID_EXIST(a_0)) {
        ENTITY::_3910051CCECDB00C(v_E, a_A);
        if (NETWORK::_C7827959479DCC78(v_E)) {
            if (a_8) {
                NETWORK::SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(a_0, 1);
            } else { 
                NETWORK::SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(a_0, 0);
            }
        }
        VEHICLE::SET_VEHICLE_IS_STOLEN(v_E, a_9);
        return 1;
    }
    return 0;
}

auto sub_6883(auto a_0) {
    if (a_0 == 0) {
        return 1;
    }
    STREAMING::REQUEST_MODEL(a_0);
    return STREAMING::HAS_MODEL_LOADED(a_0);
}

auto sub_68a1(auto a_0, auto a_1, auto a_2) {
    return sub_68b5(1, a_0, 1, a_1, a_2);
}

auto sub_68b5(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (!GAMEPLAY::IS_BIT_SET(g_146527, 0)) {
        return 0;
    }
    if ((a_2 && (!a_3)) && (a_1 <= (sub_6a95(a_0) - sub_69fe(a_0, 0)))) {
        return 1;
    } else { 
        if (a_3) {
            if (a_2) {
                v_7 = a_1 - sub_69fe(a_0, 0);
            } else { 
                v_7 = a_1;
            }
            v_8 = sub_6a95(a_0) - sub_69b8(a_0);
        } else { 
            if (a_2) {
                v_7 = a_1 - sub_69fe(a_0, 0);
            } else { 
                v_7 = a_1;
            }
            v_8 = sub_6a95(a_0) - sub_69fe(a_0, 1);
        }
        if ((!a_4) && (g_182604[PLAYER::PLAYER_ID()/*324*/] != 3)) {
            v_8 -= sub_697e(a_0);
        }
        if (v_7 < v_8) {
            return 1;
        }
    }
    return 0;
}

auto sub_697e(auto a_0) {
    switch (a_0) {
    case 0:
        return 10;
        break;
    case 1:
        return 10;
        break;
    case 2:
        return 10;
        break;
    }
    return 0;
}

auto sub_69b8(auto a_0) {
    switch (a_0) {
    case 0:
        return g_146527._f1;
        break;
    case 1:
        return g_146527._f2;
        break;
    case 2:
        return g_146527._f3;
        break;
    }
    return 0;
}

auto sub_69fe(auto a_0, auto a_1) {
    v_4 = PLAYER::PLAYER_ID();
    switch (a_0) {
    case 0:
        if (!NETWORK::NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT()) {
            return g_24D5B9[v_4/*254*/]._fCE;
        } else { 
            return NETWORK::GET_NUM_RESERVED_MISSION_PEDS(!a_1);
        }
        break;
    case 1:
        if (!NETWORK::NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT()) {
            return g_24D5B9[v_4/*254*/]._fCF;
        } else { 
            return NETWORK::GET_NUM_RESERVED_MISSION_VEHICLES(!a_1);
        }
        break;
    case 2:
        if (!NETWORK::NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT()) {
            return g_24D5B9[v_4/*254*/]._fD0;
        } else { 
            return NETWORK::GET_NUM_RESERVED_MISSION_OBJECTS(!a_1);
        }
        break;
    }
    return 0;
}

auto sub_6a95(auto a_0) {
    switch (a_0) {
    case 0:
        return g_14652F;
        break;
    case 1:
        return g_146530;
        break;
    case 2:
        return g_146531;
        break;
    }
    return 0;
}

void sub_6ad5() {
    v_3 = 0;
    v_4 = 0;
    if (GAMEPLAY::IS_BIT_SET(g_24F57C._fCCB, 7)) {
        v_2 = sub_58a2(g_24F57C._fCCC);
        v_4 = 1;
        v_3 = 1;
    } else if (GAMEPLAY::IS_BIT_SET(g_24F57C._fCCB, 3)) {
        v_2 = 0;
        v_3 = 1;
    } else if (GAMEPLAY::IS_BIT_SET(g_24F57C._fCCB, 4)) {
        v_2 = 1;
        v_3 = 1;
    } else if (GAMEPLAY::IS_BIT_SET(g_24F57C._fCCB, 5)) {
        v_2 = 2;
        v_3 = 1;
    } else if (GAMEPLAY::IS_BIT_SET(g_24F57C._fCCB, 6)) {
        v_2 = 3;
        v_3 = 1;
    }
    if (v_3) {
        v_A = PLAYER::PLAYER_ID();
        if (v_3) {
            for (v_8 = 0; v_8 < 5; v_8 += 1) {
                if (v_3) {
                    if (!GAMEPLAY::IS_BIT_SET(l_E3[v_A/*30*/]._f5[v_8/*4*/]._f1, 1)) {
                        if (GAMEPLAY::IS_BIT_SET(l_E3[v_A/*30*/]._f5[v_8/*4*/]._f1, 0)) {
                            sub_1016(v_8);
                        }
                        sub_c66(0, 1);
                        l_4AC._f2 = v_8;
                        v_3 = 0;
                    }
                }
            }
        }
        v_B = 0;
        if (l_4AC._f2 != -1) {
            v_C = -1;
            v_D = 0;
            for (v_9 = 0; v_9 < 55; v_9 += 1) {
                if (!sub_9c70(v_9)) {
                    v_E = g_24F57C._fCCC == ${hydra};
                    if (sub_8dc4(v_9, v_2) || (v_E && sub_8dc4(v_9, 1))) {
                        if (sub_8da3(PLAYER::PLAYER_ID(), v_9) || v_4) {
                            if (sub_8d6e(v_9) || (!v_4)) {
                                v_D = 0;
                                if (v_4) {
                                    v_D = g_24F57C._fCCC;
                                } else { 
                                    v_D = sub_7e10(PLAYER::PLAYER_ID(), v_9);
                                }
                                if (v_D != 0) {
                                    if ((!GAMEPLAY::IS_BIT_SET(g_24F57C._fCCB, 5)) || sub_7ddc(v_D)) {
                                        if ((!sub_7db6(v_D)) || sub_7d99(v_9)) {
                                            if ((!sub_7c93(v_D)) || sub_7102(v_9)) {
                                                if (sub_70b6(v_9, v_D)) {
                                                    if (v_C == -1) {
                                                        v_C = v_9;
                                                        v_B = v_D;
                                                    } else { 
                                                        if (sub_7076(PLAYER::PLAYER_ID(), 1) && (g_182604[v_A/*324*/]._fEB._f6 > -1)) {
                                                            v_5/*{3}*/ = g_1001A3[g_182604[v_A/*324*/]._fEB._f6/*1425*/]._f3[0/*3*/];
                                                        } else { 
                                                            v_5/*{3}*/ = ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0);
                                                        }
                                                        if (SYSTEM::VDIST2(v_5, sub_5182(v_9)) < SYSTEM::VDIST2(v_5, sub_5182(v_C))) {
                                                            v_C = v_9;
                                                            v_B = v_D;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if (v_C != -1) {
                l_4AC._f3 = v_C;
                l_4AC._f5 = l_580;
                GAMEPLAY::SET_BIT(&l_4AC, 0);
                l_4AC._fB = v_2;
                l_4AC._fC = v_B;
                if (v_4) {
                    GAMEPLAY::SET_BIT(&l_4AC, 6);
                }
                v_3 = 0;
            } else { 
                v_3 = 1;
            }
        }
        if (GAMEPLAY::IS_BIT_SET(l_4AC, 6)) {
            GAMEPLAY::SET_BIT(&g_24F57C._fCCB, 1);
            GAMEPLAY::SET_BIT(&g_24F57C._fCCB, 2);
        } else { 
            GAMEPLAY::SET_BIT(&g_24F57C._fCCB, 1);
            if (!v_3) {
                if (v_B != 0) {
                    g_24F57C._fCCC = v_B;
                    GAMEPLAY::SET_BIT(&g_24F57C._fCCB, 2);
                    sub_6df5(sub_6fd5(v_2, 1), 1);
                }
            }
        }
    }
}

auto sub_6df5(auto a_0, auto a_1) {
    v_4 = -1;
    UI::_SET_NOTIFICATION_TEXT_ENTRY(a_0);
    v_4 = UI::_DRAW_NOTIFICATION(0, 1);
    sub_6e21(0, a_0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0);
    return v_4;
}

void sub_6e21(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11) {
    if (((!sub_6fc4()) || (!NETWORK::NETWORK_IS_ACTIVITY_SESSION())) || (!sub_a49(PLAYER::PLAYER_ID(), 0))) {
        return ;
    }
    v_E = sub_6f29(a_2);
    if ((v_E >= 0) && (v_E < 5)) {
        g_19D2F5._f5[v_E/*53*/] = a_0;
        g_19D2F5._f5[v_E/*53*/]._f1 = a_2;
        g_19D2F5._f5[v_E/*53*/]._f8/*"16"*/ = a_1;
        g_19D2F5._f5[v_E/*53*/]._f2[0/*1*/] = a_4;
        g_19D2F5._f5[v_E/*53*/]._f2[1/*1*/] = a_5;
        g_19D2F5._f5[v_E/*53*/]._f2[2/*1*/] = a_6;
        g_19D2F5._f5[v_E/*53*/]._f7 = a_7;
        g_19D2F5._f5[v_E/*53*/]._f6 = a_8;
        g_19D2F5._f5[v_E/*53*/]._fC/*"64"*/ = a_3;
        g_19D2F5._f5[v_E/*53*/]._f1C[0/*6*/]/*"24"*/ = a_9;
        g_19D2F5._f5[v_E/*53*/]._f1C[1/*6*/]/*"24"*/ = a_A;
        g_19D2F5._f5[v_E/*53*/]._f1C[2/*6*/]/*"24"*/ = a_B;
    }
}

auto sub_6f29(auto a_0) {
    for (v_3 = 0; v_3 <= (g_19D2F5 - 1); v_3 += 1) {
        if (a_0 > g_19D2F5._f5[v_3/*53*/]._f1) {
            sub_6f8b(v_3);
            return v_3;
        }
    }
    g_19D2F5 += 1;
    if (g_19D2F5 > 5) {
        g_19D2F5 = 5;
        return g_19D2F5;
    } else { 
        return g_19D2F5 - 1;
    }
}

void sub_6f8b(auto a_0) {
    for (v_3 = 4; v_3 >= (a_0 + 1); v_3 += -1) {
        g_19D2F5._f5[v_3/*53*/]/*{53}*/ = g_19D2F5._f5[v_3 - 1/*53*/];
    }
}

auto sub_6fc4() {
    return DLC2::IS_DLC_PRESENT(0x96f02ee6);
}

auto sub_6fd5(auto a_0, auto a_1) {
    if (a_1) {
        switch (a_0) {
        case 0:
            return "VS_TCK_10";
            break;
        case 1:
            return "VS_TCK_11";
            break;
        case 2:
            return "VS_TCK_12";
            break;
        case 3:
            return "VS_TCK_13";
            break;
        }
    } else { 
        switch (a_0) {
        case 0:
            return "VS_TCK_00";
            break;
        case 1:
            return "VS_TCK_01";
            break;
        case 2:
            return "VS_TCK_02";
            break;
        case 3:
            return "VS_TCK_03";
            break;
        }
    }
    return "";
}

auto sub_7076(auto a_0, auto a_1) {
    if (GAMEPLAY::IS_BIT_SET(g_182604[a_0/*324*/]._fEB._f4, 0)) {
        return 1;
    }
    if (a_1) {
        if (GAMEPLAY::IS_BIT_SET(g_182604[a_0/*324*/]._fEB._f4, 1)) {
            return 1;
        }
    }
    return 0;
}

auto sub_70b6(auto a_0, auto a_1) {
    switch (a_0) {
    case 0:
        if ((a_1 != ${seashark}) && (a_1 != ${seashark2})) {
            return 0;
        }
        break;
    case 38:
        if (a_1 == ${rhino}) {
            return 0;
        }
        break;
    }
    return 1;
}

auto sub_7102(auto a_0) {
    for (v_3 = 0; v_3 < sub_79b8(a_0); v_3 += 1) {
        if (sub_7131(a_0, v_3)) {
            return 1;
        }
    }
    return 0;
}

auto sub_7131(auto a_0, auto a_1) {
    switch (a_0) {
    case 0:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        }
        break;
    case 1:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 1;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 1;
            break;
        case 4:
            return 1;
            break;
        }
        break;
    case 2:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 1;
            break;
        }
        break;
    case 3:
        switch (a_1) {
        case 0:
            return 1;
            break;
        }
        break;
    case 4:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 1;
            break;
        case 2:
            return 1;
            break;
        }
        break;
    case 5:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 1;
            break;
        case 2:
            return 1;
            break;
        }
        break;
    case 6:
        switch (a_1) {
        case 0:
            return 1;
            break;
        }
        break;
    case 7:
        switch (a_1) {
        case 0:
            return 1;
            break;
        }
        break;
    case 8:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 1;
            break;
        }
        break;
    case 9:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 1;
            break;
        case 2:
            return 1;
            break;
        }
        break;
    case 10:
        switch (a_1) {
        case 0:
            return 1;
            break;
        }
        break;
    case 11:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        }
        break;
    case 12:
        switch (a_1) {
        case 0:
            return 1;
            break;
        }
        break;
    case 13:
        switch (a_1) {
        case 0:
            return 1;
            break;
        }
        break;
    case 14:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        }
        break;
    case 15:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        }
        break;
    case 16:
        switch (a_1) {
        case 0:
            return 1;
            break;
        }
        break;
    case 17:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 1;
            break;
        }
        break;
    case 18:
        switch (a_1) {
        case 0:
            return 1;
            break;
        }
        break;
    case 19:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 1;
            break;
        case 2:
            return 1;
            break;
        }
        break;
    case 20:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 1;
            break;
        }
        break;
    case 21:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 0;
            break;
        }
        break;
    case 22:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 1;
            break;
        }
        break;
    case 23:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 1;
            break;
        }
        break;
    case 24:
        switch (a_1) {
        case 0:
            return 1;
            break;
        }
        break;
    case 25:
        switch (a_1) {
        case 0:
            return 1;
            break;
        }
        break;
    case 26:
        switch (a_1) {
        case 0:
            return 1;
            break;
        }
        break;
    case 27:
        switch (a_1) {
        case 0:
            return 1;
            break;
        }
        break;
    case 28:
        switch (a_1) {
        case 0:
            return 1;
            break;
        }
        break;
    case 29:
        switch (a_1) {
        case 0:
            return 1;
            break;
        }
        break;
    case 30:
        switch (a_1) {
        case 0:
            return 1;
            break;
        }
        break;
    case 31:
        switch (a_1) {
        case 0:
            return 1;
            break;
        }
        break;
    case 32:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        }
        break;
    case 33:
        switch (a_1) {
        case 0:
            return 0;
            break;
        }
        break;
    case 34:
        switch (a_1) {
        case 0:
            return 1;
            break;
        }
        break;
    case 35:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 1;
            break;
        }
        break;
    case 36:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 1;
            break;
        case 4:
            return 1;
            break;
        }
        break;
    case 37:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 1;
            break;
        }
        break;
    case 38:
        switch (a_1) {
        case 0:
            return 0;
            break;
        }
        break;
    case 39:
        switch (a_1) {
        case 0:
            return 0;
            break;
        }
        break;
    case 40:
        switch (a_1) {
        case 0:
            return 0;
            break;
        }
        break;
    case 41:
        switch (a_1) {
        case 0:
            return 1;
            break;
        }
        break;
    case 42:
        switch (a_1) {
        case 0:
            return 1;
            break;
        }
        break;
    case 43:
        switch (a_1) {
        case 0:
            return 1;
            break;
        }
        break;
    case 44:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 1;
            break;
        }
        break;
    case 45:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 1;
            break;
        }
        break;
    case 46:
        switch (a_1) {
        case 0:
            return 1;
            break;
        }
        break;
    case 47:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 1;
            break;
        case 2:
            return 1;
            break;
        }
        break;
    case 48:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 1;
            break;
        }
        break;
    case 49:
        switch (a_1) {
        case 0:
            return 1;
            break;
        }
        break;
    case 50:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 1;
            break;
        }
        break;
    case 51:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 1;
            break;
        }
        break;
    case 52:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 1;
            break;
        }
        break;
    case 53:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        }
        break;
    case 54:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 1;
            break;
        case 2:
            return 1;
            break;
        }
        break;
    }
    return 0;
}

auto sub_79b8(auto a_0) {
    switch (a_0) {
    case 0:
        return 3;
        break;
    case 1:
        return 7;
        break;
    case 2:
        return 2;
        break;
    case 3:
        return 3;
        break;
    case 4:
        return 4;
        break;
    case 5:
        return 3;
        break;
    case 6:
        return 1;
        break;
    case 7:
        return 1;
        break;
    case 8:
        return 2;
        break;
    case 9:
        return 3;
        break;
    case 10:
        return 2;
        break;
    case 11:
        return 2;
        break;
    case 12:
        return 2;
        break;
    case 13:
        return 2;
        break;
    case 14:
        return 3;
        break;
    case 15:
        return 2;
        break;
    case 16:
        return 1;
        break;
    case 17:
        return 2;
        break;
    case 18:
        return 1;
        break;
    case 19:
        return 4;
        break;
    case 20:
        return 2;
        break;
    case 21:
        return 2;
        break;
    case 22:
        return 2;
        break;
    case 23:
        return 3;
        break;
    case 24:
        return 1;
        break;
    case 25:
        return 1;
        break;
    case 26:
        return 1;
        break;
    case 27:
        return 1;
        break;
    case 28:
        return 1;
        break;
    case 29:
        return 1;
        break;
    case 30:
        return 1;
        break;
    case 31:
        return 1;
        break;
    case 32:
        return 4;
        break;
    case 33:
        return 2;
        break;
    case 34:
        return 2;
        break;
    case 35:
        return 3;
        break;
    case 36:
        return 5;
        break;
    case 37:
        return 2;
        break;
    case 38:
        return 1;
        break;
    case 39:
        return 1;
        break;
    case 40:
        return 1;
        break;
    case 41:
        return 1;
        break;
    case 42:
        return 1;
        break;
    case 43:
        return 1;
        break;
    case 44:
        return 2;
        break;
    case 45:
        return 2;
        break;
    case 46:
        return 1;
        break;
    case 47:
        return 3;
        break;
    case 48:
        return 2;
        break;
    case 49:
        return 1;
        break;
    case 50:
        return 2;
        break;
    case 51:
        return 2;
        break;
    case 52:
        return 2;
        break;
    case 53:
        return 3;
        break;
    case 54:
        return 3;
        break;
    }
    return 0;
}

auto sub_7c93(auto a_0) {
    if ((((((((((((((((((a_0 == ${stunt}) || (a_0 == ${cuban800})) || (a_0 == ${duster})) || (a_0 == ${frogger})) || (a_0 == ${maverick})) || (a_0 == ${marquis})) || (a_0 == ${jetmax})) || (a_0 == ${squalo})) || (a_0 == ${tropic})) || (a_0 == ${seashark})) || (a_0 == ${submersible})) || (a_0 == ${buzzard})) || (a_0 == ${suntrap})) || (a_0 == ${crusader})) || (a_0 == ${annihilator})) || (a_0 == ${mammatus})) || (a_0 == ${stretch})) || (a_0 == ${barracks})) {
        return 0;
    }
    return 1;
}

auto sub_7d99(auto a_0) {
    switch (a_0) {
    case 3:
        return 0;
        break;
    }
    return 1;
}

auto sub_7db6(auto a_0) {
    if ((a_0 == ${submersible}) || (a_0 == ${submersible2})) {
        return 1;
    }
    return 0;
}

auto sub_7ddc(auto a_0) {
    if (((a_0 == ${riot}) || (a_0 == ${bulldozer})) || (a_0 == ${blazer})) {
        return 0;
    }
    return 1;
}

auto sub_7e10(auto a_0, auto a_1) {
    GAMEPLAY::SET_RANDOM_SEED(GAMEPLAY::GET_GAME_TIMER());
    return sub_7e37(a_1, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, sub_8765(sub_8c0c(a_0), a_1)));
}

auto sub_7e37(auto a_0, auto a_1) {
    switch (a_0) {
    case 0:
        switch (a_1) {
        case 0:
            return ${seashark};
            break;
        }
        break;
    case 1:
        switch (a_1) {
        case 0:
            return ${seashark};
            break;
        case 1:
            return ${jetmax};
            break;
        case 2:
            return ${submersible};
            break;
        case 3:
            return ${marquis};
            break;
        }
        break;
    case 2:
        switch (a_1) {
        case 0:
            return ${seashark};
            break;
        }
        break;
    case 3:
        switch (a_1) {
        case 0:
            return ${seashark};
            break;
        case 1:
            return ${jetmax};
            break;
        }
        break;
    case 4:
        switch (a_1) {
        case 0:
            return ${maverick};
            break;
        case 1:
            return ${frogger};
            break;
        case 2:
            return ${annihilator};
            break;
        }
        break;
    case 5:
        switch (a_1) {
        case 0:
            return ${maverick};
            break;
        case 1:
            return ${cargobob};
            break;
        case 2:
            return ${frogger};
            break;
        case 3:
            return ${annihilator};
            break;
        case 4:
            return ${buzzard};
            break;
        }
        break;
    case 6:
        switch (a_1) {
        case 0:
            return ${maverick};
            break;
        case 1:
            return ${annihilator};
            break;
        case 2:
            return ${buzzard};
            break;
        }
        break;
    case 7:
        switch (a_1) {
        case 0:
            return ${maverick};
            break;
        case 1:
            return ${cargobob};
            break;
        case 2:
            return ${frogger};
            break;
        case 3:
            return ${annihilator};
            break;
        case 4:
            return ${buzzard};
            break;
        }
        break;
    case 8:
        switch (a_1) {
        case 0:
            return ${mammatus};
            break;
        case 1:
            return ${velum};
            break;
        case 2:
            return ${titan};
            break;
        case 3:
            return ${stunt};
            break;
        case 4:
            return ${luxor};
            break;
        }
        break;
    case 9:
        switch (a_1) {
        case 0:
            return ${barracks};
            break;
        }
        break;
    case 10:
        switch (a_1) {
        case 0:
            return ${submersible};
            break;
        }
        break;
    case 11:
        switch (a_1) {
        case 0:
            return ${barracks};
            break;
        }
        break;
    case 12:
        switch (a_1) {
        case 0:
            return ${barracks};
            break;
        }
        break;
    case 13:
        switch (a_1) {
        case 0:
            return ${barracks};
            break;
        }
        break;
    case 14:
        switch (a_1) {
        case 0:
            return ${mammatus};
            break;
        case 1:
            return ${velum};
            break;
        case 2:
            return ${stunt};
            break;
        }
        break;
    case 15:
        switch (a_1) {
        case 0:
            return ${mammatus};
            break;
        case 1:
            return ${velum};
            break;
        case 2:
            return ${stunt};
            break;
        }
        break;
    case 16:
        switch (a_1) {
        case 0:
            return ${cargobob};
            break;
        case 1:
            return ${frogger};
            break;
        }
        break;
    case 17:
        switch (a_1) {
        case 0:
            return ${mammatus};
            break;
        case 1:
            return ${velum};
            break;
        case 2:
            return ${stunt};
            break;
        }
        break;
    case 18:
        switch (a_1) {
        case 0:
            return ${blazer};
            break;
        }
        break;
    case 19:
        switch (a_1) {
        case 0:
            return ${blazer};
            break;
        }
        break;
    case 20:
        switch (a_1) {
        case 0:
            return ${blazer};
            break;
        }
        break;
    case 21:
        switch (a_1) {
        case 0:
            return ${blazer};
            break;
        }
        break;
    case 22:
        switch (a_1) {
        case 0:
            return ${jetmax};
            break;
        }
        break;
    case 23:
        switch (a_1) {
        case 0:
            return ${jetmax};
            break;
        }
        break;
    case 24:
        switch (a_1) {
        case 0:
            return ${cargobob};
            break;
        case 1:
            return ${buzzard};
            break;
        }
        break;
    case 25:
        switch (a_1) {
        case 0:
            return ${riot};
            break;
        }
        break;
    case 26:
        switch (a_1) {
        case 0:
            return ${riot};
            break;
        }
        break;
    case 27:
        switch (a_1) {
        case 0:
            return ${riot};
            break;
        }
        break;
    case 28:
        switch (a_1) {
        case 0:
            return ${riot};
            break;
        }
        break;
    case 29:
        switch (a_1) {
        case 0:
            return ${submersible};
            break;
        }
        break;
    case 30:
        switch (a_1) {
        case 0:
            return ${seashark};
            break;
        case 1:
            return ${submersible};
            break;
        case 2:
            return ${marquis};
            break;
        }
        break;
    case 31:
        switch (a_1) {
        case 0:
            return ${titan};
            break;
        }
        break;
    case 32:
        switch (a_1) {
        case 0:
            return ${bulldozer};
            break;
        }
        break;
    case 33:
        switch (a_1) {
        case 0:
            return ${bulldozer};
            break;
        }
        break;
    case 34:
        switch (a_1) {
        case 0:
            return ${bulldozer};
            break;
        }
        break;
    case 35:
        switch (a_1) {
        case 0:
            return ${bulldozer};
            break;
        }
        break;
    case 36:
        switch (a_1) {
        case 0:
            return ${lazer};
            break;
        }
        break;
    case 37:
        switch (a_1) {
        case 0:
            return ${stretch};
            break;
        }
        break;
    case 38:
        switch (a_1) {
        case 0:
            return ${stretch};
            break;
        }
        break;
    case 39:
        switch (a_1) {
        case 0:
            return ${stretch};
            break;
        }
        break;
    case 40:
        switch (a_1) {
        case 0:
            return ${stretch};
            break;
        }
        break;
    case 41:
        switch (a_1) {
        case 0:
            return ${marquis};
            break;
        }
        break;
    case 42:
        switch (a_1) {
        case 0:
            return ${marquis};
            break;
        }
        break;
    case 43:
        switch (a_1) {
        case 0:
            return ${luxor};
            break;
        }
        break;
    case 44:
        switch (a_1) {
        case 0:
            return ${maverick};
            break;
        case 1:
            return ${cargobob};
            break;
        case 2:
            return ${frogger};
            break;
        case 3:
            return ${annihilator};
            break;
        case 4:
            return ${buzzard};
            break;
        }
        break;
    case 45:
        switch (a_1) {
        case 0:
            return ${blazer};
            break;
        case 1:
            return ${bulldozer};
            break;
        }
        break;
    case 46:
        switch (a_1) {
        case 0:
            return ${barracks};
            break;
        }
        break;
    case 47:
        switch (a_1) {
        case 0:
            return ${barracks};
            break;
        case 1:
            return ${blazer};
            break;
        }
        break;
    case 48:
        switch (a_1) {
        case 0:
            return ${seashark};
            break;
        case 1:
            return ${jetmax};
            break;
        }
        break;
    case 49:
        switch (a_1) {
        case 0:
            return ${seashark};
            break;
        }
        break;
    case 50:
        switch (a_1) {
        case 0:
            return ${maverick};
            break;
        case 1:
            return ${annihilator};
            break;
        }
        break;
    }
    return 0;
}

auto sub_8765(auto a_0, auto a_1) {
    v_4 = 0;
    for (v_5 = 0; v_5 < sub_8931(a_1); v_5 += 1) {
        if (a_0 >= sub_87a0(sub_7e37(a_1, v_5))) {
            v_4 += 1;
        }
    }
    return v_4;
}

auto sub_87a0(auto a_0) {
    for (v_3 = 0; v_3 < 8000; v_3 += 1) {
        if (sub_87cd(v_3) == a_0) {
            return v_3;
        }
    }
    return 0;
}

auto sub_87cd(auto a_0) {
    switch (a_0) {
    case 5:
        return ${seashark};
        break;
    case 7:
        return ${maverick};
        break;
    case 10:
        return ${barracks};
        break;
    case 12:
        return ${mammatus};
        break;
    case 15:
        return ${blazer};
        break;
    case 17:
        return ${jetmax};
        break;
    case 20:
        return ${velum};
        break;
    case 22:
        return ${cargobob};
        break;
    case 25:
        return ${riot};
        break;
    case 27:
        return ${submersible};
        break;
    case 30:
        return ${frogger};
        break;
    case 32:
        return ${titan};
        break;
    case 35:
        return ${bulldozer};
        break;
    case 37:
        return ${annihilator};
        break;
    case 40:
        return ${stunt};
        break;
    case 42:
        return ${buzzard};
        break;
    case 44:
        return ${lazer};
        break;
    case 46:
        return ${stretch};
        break;
    case 48:
        return ${marquis};
        break;
    case 50:
        return ${luxor};
        break;
    }
    return 0;
}

auto sub_8931(auto a_0) {
    switch (a_0) {
    case 0:
        return 1;
        break;
    case 1:
        return 4;
        break;
    case 2:
        return 1;
        break;
    case 3:
        return 2;
        break;
    case 4:
        return 3;
        break;
    case 5:
        return 5;
        break;
    case 6:
        return 3;
        break;
    case 7:
        return 5;
        break;
    case 8:
        return 5;
        break;
    case 9:
        return 1;
        break;
    case 10:
        return 1;
        break;
    case 11:
        return 1;
        break;
    case 12:
        return 1;
        break;
    case 13:
        return 1;
        break;
    case 14:
        return 3;
        break;
    case 15:
        return 3;
        break;
    case 16:
        return 2;
        break;
    case 17:
        return 3;
        break;
    case 18:
        return 1;
        break;
    case 19:
        return 1;
        break;
    case 20:
        return 1;
        break;
    case 21:
        return 1;
        break;
    case 22:
        return 1;
        break;
    case 23:
        return 1;
        break;
    case 24:
        return 2;
        break;
    case 25:
        return 1;
        break;
    case 26:
        return 1;
        break;
    case 27:
        return 1;
        break;
    case 28:
        return 1;
        break;
    case 29:
        return 1;
        break;
    case 30:
        return 3;
        break;
    case 31:
        return 1;
        break;
    case 32:
        return 1;
        break;
    case 33:
        return 1;
        break;
    case 34:
        return 1;
        break;
    case 35:
        return 1;
        break;
    case 36:
        return 1;
        break;
    case 37:
        return 1;
        break;
    case 38:
        return 1;
        break;
    case 39:
        return 1;
        break;
    case 40:
        return 1;
        break;
    case 41:
        return 1;
        break;
    case 42:
        return 1;
        break;
    case 43:
        return 1;
        break;
    case 44:
        return 5;
        break;
    case 45:
        return 2;
        break;
    case 46:
        return 1;
        break;
    case 47:
        return 2;
        break;
    case 48:
        return 2;
        break;
    case 49:
        return 1;
        break;
    case 50:
        return 2;
        break;
    case 51:
        return 0;
        break;
    case 52:
        return 0;
        break;
    case 53:
        return 0;
        break;
    case 54:
        return 0;
        break;
    }
    return 0;
}

auto sub_8c0c(auto a_0) {
    v_3 = sub_8cec(a_0);
    if (v_3 < 0) {
        return 0;
    }
    return sub_8c2d(v_3, 0);
}

auto sub_8c2d(auto a_0, auto a_1) {
    if (a_1 == 0) {}
    v_5 = 8000;
    v_6 = 0;
    v_7 = (v_5 - v_6) / 2;
    for (v_4 = 0; v_4 <= 100; v_4 += 1) {
        if (v_5 == v_6) {
            v_4 = 8000;
            if (v_7 == 0) {
                v_7 = 1;
            }
            return v_7;
        }
        if (g_42099[v_7/*1*/] == a_0) {
            v_5 = v_7;
            v_6 = v_7;
        } else if (g_42099[v_7/*1*/] < a_0) {
            if (v_6 == v_7) {
                v_6 += 1;
            } else { 
                v_6 = v_7;
            }
        } else if (v_5 == v_7) {
            v_5 -= 1;
        } else { 
            v_5 = v_7;
        }
        v_8 = ((SYSTEM::TO_FLOAT(v_5) - SYSTEM::TO_FLOAT(v_6)) / 2.0) + SYSTEM::TO_FLOAT(v_6);
        v_7 = SYSTEM::ROUND(v_8);
    }
    return 8000;
}

auto sub_8cec(auto a_0) {
    if (g_1406D3._f9 == 0) {
        if (a_0 > -1) {
            if (a_0 == PLAYER::PLAYER_ID()) {
                return g_146135[sub_d6b(-1)/*1*/];
            } else if (sub_8d49(a_0)) {
                return g_182604[a_0/*324*/]._fB4._f1;
            }
        }
    } else { 
        return g_146135[sub_d6b(-1)/*1*/];
    }
    return 0;
}

auto sub_8d49(auto a_0) {
    if (a_0 == -1) {
        return 0;
    } else { 
        return GAMEPLAY::IS_BIT_SET(g_24F57C._f1, a_0);
    }
    return 1;
}

auto sub_8d6e(auto a_0) {
    switch (a_0) {
    case 25:
    case 26:
    case 27:
    case 28:
    case 36:
        return 0;
        break;
    }
    return 1;
}

auto sub_8da3(auto a_0, auto a_1) {
    if (sub_8c0c(a_0) >= sub_87a0(sub_7e37(a_1, 0))) {
        return 1;
    }
    return 0;
}

auto sub_8dc4(auto a_0, auto a_1) {
    switch (a_0) {
    case 0:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 1:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 2:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 3:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 4:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 1;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 5:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 1;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 6:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 1;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 7:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 1;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 8:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 1;
            break;
        }
        break;
    case 9:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 10:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 11:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 12:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 13:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 14:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 1;
            break;
        }
        break;
    case 15:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 1;
            break;
        }
        break;
    case 16:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 1;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 17:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 1;
            break;
        }
        break;
    case 18:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 19:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 20:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 21:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 22:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 23:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 24:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 1;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 25:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 26:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 27:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 28:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 29:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 30:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 31:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 1;
            break;
        }
        break;
    case 32:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 33:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 34:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 35:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 36:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 1;
            break;
        }
        break;
    case 37:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 38:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 39:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 40:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 41:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 42:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 43:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 1;
            break;
        }
        break;
    case 44:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 1;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 45:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 46:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 47:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 48:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 49:
        switch (a_1) {
        case 0:
            return 1;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 50:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 1;
            break;
        case 2:
            return 0;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 51:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 52:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 53:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    case 54:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 0;
            break;
        }
        break;
    }
    return 0;
}

auto sub_9c70(auto a_0) {
    v_3 = PLAYER::PLAYER_ID();
    return GAMEPLAY::IS_BIT_SET(l_E3[v_3/*30*/]._f2[sub_1133(a_0)/*1*/], sub_1126(a_0));
}

void sub_9c98() {
    if (g_24F57C._fCCA != 0) {
        v_3 = PLAYER::PLAYER_ID();
        for (v_2 = 0; v_2 < 5; v_2 += 1) {
            if (GAMEPLAY::IS_BIT_SET(g_24F57C._fCCA, v_2)) {
                if (GAMEPLAY::IS_BIT_SET(l_E3[v_3/*30*/]._f5[v_2/*4*/]._f1, 0)) {
                    if (!GAMEPLAY::IS_BIT_SET(l_E3[v_3/*30*/]._f5[v_2/*4*/]._f1, 3)) {
                        GAMEPLAY::SET_BIT(&l_E3[v_3/*30*/]._f5[v_2/*4*/]._f1, 3);
                    }
                    l_E3[v_3/*30*/]._f5[v_2/*4*/]._f2 += 1;
                    if (l_E3[v_3/*30*/]._f5[v_2/*4*/]._f2 >= 2) {
                        if (GAMEPLAY::IS_BIT_SET(l_E3[v_3/*30*/]._f5[v_2/*4*/]._f1, 1)) {
                            if (GAMEPLAY::IS_BIT_SET(l_4AC, 6)) {
                                GAMEPLAY::SET_BIT(&l_4A5, 0);
                                sub_a65f(sub_a6f3(22), 1, 0, 0.0);
                                sub_9e1a(sub_a6f3(22), 5, 2, 1);
                            } else { 
                                sub_6df5(sub_6fd5(l_4AC._fB, 0), 1);
                                sub_9e1a(sub_9dc2(l_4AC._fB), 5, 2, 1);
                            }
                            sub_c66(0, 1);
                        }
                        sub_1016(v_2);
                    }
                }
                GAMEPLAY::CLEAR_BIT(&g_24F57C._fCCA, v_2);
            }
        }
    }
}

auto sub_9dc2(auto a_0) {
    switch (a_0) {
    case 0:
        return sub_a6f3(23);
        break;
    case 1:
        return sub_a6f3(24);
        break;
    case 2:
        return sub_a6f3(25);
        break;
    case 3:
        return sub_a6f3(26);
        break;
    }
    return 0;
}

void sub_9e1a(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6/*"16"*/ = sub_a5b0(a_1);
    v_A/*"16"*/ = sub_a51d(a_2);
    switch (a_1) {
    case 0:
        v_E = 0x4cbac3aa;
        break;
    case 1:
        v_E = 0x29358006;
        break;
    case 2:
        v_E = 0x5841cc24;
        break;
    case 3:
        v_E = 0x5a26eaef;
        break;
    case 4:
        v_E = 0x2183c4d7;
        break;
    case 5:
        v_E = 0xf6c6f8d3;
        break;
    case 6:
        v_E = 0xaec77375;
        break;
    case 7:
        v_E = 0x267cbc1b;
        break;
    case 8:
        v_E = 0x2dc5587f;
        break;
    case 9:
        v_E = 0x8a91e076;
        break;
    case 10:
        v_E = 0x2ad8ed30;
        break;
    case 11:
        v_E = 0x8b70731d;
        break;
    case 12:
        v_E = 0x3530c574;
        break;
    }
    if (sub_a509()) {
        sub_9f55(v_E, a_0, &v_F, a_3, a_3);
        g_26C240[v_F/*69*/]._f8._f2B/*{4}*/ = v_6;
        g_26C240[v_F/*69*/]._f8._f2F/*{4}*/ = v_A;
    } else { 
        NETWORKCASH::_F9C812CD7C46E817(a_0, &v_6, &v_A, a_3);
    }
}

void sub_9f55(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (!sub_a509()) {
        return ;
    }
    v_7 = 1;
    if (a_4) {
        v_7 = 4;
    } else if (a_3) {
        v_7 = 2;
    }
    switch (a_0) {
    case 0x8180486d:
    case 0x847b5e8a:
    case 0x8f9e64e9:
    case 0x92aeab9c:
    case 0x9defcb5b:
    case 0xad32107e:
    case 0xaef994e9:
    case 0xb3e76d2c:
    case 0xb62639d4:
    case 0xc571db3d:
    case 0xca5e1b40:
    case 0xcbbc5d1e:
    case 0xd30e80f5:
    case 0xd80064a4:
    case 0xd86d0371:
    case 0xdb72fd6e:
    case 0xdd16a585:
    case 0xe1286116:
    case 0xe13b1f5a:
    case 0xe7ba9a2c:
    case 0xf2beff3e:
    case 0xf54343ef:
    case 0xfa3e19a3:
    case 0x40e0f34:
    case 0x108cd6ee:
    case 0x10e398b4:
    case 0x11611c06:
    case 0x15dafb97:
    case 0x1b14f96b:
    case 0x26c85ca3:
    case 0x2a6b291e:
    case 0x3cf098e4:
    case 0x3dc70f44:
    case 0x3f79e8b3:
    case 0x421452ff:
    case 0x45f48c05:
    case 0x467e2916:
    case 0x48090eba:
    case 0x5a58e3bd:
    case 0x5d40f1f0:
    case 0x601646d2:
    case 0x61f840eb:
    case 0x62a4b6cc:
    case 0x6597c63c:
    case 0x6da50854:
    case 0x7323dab3:
    case 0x73af3590:
    case 0x741dadd0:
    case 0x79d2be32:
    case 0x7f096f7d:
        if (a_1 > 0) {
            sub_a1ed(a_2, 0xbc537e0d, 0x2005d9a9, 0x57de404e, a_0, a_1, v_7, 7);
        }
        break;
    case 0x862fb02e:
    case 0x89ad02ce:
    case 0x8a91e076:
    case 0x8b70731d:
    case 0x8d682613:
    case 0xa174f633:
    case 0xaca75aae:
    case 0xaec77375:
    case 0xb77dd8b4:
    case 0xb94ddb9b:
    case 0xbcd304b8:
    case 0xbfcbe6b6:
    case 0xc2c5e339:
    case 0xc4f96e65:
    case 0xd89979ee:
    case 0xeaff75bd:
    case 0xf6c6f8d3:
    case 0xf97db87a:
    case 0xfc8d0020:
    case 0xfd389995:
    case 0xfe249573:
    case 0x16b1cde:
    case 0x129a5b6e:
    case 0x176d9d54:
    case 0x2183c4d7:
    case 0x2195c3d1:
    case 0x267cbc1b:
    case 0x29358006:
    case 0x2ad8ed30:
    case 0x2dc5587f:
    case 0x3530c574:
    case 0x381ae70b:
    case 0x4cbac3aa:
    case 0x4d8c639e:
    case 0x506a6af5:
    case 0x5841cc24:
    case 0x5a26eaef:
    case 0x628502b3:
    case 0x676706d3:
    case 0x6a22d039:
    case 0x762d6bf6:
        sub_a1ed(a_2, 0xbc537e0d, 0x562592bb, 0x57de404e, a_0, a_1, v_7, 7);
        break;
    }
}

auto sub_a1ed(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    v_A = 0;
    if (!sub_a509()) {
        v_A = 1;
    }
    if (!v_A) {
        if ((!UNK3::_B24F0944DA203D9E(sub_ad5())) || UNK3::_810E8431C0614BF9()) {
            g_26C40D = 1;
            return 0;
        }
        if (g_252B28) {
            if ((a_3 == 0x3fa29128) || (a_3 == 0xb2491b6e)) {
                g_26C40E = 1;
                return 0;
            }
        }
    }
    v_C = 0;
    for (v_B = 0; v_B < 5; v_B += 1) {
        if (g_26C240[v_B/*69*/]._f2 == 0) {
            v_C = 1;
        }
    }
    if (!v_C) {
        return 0;
    }
    a_0 = 5;
    v_D = 0x7fffffff;
    if (v_A || UNK3::_3C5FD37B5499582E(&v_D, a_3, a_4, a_2, a_5, a_6)) {
        if (v_A || UNK3::_39BE7CEA8D9CC8E6(v_D)) {
            a_0 = sub_a435(v_D, a_1, a_4, a_2, a_3, a_5, 0, a_6, a_7);
            if (v_A) {
                if (a_0 != -1) {
                    g_26C240[a_0/*69*/]._f3E = 1;
                }
            }
            g_26C40A = 1;
            return 1;
        }
    } else { 
        if ((a_7 & 2) != 0) {
            g_26C40C = 1;
            g_26C40F = a_4;
            g_26C411 = a_3;
            g_26C412 = 1;
            g_26C410 = a_5;
        }
        if ((a_7 & 8) != 0) {
            g_26C40F = a_4;
            g_26C411 = a_3;
            g_26C412 = 1;
            g_26C410 = a_5;
        }
        v_E = 0;
        if (v_E) {
            sub_a421(1, a_4);
            g_26C40C = 0;
        }
        if ((a_7 & 4) != 0) {
            sub_a361(-1, a_4, a_6, a_5, -1);
        }
    }
    return 0;
}

void sub_a361(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    switch (a_1) {
    case 0x6597c63c:
        GAMEPLAY::SET_BIT(&g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f79._f47, 0);
        break;
    }
    if (a_0 != -1) {
        sub_a398(a_0);
    }
}

void sub_a398(auto a_0) {
    v_3 = 0;
    if (!sub_a509()) {
        v_3 = 1;
    }
    if (a_0 != -1) {
        if (sub_a3f9(a_0)) {
            if (!v_3) {
                _350_$0000000000000000();
            }
        } else if (!v_3) {
            UNK3::_E2A99A9B524BEFFF(g_26C240[a_0/*69*/]);
        }
        asm .vardef<F> 4, "[{\"type\":\"field\",\"value\":[{\"offset\":0,\"value\":2147483647}]}]"
        g_26C240[a_0/*69*/]/*{69}*/ = v_4;
    }
}

auto sub_a3f9(auto a_0) {
    if ((a_0 >= 0) && (a_0 < 5)) {
        return g_26C240[a_0/*69*/]._f5 == 1;
    }
    return 0;
}

void sub_a421(auto a_0, auto a_1) {
    g_25300C = a_1;
    g_25300B = a_0;
}

auto sub_a435(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8) {
    v_B = 0;
    for (v_B = 0; v_B < 5; v_B += 1) {
        if (g_26C240[v_B/*69*/]._f2 == 0) {
            if (!sub_a509()) {
                a_0 = v_B + 900;
            }
            g_26C240[v_B/*69*/]._f2 = 1;
            g_26C240[v_B/*69*/]._f1 = a_5;
            g_26C240[v_B/*69*/]._f3 = a_1;
            g_26C240[v_B/*69*/]._f4 = a_2;
            g_26C240[v_B/*69*/]._f7 = a_3;
            g_26C240[v_B/*69*/]._f5 = 0;
            g_26C240[v_B/*69*/] = a_0;
            g_26C240[v_B/*69*/]._f6 = a_4;
            g_26C240[v_B/*69*/]._f41 = a_8;
            g_26C240[v_B/*69*/]._f40 = a_7;
            g_26C240[v_B/*69*/]._f44 = 0;
            g_26C40A = 0;
            if (a_6) {
                g_26C240[v_B/*69*/]._f5 = 1;
            }
            return v_B;
        }
    }
    return -1;
}

auto sub_a509() {
    if (GAMEPLAY::IS_PC_VERSION()) {
        return 1;
    }
    return 0;
}

auto sub_a51d(auto a_0) {
    switch (a_0) {
    case 0:
        return "NOTREACHTARGET";
        break;
    case 1:
        return "TARGET_ESCAPE";
        break;
    case 2:
        return "DELIVERY_FAIL";
        break;
    case 3:
        return "NOT_USED";
        break;
    case 4:
        return "TEAM_QUIT";
        break;
    case 5:
        return "SERVER_ERROR";
        break;
    case 6:
        return "RECEIVE_LJ_L";
        break;
    case 8:
        return "CHALLENGE_PLAYER_LEFT";
        break;
    }
    return "DEFAULT";
}

auto sub_a5b0(auto a_0) {
    switch (a_0) {
    case 0:
        return "BACKUP_VAGOS";
    case 1:
        return "BACKUP_LOST";
    case 2:
        return "BACKUP_FAMILIES";
    case 3:
        return "HIRE_MUGGER";
    case 4:
        return "HIRE_MERCENARY";
    case 5:
        return "BUY_CARDROPOFF";
    case 6:
        return "HELI_PICKUP";
    case 7:
        return "BOAT_PICKUP";
    case 8:
        return "CLEAR_WANTED";
    case 9:
        return "HEAD_2_HEAD";
    case 10:
        return "CHALLENGE";
    case 11:
        return "SHARE_LAST_JOB";
    }
    return "DEFAULT";
}

void sub_a65f(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_1 < 1) {
        a_1 = 1;
    }
    v_6 = a_0 * a_1;
    a_3 = 0.0;
    if (v_6 > 0) {
        v_8 = 100.0 - a_3;
        v_7 = SYSTEM::FLOOR(((float)v_6) * (v_8 / 100.0));
    } else { 
        v_7 = v_6;
    }
    g_182604[PLAYER::PLAYER_ID()/*324*/]._fB4._f4 = v_7;
    g_182604[PLAYER::PLAYER_ID()/*324*/]._fB4._f3 += v_7;
    if (a_2 == 1) {
        sub_a6e2(v_7, 0);
    }
}

void sub_a6e2(auto a_0, auto a_1) {
    if (a_1) {}
    a_0 = a_0;
}

auto sub_a6f3(auto a_0) {
    v_3 = 0;
    if (sub_a8f3(a_0) >= 0) {
        v_3 = sub_a8f3(a_0);
    } else { 
        v_3 = sub_a71d(a_0);
    }
    return v_3;
}

auto sub_a71d(auto a_0) {
    switch (a_0) {
    case 10:
        return 5000;
        break;
    case 11:
        return 12500;
        break;
    case 8:
        return 1000;
        break;
    case 0:
        return 500;
        break;
    case 9:
        return 250;
        break;
    case 13:
        return 1000;
        break;
    case 12:
        return 7500;
        break;
    case 2:
        return 1000;
        break;
    case 14:
        return 500;
        break;
    case 20:
        if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) == 1) {
            return g_40001._f137D;
        } else if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) == 2) {
            return g_40001._f137E;
        } else if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) == 3) {
            return g_40001._f137F;
        } else if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) == 4) {
            return g_40001._f1380;
        } else if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) == 5) {
            return g_40001._f1381;
        } else { 
            return 200;
        }
        break;
    case 6:
        return 500;
        break;
    case 22:
        return 200;
        break;
    case 23:
        return 400;
        break;
    case 24:
        return 700;
        break;
    case 25:
        return 100;
        break;
    case 26:
        return 1000;
        break;
    case 35:
        return 5000;
        break;
    case 15:
        return 0;
        break;
    case 17:
        return 0;
        break;
    case 18:
        return 0;
        break;
    case 19:
        return 0;
        break;
    case 21:
        return 0;
        break;
    case 36:
        return 0;
        break;
    }
    return 0;
}

auto sub_a8f3(auto a_0) {
    switch (a_0) {
    case 10:
        return g_40001._fFF7;
        break;
    case 11:
        return g_40001._fFF8;
        break;
    case 8:
        return g_40001._fFF5;
        break;
    case 0:
        return g_40001._fFE7;
        break;
    case 9:
        return g_40001._fFF6;
        break;
    case 13:
        return g_40001._fFFA;
        break;
    case 12:
        return g_40001._fFF9;
        break;
    case 2:
        return g_40001._fFF1;
        break;
    case 14:
        return g_40001._fFFB;
        break;
    case 20:
        return g_40001._f1000;
        break;
    case 6:
        return g_40001._fFF4;
        break;
    case 22:
        return g_40001._f1001;
        break;
    case 23:
        return g_40001._f1002;
        break;
    case 24:
        return g_40001._f1003;
        break;
    case 25:
        return g_40001._f1004;
        break;
    case 26:
        return g_40001._f1005;
        break;
    case 35:
        return g_40001._f15B2;
        break;
    case 15:
        return g_40001._f1377;
        break;
    case 17:
        return g_40001._f1377;
        break;
    case 18:
        return g_40001._f1377;
        break;
    case 19:
        return g_40001._f1377;
        break;
    case 21:
        return g_40001._f1377;
        break;
    case 36:
        return g_40001._f1783;
        break;
    }
    return 0;
}

void sub_aab8() {
    v_2 = PLAYER::PLAYER_ID();
    v_5 = 0;
    v_D = 0;
    v_E = 0;
    v_F = 0;
    for (v_3 = 0; v_3 < 5; v_3 += 1) {
        if (GAMEPLAY::IS_BIT_SET(l_E3[v_2/*30*/]._f5[v_3/*4*/]._f1, 0)) {
            if (!l_62A[v_3/*1*/]) {
                v_10 = 0;
                if (GAMEPLAY::IS_BIT_SET(l_E3[v_2/*30*/]._f5[v_3/*4*/]._f1, 1)) {
                    v_10 = l_4AC._fC;
                } else { 
                    v_10 = l_E3[v_2/*30*/]._f5[v_3/*4*/]._f3;
                }
                if (v_10 != 0) {
                    STREAMING::REQUEST_MODEL(v_10);
                    if (sub_d43a(v_2, l_E3[v_2/*30*/]._f5[v_3/*4*/])) {
                        if (STREAMING::HAS_MODEL_LOADED(v_10)) {
                            if (!GAMEPLAY::IS_BIT_SET(l_E3[v_2/*30*/]._f5[v_3/*4*/]._f1, 2)) {
                                if (sub_68a1(NETWORK::GET_NUM_RESERVED_MISSION_VEHICLES(0) + 1, 0, 1)) {
                                    NETWORK::RESERVE_NETWORK_MISSION_VEHICLES(NETWORK::GET_NUM_RESERVED_MISSION_VEHICLES(0) + 1);
                                    GAMEPLAY::SET_BIT(&l_E3[v_2/*30*/]._f5[v_3/*4*/]._f1, 2);
                                }
                            } else if (NETWORK::CAN_REGISTER_MISSION_VEHICLES(1)) {
                                if (!GAMEPLAY::IS_BIT_SET(l_4BD, 0)) {
                                    l_4BD = sub_d3b3(l_E3[v_2/*30*/]._f5[v_3/*4*/]);
                                    GAMEPLAY::SET_BIT(&l_4BD, 0);
                                }
                                if (GAMEPLAY::IS_BIT_SET(l_E3[v_2/*30*/]._f5[v_3/*4*/]._f1, 3)) {
                                    v_D = 0;
                                } else { 
                                    v_D = 1;
                                }
                                if (GAMEPLAY::IS_BIT_SET(l_E3[v_2/*30*/]._f5[v_3/*4*/]._f1, 1)) {
                                    v_E = 0;
                                    v_F = 0;
                                } else { 
                                    v_E = 1;
                                    v_F = 1;
                                }
                                v_C = -1;
                                for (v_4 = 0; v_4 < sub_79b8(l_E3[v_2/*30*/]._f5[v_3/*4*/]); v_4 += 1) {
                                    if (GAMEPLAY::IS_BIT_SET(l_4BD, v_4)) {
                                        if (sub_d355(l_E3[v_2/*30*/]._f5[v_3/*4*/], v_4, v_10)) {
                                            if ((!sub_7c93(v_10)) || sub_7131(l_E3[v_2/*30*/]._f5[v_3/*4*/], v_4)) {
                                                v_9/*{3}*/ = sub_c411(l_E3[v_2/*30*/]._f5[v_3/*4*/], v_4);
                                                if (sub_c3f8(v_9, 1752.6298828125, 3241.048095703125, 40.8582, 50.0, 1)) {
                                                    v_8 = 90000.0;
                                                } else { 
                                                    v_8 = 22500.0;
                                                }
                                                if ((!v_E) || (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0), v_9) < v_8)) {
                                                    if ((!v_F) || sub_c2b6(sub_c411(l_E3[v_2/*30*/]._f5[v_3/*4*/], v_4))) {
                                                        v_11 = 8.5;
                                                        if (v_10 == 0xb79f589e) {
                                                            v_11 = 13.0;
                                                        }
                                                        if (sub_be20(v_9, v_11, 1.0, 1.0, 5.0, v_D, v_D, v_D, 0x42f00000, 0, -1, 1, 0, 0, 0, 0)) {
                                                            if (!sub_ba52(v_9, 5.0, PLAYER::PLAYER_ID(), 1, 1)) {
                                                                if (v_C == -1) {
                                                                    v_C = v_4;
                                                                } else { 
                                                                    if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID())) {}
                                                                    v_7 = SYSTEM::VDIST2(sub_c411(l_E3[v_2/*30*/]._f5[v_3/*4*/], v_4), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1));
                                                                    v_6 = SYSTEM::VDIST2(sub_c411(l_E3[v_2/*30*/]._f5[v_3/*4*/], v_C), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1));
                                                                    if (v_7 < v_6) {
                                                                        v_C = v_4;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                v_5 = 0;
                                if (v_C != -1) {
                                    if (GAMEPLAY::IS_BIT_SET(l_E3[v_2/*30*/]._f5[v_3/*4*/]._f1, 1)) {
                                        if (sub_5907(v_10, sub_c411(l_E3[v_2/*30*/]._f5[v_3/*4*/], v_C), sub_af40(l_E3[v_2/*30*/]._f5[v_3/*4*/], v_C), !v_D)) {
                                            v_5 = 1;
                                        }
                                    } else if (sub_ae7a(v_10, sub_c411(l_E3[v_2/*30*/]._f5[v_3/*4*/], v_C), sub_af40(l_E3[v_2/*30*/]._f5[v_3/*4*/], v_C), !v_D)) {
                                        v_5 = 1;
                                    }
                                    if (v_5) {
                                        l_62A[v_3/*1*/] = 1;
                                        sub_4c3(&l_630[v_3/*2*/]);
                                    }
                                }
                                if (!v_5) {
                                    GAMEPLAY::SET_BIT(&g_24F57C._fCCA, v_3);
                                }
                                l_4BD = 0;
                            }
                        }
                    }
                }
            }
        }
    }
}

auto sub_ae7a(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (!NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(l_4BC)) {
        if (NETWORK::CAN_REGISTER_MISSION_VEHICLES(1)) {
            if (sub_6883(a_0)) {
                if (sub_6800(&l_4BC, a_0, a_1, a_4, 0, 1, 1, 0, 1, 1)) {
                    if (a_5) {
                        NETWORK::NETWORK_FADE_IN_ENTITY(NETWORK::NET_TO_ENT(l_4BC), 1);
                    }
                    VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(NETWORK::NET_TO_VEH(l_4BC));
                    if ((VEHICLE::IS_THIS_MODEL_A_BOAT(a_0) || (a_0 == ${submersible})) || (a_0 == ${submersible2})) {
                        VEHICLE::SET_BOAT_ANCHOR(NETWORK::NET_TO_VEH(l_4BC), 1);
                    }
                    if (a_0 == ${riot}) {
                        VEHICLE::SET_VEHICLE_IS_STOLEN(NETWORK::NET_TO_VEH(l_4BC), 1);
                    }
                    VEHICLE::SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER(NETWORK::NET_TO_VEH(l_4BC), 0);
                    STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(a_0);
                    v_8 = NETWORK::NET_TO_ENT(l_4BC);
                    ENTITY::SET_ENTITY_AS_NO_LONGER_NEEDED(&v_8);
                    return 1;
                }
            }
        }
    }
    return 0;
}

auto sub_af40(auto a_0, auto a_1) {
    switch (a_0) {
    case 0:
        switch (a_1) {
        case 0:
            return 128.39419555664062;
            break;
        case 1:
            return 126.337600708;
            break;
        case 2:
            return 297.7065124511719;
            break;
        }
        break;
    case 1:
        switch (a_1) {
        case 0:
            return 48.749298095703125;
            break;
        case 1:
            return 198.9416046142578;
            break;
        case 2:
            return 289.8739013671875;
            break;
        case 3:
            return 200.54269409179688;
            break;
        case 4:
            return 108.77960205078125;
            break;
        case 5:
            return 231.52049255371094;
            break;
        case 6:
            return 113.5551986694336;
            break;
        }
        break;
    case 2:
        switch (a_1) {
        case 0:
            return 54.49169921875;
            break;
        case 1:
            return 46.08409881591797;
            break;
        }
        break;
    case 3:
        switch (a_1) {
        case 0:
            return 18.510799407958984;
            break;
        case 1:
            return 104.14630126953125;
            break;
        case 2:
            return 85.41809844970703;
            break;
        }
        break;
    case 4:
        switch (a_1) {
        case 0:
            return 141.07420349121094;
            break;
        case 1:
            return 227.27490234375;
            break;
        case 2:
            return 47.029701232910156;
            break;
        case 3:
            return 316.7026062011719;
            break;
        }
        break;
    case 5:
        switch (a_1) {
        case 0:
            return 328.73199462890625;
            break;
        case 1:
            return 329.0177;
            break;
        case 2:
            return 330.9617;
            break;
        }
        break;
    case 6:
        switch (a_1) {
        case 0:
            return 311.01019287109375;
            break;
        }
        break;
    case 7:
        switch (a_1) {
        case 0:
            return 281.0591125488281;
            break;
        }
        break;
    case 8:
        switch (a_1) {
        case 0:
            return 194.27059936523438;
            break;
        case 1:
            return 60.7644;
            break;
        }
        break;
    case 9:
        switch (a_1) {
        case 0:
            return 269.99591064453125;
            break;
        case 1:
            return 90.02670288085938;
            break;
        case 2:
            return 268.589599609375;
            break;
        }
        break;
    case 10:
        switch (a_1) {
        case 0:
            return 176.25779724121094;
            break;
        case 1:
            return 178.743896484375;
            break;
        }
        break;
    case 11:
        switch (a_1) {
        case 0:
            return 207.6092987060547;
            break;
        case 1:
            return 297.165;
            break;
        }
        break;
    case 12:
        switch (a_1) {
        case 0:
            return 254.9279022216797;
            break;
        case 1:
            return 71.87039947509766;
            break;
        }
        break;
    case 13:
        switch (a_1) {
        case 0:
            return 223.7917938232422;
            break;
        case 1:
            return 17.640199661254883;
            break;
        }
        break;
    case 14:
        switch (a_1) {
        case 0:
            return 108.28810119628906;
            break;
        case 1:
            return 63.41590118408203;
            break;
        case 2:
            return 238.73789978027344;
            break;
        }
        break;
    case 15:
        switch (a_1) {
        case 0:
            return 295.6942138671875;
            break;
        case 1:
            return 352.76019287109375;
            break;
        }
        break;
    case 16:
        switch (a_1) {
        case 0:
            return 154.04269409179688;
            break;
        }
        break;
    case 17:
        switch (a_1) {
        case 0:
            return 26.960899353027344;
            break;
        case 1:
            return 81.59860229492188;
            break;
        }
        break;
    case 18:
        switch (a_1) {
        case 0:
            return 262.7138977050781;
            break;
        }
        break;
    case 19:
        switch (a_1) {
        case 0:
            return 269.59521484375;
            break;
        case 1:
            return 57.4738;
            break;
        case 2:
            return 296.69610595703125;
            break;
        case 3:
            return 236.53529357910156;
            break;
        }
        break;
    case 20:
        switch (a_1) {
        case 0:
            return 19.2357;
            break;
        case 1:
            return 66.25769805908203;
            break;
        }
        break;
    case 21:
        switch (a_1) {
        case 0:
            return 280.103302;
            break;
        case 1:
            return 328.23748779296875;
            break;
        }
        break;
    case 22:
        switch (a_1) {
        case 0:
            return 45.35649871826172;
            break;
        case 1:
            return 56.6296;
            break;
        }
        break;
    case 23:
        switch (a_1) {
        case 0:
            return 271.0456848144531;
            break;
        case 1:
            return 266.78240966796875;
            break;
        case 2:
            return 27.97279930114746;
            break;
        }
        break;
    case 24:
        switch (a_1) {
        case 0:
            return 357.92620849609375;
            break;
        }
        break;
    case 25:
        switch (a_1) {
        case 0:
            return 319.90869140625;
            break;
        }
        break;
    case 26:
        switch (a_1) {
        case 0:
            return 127.4169;
            break;
        }
        break;
    case 27:
        switch (a_1) {
        case 0:
            return 178.1761932373047;
            break;
        }
        break;
    case 28:
        switch (a_1) {
        case 0:
            return 223.39149475097656;
            break;
        }
        break;
    case 29:
        switch (a_1) {
        case 0:
            return 242.5401;
            break;
        }
        break;
    case 30:
        switch (a_1) {
        case 0:
            return 26.4664;
            break;
        }
        break;
    case 31:
        switch (a_1) {
        case 0:
            return 330.5492858886719;
            break;
        }
        break;
    case 32:
        switch (a_1) {
        case 0:
            return 210.3199;
            break;
        case 1:
            return 184.992;
            break;
        case 2:
            return 336.1376037597656;
            break;
        case 3:
            return 71.1016;
            break;
        }
        break;
    case 33:
        switch (a_1) {
        case 0:
            return 89.72319793701172;
            break;
        case 1:
            return 89.92829895019531;
            break;
        }
        break;
    case 34:
        switch (a_1) {
        case 0:
            return 162.5932;
            break;
        case 1:
            return 358.3655090332031;
            break;
        }
        break;
    case 35:
        switch (a_1) {
        case 0:
            return 196.5323944091797;
            break;
        case 1:
            return 41.39229965209961;
            break;
        case 2:
            return 221.69839477539062;
            break;
        }
        break;
    case 36:
        switch (a_1) {
        case 0:
            return 60.0988;
            break;
        case 1:
            return 326.8046875;
            break;
        case 2:
            return 330.18701171875;
            break;
        case 3:
            return 329.5950927734375;
            break;
        case 4:
            return 328.41778564453125;
            break;
        }
        break;
    case 37:
        switch (a_1) {
        case 0:
            return 70.93450164794922;
            break;
        case 1:
            return 68.52369689941406;
            break;
        }
        break;
    case 38:
        switch (a_1) {
        case 0:
            return 286.6174011230469;
            break;
        }
        break;
    case 39:
        switch (a_1) {
        case 0:
            return 89.95010375976562;
            break;
        }
        break;
    case 40:
        switch (a_1) {
        case 0:
            return 70.55290222167969;
            break;
        }
        break;
    case 41:
        switch (a_1) {
        case 0:
            return 91.35140228271484;
            break;
        }
        break;
    case 42:
        switch (a_1) {
        case 0:
            return 179.89320373535156;
            break;
        }
        break;
    case 43:
        switch (a_1) {
        case 0:
            return 59.37620162963867;
            break;
        }
        break;
    case 44:
        switch (a_1) {
        case 0:
            return 318.5715026855469;
            break;
        case 1:
            return 319.2958068847656;
            break;
        }
        break;
    case 45:
        switch (a_1) {
        case 0:
            return 37.005699157714844;
            break;
        case 1:
            return 314.6925048828125;
            break;
        }
        break;
    case 46:
        switch (a_1) {
        case 0:
            return 316.0815124511719;
            break;
        }
        break;
    case 47:
        switch (a_1) {
        case 0:
            return 290.6282958984375;
            break;
        case 1:
            return 179.59080505371094;
            break;
        case 2:
            return 128.0372;
            break;
        }
        break;
    case 48:
        switch (a_1) {
        case 0:
            return 313.5646057128906;
            break;
        case 1:
            return 271.7294;
            break;
        }
        break;
    case 49:
        switch (a_1) {
        case 0:
            return 264.26611328125;
            break;
        }
        break;
    case 50:
        switch (a_1) {
        case 0:
            return 45.284;
            break;
        case 1:
            return 47.2513;
            break;
        }
        break;
    case 51:
        switch (a_1) {
        case 0:
            return 333.09588623046875;
            break;
        case 1:
            return 149.28640747070312;
            break;
        }
        break;
    case 52:
        switch (a_1) {
        case 0:
            return 0.2415;
            break;
        case 1:
            return 162.68020629882812;
            break;
        }
        break;
    case 53:
        switch (a_1) {
        case 0:
            return 297.131591796875;
            break;
        case 1:
            return 27.0734;
            break;
        case 2:
            return 268.75299072265625;
            break;
        }
        break;
    case 54:
        switch (a_1) {
        case 0:
            return 243.3594970703125;
            break;
        case 1:
            return 46.23429870605469;
            break;
        case 2:
            return 264.9336853027344;
            break;
        }
        break;
    }
    return 0.0;
}

auto sub_ba52(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    if (sub_bd26(a_0, a_3, a_4, a_5) || sub_ba82(a_0, a_4, a_6)) {
        return 1;
    }
    return 0;
}

auto sub_ba82(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    for (v_7 = 0; v_7 < 32; v_7 += 1) {
        if ((!(a_3 == v_7)) || (a_4 == 1)) {
            v_8 = v_7;
            if (sub_bb0b(a_0, g_24C9BC._f125[v_7/*3*/], g_24C9BC._f186[v_7/*1*/], g_24C9BC._f1A7[v_7/*1*/], 0x3dcccccd)) {
                if (sub_6ae(v_8, 0, 1) && sub_6ae(a_3, 0, 1)) {
                    return 1;
                } else { 
                    return 1;
                }
            }
        }
    }
    return 0;
}

auto sub_bb0b(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8) {
    if (SYSTEM::VDIST(a_0, a_3) < sub_bccf(a_7, 0x3c23d70a)) {
        v_B/*{3}*/ = {0.0, 1.0, 0.0 };
        sub_bbf8(&v_B, 0.0, 0.0, a_6);
        v_B /= (vector)SYSTEM::VMAG(v_B);
        GAMEPLAY::GET_MODEL_DIMENSIONS(a_7, &v_E, &v_11);
        v_14 = GAMEPLAY::ABSF(v_11._f1 - v_E._f1);
        v_15 = GAMEPLAY::ABSF(v_11 - v_E);
        v_16 = GAMEPLAY::ABSF(v_11._f2 - v_E._f2);
        v_17/*{3}*/ = a_3 + (v_B * ((vector)((0.5 * v_14) + a_8)));
        v_17._f2 -= (0.5 * v_16) + a_8;
        v_1A/*{3}*/ = a_3 - (v_B * ((vector)((0.5 * v_14) + a_8)));
        v_1A._f2 += (0.5 * v_16) + a_8;
        return OBJECT::IS_POINT_IN_ANGLED_AREA(a_0, v_17, v_1A, v_15, 0, 1);
    }
    return 0;
}

void sub_bbf8(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6 = SYSTEM::COS(a_1);
    v_7 = SYSTEM::SIN(a_1);
    v_8 = a_0;
    v_8._f1 = (v_6 * a_0._f1) - (v_7 * a_0._f2);
    v_8._f2 = (v_7 * a_0._f1) + (v_6 * a_0._f2);
    a_0/*{3}*/ = v_8;
    v_6 = SYSTEM::COS(a_1._f1);
    v_7 = SYSTEM::SIN(a_1._f1);
    v_8 = (v_6 * a_0) + (v_7 * a_0._f2);
    v_8._f1 = a_0._f1;
    v_8._f2 = (v_6 * a_0._f2) - (v_7 * a_0);
    a_0/*{3}*/ = v_8;
    v_6 = SYSTEM::COS(a_1._f2);
    v_7 = SYSTEM::SIN(a_1._f2);
    v_8 = (v_6 * a_0) - (v_7 * a_0._f1);
    v_8._f1 = (v_7 * a_0) + (v_6 * a_0._f1);
    v_8._f2 = a_0._f2;
    a_0/*{3}*/ = v_8;
}

auto sub_bccf(auto a_0, auto a_1) {
    if (a_0 == 0) {
        return 5.0;
    }
    GAMEPLAY::GET_MODEL_DIMENSIONS(a_0, &v_4, &v_7);
    v_A/*{3}*/ = v_7 - v_4;
    return SYSTEM::SQRT(((v_A * 0.5) * (v_A * 0.5)) + ((v_A._f1 * 0.5) * (v_A._f1 * 0.5))) + a_1;
}

auto sub_bd26(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    for (v_8 = 0; v_8 < 32; v_8 += 1) {
        if ((!(a_4 == v_8)) || (a_5 == 1)) {
            v_9 = v_8;
            if (sub_6ae(v_9, 0, 1) && sub_6ae(a_4, 0, 1)) {
                if (g_24C9BC._f104[v_8/*1*/]) {
                    if (SYSTEM::VDIST(g_24C9BC._f82[v_8/*3*/], a_0) < a_3) {
                        return 1;
                    }
                } else if (SYSTEM::VDIST(sub_be0d(v_9), a_0) < a_3) {
                    return 1;
                }
            } else if (g_24C9BC._f104[v_8/*1*/]) {
                if (SYSTEM::VDIST(g_24C9BC._f82[v_8/*3*/], a_0) < a_3) {
                    return 1;
                }
            } else if (sub_6ae(v_9, 0, 1)) {
                if (SYSTEM::VDIST(sub_be0d(v_9), a_0) < a_3) {
                    return 1;
                }
            }
        }
    }
    return 0;
}

auto<3> sub_be0d(auto a_0) {
    return ENTITY::GET_ENTITY_COORDS(PLAYER::GET_PLAYER_PED(a_0), 0);
}

auto sub_be20(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11, auto a_12, auto a_13, auto a_14, auto a_15, auto a_16, auto a_17) {
    g_24B0C4 = 0;
    if (a_3 > 0.0) {
        if (VEHICLE::IS_ANY_VEHICLE_NEAR_POINT(a_0, a_3)) {
            return 0;
        }
    }
    if (a_4 > 0.0) {
        if (PED::IS_ANY_PED_NEAR_POINT(a_0, a_0._f1, a_0._f2 + 1.0, a_4) || PED::IS_ANY_PED_NEAR_POINT(a_0, a_4)) {
            return 0;
        }
    }
    if (a_5 > 0.0) {
        if (OBJECT::IS_ANY_OBJECT_NEAR_POINT(a_0, a_5, 0)) {
            return 0;
        }
    }
    g_24B0C4 += 1;
    if (a_D) {
        if (FIRE::GET_NUMBER_OF_FIRES_IN_RANGE(a_0, 2.5) > 0) {
            return 0;
        }
    }
    g_24B0C4 += 1;
    if (a_E > 0.0) {
        if (sub_c100(a_0, a_E, 1, 1, a_F, a_11, 0, a_F)) {
            return 0;
        }
    }
    g_24B0C4 += 1;
    if (a_8) {
        if (a_6 > 0.0) {
            if (sub_bf1d(a_0, a_6, a_7, a_9, a_A, a_B, a_C, a_10, a_11)) {
                return 0;
            }
        }
    }
    g_24B0C4 += 1;
    return 1;
}

auto sub_bf1d(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10) {
    if (a_4 && (!a_7)) {
        if (sub_6ae(PLAYER::PLAYER_ID(), 1, 1)) {
            if (!CAM::IS_SCREEN_FADED_OUT()) {
                v_F = a_6;
                if (a_9 > 0.0) {
                    v_F = a_9;
                }
                if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(sub_be0d(PLAYER::PLAYER_ID()), a_0, 1) <= (v_F + a_3)) {
                    if (CAM::IS_SPHERE_VISIBLE(a_0, a_3)) {
                        return 1;
                    }
                }
            }
        }
    }
    for (v_D = 0; v_D < 32; v_D += 1) {
        v_E = v_D;
        if (sub_6ae(v_E, 1, 1)) {
            if ((!sub_a49(v_E, 0)) && NETWORK::_9DE986FC9A87C474(PLAYER::PLAYER_ID(), v_E)) {
                if ((a_4 == 1) || ((a_4 == 0) && (v_E != PLAYER::PLAYER_ID()))) {
                    if ((sub_c0d6(v_E) || (!a_A)) && (!g_24D5B9[v_E/*254*/]._fFD)) {
                        v_F = a_6;
                        if (a_9 > 0.0) {
                            if (!(PLAYER::GET_PLAYER_TEAM(v_E) == -1)) {
                                if (PLAYER::GET_PLAYER_TEAM(v_E) == PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID())) {
                                    v_F = a_9;
                                }
                            }
                        }
                        if (!a_7) {
                            if ((a_5 || ((a_5 == 0) && (PLAYER::GET_PLAYER_TEAM(v_E) != PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID())))) || (PLAYER::GET_PLAYER_TEAM(v_E) == -1)) {
                                if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(sub_be0d(v_E), a_0, 1) <= (v_F + a_3)) {
                                    if (NETWORK::IS_SPHERE_VISIBLE_TO_PLAYER(v_E, a_0, a_3)) {
                                        return 1;
                                    }
                                }
                            }
                        } else if ((PLAYER::GET_PLAYER_TEAM(v_E) != a_8) || (PLAYER::GET_PLAYER_TEAM(v_E) == -1)) {
                            if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(sub_be0d(v_E), a_0, 1) <= (v_F + a_3)) {
                                if (NETWORK::IS_SPHERE_VISIBLE_TO_PLAYER(v_E, a_0, a_3)) {
                                    return 1;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return 0;
}

auto sub_c0d6(auto a_0) {
    if (ENTITY::IS_ENTITY_VISIBLE_TO_SCRIPT(PLAYER::GET_PLAYER_PED(a_0)) || g_24D5B9[a_0/*254*/]._fEF) {
        return 1;
    }
    return 0;
}

auto sub_c100(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9) {
    for (v_C = 0; v_C < 32; v_C += 1) {
        v_D = v_C;
        if (((a_8 == 1) && (PLAYER::PLAYER_ID() != v_D)) || (a_8 == 0)) {
            if (sub_6ae(v_D, a_4, a_5)) {
                if (NETWORK::_9DE986FC9A87C474(PLAYER::PLAYER_ID(), v_D)) {
                    if ((!a_7) || ((!PED::IS_PED_INJURED(PLAYER::GET_PLAYER_PED(v_D))) && sub_c0d6(v_D))) {
                        if (((!a_6) || ((a_6 == 1) && (PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()) != PLAYER::GET_PLAYER_TEAM(v_D)))) || (PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()) == -1)) {
                            if ((((PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()) == -1) && a_9) && a_6) && sub_c1fc(v_D)) {
                            } else if (ENTITY::DOES_ENTITY_EXIST(PLAYER::GET_PLAYER_PED(v_D))) {
                                if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(sub_be0d(v_D), a_0, 1) < a_3) {
                                    return 1;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return 0;
}

auto sub_c1fc(auto a_0) {
    if (sub_c249(PLAYER::PLAYER_ID(), a_0)) {
        return 1;
    }
    g_25510E/*{13}*/ = sub_c232(a_0);
    if (NETWORK::NETWORK_IS_FRIEND(&g_25510E)) {
        return 1;
    }
    return 0;
}

auto<13> sub_c232(auto a_0) {
    NETWORK::NETWORK_HANDLE_FROM_PLAYER(a_0, &v_3, 13);
    return v_3;
}

auto sub_c249(auto a_0, auto a_1) {
    if (NETWORK::_NETWORK_PLAYER_IS_IN_CLAN()) {
        g_25510E/*{13}*/ = sub_c232(a_0);
        g_25511B/*{13}*/ = sub_c232(a_1);
        if (NETWORK::NETWORK_CLAN_PLAYER_IS_ACTIVE(&g_25510E)) {
            if (NETWORK::NETWORK_CLAN_PLAYER_IS_ACTIVE(&g_25511B)) {
                NETWORK::NETWORK_CLAN_PLAYER_GET_DESC(&g_2550C8, 35, &g_25510E);
                NETWORK::NETWORK_CLAN_PLAYER_GET_DESC(&g_2550EB, 35, &g_25511B);
                if (g_2550C8 == g_2550EB) {
                    return 1;
                }
            }
        }
    }
    return 0;
}

auto sub_c2b6(auto a_0, auto a_1, auto a_2) {
    if (sub_c3bf(PLAYER::PLAYER_ID(), 0)) {
        for (v_5 = 0; v_5 <= (g_187385._fDEA9 - 1); v_5 += 1) {
            if (!sub_c395(g_187385._fDEC0[v_5/*26*/][0/*3*/])) {
                if ((g_187385._fDEC0[v_5/*26*/]._f9 == 2) || (g_187385._fDEC0[v_5/*26*/]._f9 == 0)) {
                    if ((a_0 >= g_187385._fDEC0[v_5/*26*/][0/*3*/]) && (a_0 <= g_187385._fDEC0[v_5/*26*/][1/*3*/])) {
                        if ((a_0._f1 >= g_187385._fDEC0[v_5/*26*/][0/*3*/]._f1) && (a_0._f1 <= g_187385._fDEC0[v_5/*26*/][1/*3*/]._f1)) {
                            return 0;
                        }
                    }
                }
            }
        }
    }
    return 1;
}

auto sub_c395(auto a_0, auto a_1, auto a_2) {
    if (((a_0 == 0.0) && (a_0._f1 == 0.0)) && (a_0._f2 == 0.0)) {
        return 1;
    }
    return 0;
}

auto sub_c3bf(auto a_0, auto a_1) {
    if (g_1406C1 != 0) {
        return 0;
    }
    if (!sub_8d49(a_0)) {
        return 0;
    }
    v_4 = a_0;
    if (g_182604[v_4/*324*/] == a_1) {
        return 1;
    }
    return 0;
}

auto sub_c3f8(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    return GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(a_0, a_3, a_7) <= a_6;
}

auto<3> sub_c411(auto a_0, auto a_1) {
    switch (a_0) {
    case 0:
        switch (a_1) {
        case 0:
            return {-1631.245849609375, -1163.33251953125, 0.3 };
            break;
        case 1:
            return {1625.349, -1169.74951171875, 0.3 };
            break;
        case 2:
            return {-1797.3087158203125, -1230.585083, 9.1264 };
            break;
        }
        break;
    case 1:
        switch (a_1) {
        case 0:
            return {-749.8038940429688, -1354.674072265625, 0.0 };
            break;
        case 1:
            return {-910.519287109375, -1470.916748046875, 0.0 };
            break;
        case 2:
            return {-856.548828125, -1327.5321044921875, 0.0 };
            break;
        case 3:
            return {-964.4990234375, -1389.4095458984375, 0.0 };
            break;
        case 4:
            return {-886.3637084960938, -1406.730712890625, 0.0 };
            break;
        case 5:
            return {-748.0861206054688, -1356.179443359375, 0.0 };
            break;
        case 6:
            return {-831.1409912109375, -1405.7359619140625, 0.0 };
            break;
        }
        break;
    case 2:
        switch (a_1) {
        case 0:
            return {1512.6336669921875, 3835.713134765625, 26.8383 };
            break;
        case 1:
            return {1559.578369140625, 3856.338134765625, 28.1415 };
            break;
        }
        break;
    case 3:
        switch (a_1) {
        case 0:
            return {-784.8181762695312, 6041.99853515625, 0.7305 };
            break;
        case 1:
            return {-883.2603149414062, 5894.4833984375, 0.8811 };
            break;
        case 2:
            return {-860.3978271484375, 5868.23486328125, -1.549 };
            break;
        }
        break;
    case 4:
        switch (a_1) {
        case 0:
            return {-746.1063232421875, -1469.4549560546875, 4.0005 };
            break;
        case 1:
            return {-746.0369873046875, -1433.3291015625, 4.0005 };
            break;
        case 2:
            return {-721.4188842773438, -1473.28833, 4.0005 };
            break;
        case 3:
            return {-724.7337036132812, -1444.45751953125, 4.0005 };
            break;
        }
        break;
    case 5:
        switch (a_1) {
        case 0:
            return {-1178.3575439453125, -2845.708251953125, 12.9489 };
            break;
        case 1:
            return {-1145.9776611328125, -2864.415771484375, 12.948399543762207 };
            break;
        case 2:
            return {-1112.593017578125, -2883.884033203125, 12.9473 };
            break;
        }
        break;
    case 6:
        switch (a_1) {
        case 0:
            return {-475.11428833, 5989.2451171875, 30.3369 };
            break;
        }
        break;
    case 7:
        switch (a_1) {
        case 0:
            return {1771.0804443359375, 3240.019775390625, 41.13949966430664 };
            break;
        }
        break;
    case 8:
        switch (a_1) {
        case 0:
            return {1731.4931640625, 3309.8779296875, 40.2234992980957 };
            break;
        case 1:
            return {1738.02392578125, 3246.97412109375, 40.464298248291016 };
            break;
        }
        break;
    case 9:
        switch (a_1) {
        case 0:
            return {528.8665161132812, -3047.848876953125, 5.0696 };
            break;
        case 1:
            return {535.2628173828125, -3008.071533203125, 5.045499801635742 };
            break;
        case 2:
            return {503.1336975097656, -3007.93115234375, 5.045499801635742 };
            break;
        }
        break;
    case 10:
        switch (a_1) {
        case 0:
            return {580.5875244140625, -3226.611328125, 1.0 };
            break;
        case 1:
            return {534.6126708984375, -3191.55126953125, 1.0 };
            break;
        }
        break;
    case 11:
        switch (a_1) {
        case 0:
            return {-1093.371826171875, -438.2651062011719, 35.5541 };
            break;
        case 1:
            return {-1086.31494140625, -468.22711181640625, 35.02149963378906 };
            break;
        }
        break;
    case 12:
        switch (a_1) {
        case 0:
            return {324.88641357421875, 3420.4375, 35.583999999999996 };
            break;
        case 1:
            return {321.70550537109375, 3388.255859375, 35.4034 };
            break;
        }
        break;
    case 13:
        switch (a_1) {
        case 0:
            return {-323.5444030761719, 6099.31689453125, 30.463199615478516 };
            break;
        case 1:
            return {-369.1789855957031, 6062.4013671875, 30.5 };
            break;
        }
        break;
    case 14:
        switch (a_1) {
        case 0:
            return {-1137.6566162109375, -2413.388916015625, 12.9455 };
            break;
        case 1:
            return {-1064.2713623046875, -2393.096435546875, 12.9446 };
            break;
        case 2:
            return {-1204.910888671875, -2352.333740234375, 12.9446 };
            break;
        }
        break;
    case 15:
        switch (a_1) {
        case 0:
            return {-1408.83349609375, -3247.453369140625, 12.9452 };
            break;
        case 1:
            return {-1359.219482421875, -3277.73828125, 12.9452 };
            break;
        }
        break;
    case 16:
        switch (a_1) {
        case 0:
            return {2141.1865234375, 4820.23046875, 40.25019836425781 };
            break;
        }
        break;
    case 17:
        switch (a_1) {
        case 0:
            return {2132.72216796875, 4784.79, 39.97019958496094 };
            break;
        case 1:
            return {2086.731689453125, 4768.65283203125, 40.21099853515625 };
            break;
        }
        break;
    case 18:
        switch (a_1) {
        case 0:
            return {-1598.6851806640625, -1118.418701171875, 1.7377 };
            break;
        }
        break;
    case 19:
        switch (a_1) {
        case 0:
            return {1117.07666015625, 46.54359817504883, 79.75640106201172 };
            break;
        case 1:
            return {1137.76904296875, 51.35609817504883, 79.756103515625 };
            break;
        case 2:
            return {1130.1080322265625, 76.4697036743164, 79.75640106201172 };
            break;
        case 3:
            return {1144.47412109375, 75.45459747314453, 79.756103515625 };
            break;
        }
        break;
    case 20:
        switch (a_1) {
        case 0:
            return {2553.38208, 4670.1806640625, 32.95 };
            break;
        case 1:
            return {2556.755126953125, 4689.3447265625, 32.90769958496094 };
            break;
        }
        break;
    case 21:
        switch (a_1) {
        case 0:
            return {-99.1753, 2797.601318359375, 52.34870147705078 };
            break;
        case 1:
            return {126.862, 2800.191162109375, 52.108 };
            break;
        }
        break;
    case 22:
        switch (a_1) {
        case 0:
            return {-3255.344482421875, 1342.801513671875, 0.3 };
            break;
        case 1:
            return {-3249.797119140625, 1372.79833984375, 0.3 };
            break;
        }
        break;
    case 23:
        switch (a_1) {
        case 0:
            return {3864.18212890625, 4467.8662109375, 0.0 };
            break;
        case 1:
            return {3855.9052734375, 4455.51513671875, 0.0 };
            break;
        case 2:
            return {3847.071533203125, 4502.61865234375, 2.1762 };
            break;
        }
        break;
    case 24:
        switch (a_1) {
        case 0:
            return {478.3669128417969, -3370.251220703125, 5.07 };
            break;
        }
        break;
    case 25:
        switch (a_1) {
        case 0:
            return {391.9728088378906, -1620.703, 28.2928 };
            break;
        }
        break;
    case 26:
        switch (a_1) {
        case 0:
            return {-1052.068603515625, -857.0933227539062, 3.8774 };
            break;
        }
        break;
    case 27:
        switch (a_1) {
        case 0:
            return {1871.8719482421875, 3688.03833, 32.66189956665039 };
            break;
        }
        break;
    case 28:
        switch (a_1) {
        case 0:
            return {-481.9919128417969, 6024.171875, 30.340499877929688 };
            break;
        }
        break;
    case 29:
        switch (a_1) {
        case 0:
            return {3904.305908203125, 4256.55615234375, 0.0 };
            break;
        }
        break;
    case 30:
        switch (a_1) {
        case 0:
            return {-1596.885498046875, 5270.3662109375, 0.0 };
            break;
        }
        break;
    case 31:
        switch (a_1) {
        case 0:
            return {-1269.0205078125, -3376.48681640625, 12.945 };
            break;
        }
        break;
    case 32:
        switch (a_1) {
        case 0:
            return {-174.47520446777344, -1027.1837158203125, 26.274 };
            break;
        case 1:
            return {-122.7135, -1035.770751953125, 26.274 };
            break;
        case 2:
            return {-115.7, -966.1431274414062, 26.2814998626709 };
            break;
        case 3:
            return {-15.5297, -1032.053833, 27.9431 };
            break;
        }
        break;
    case 33:
        switch (a_1) {
        case 0:
            return {-831.793212890625, -805.61572265625, 18.1033 };
            break;
        case 1:
            return {-830.1884765625, -764.17626953125, 20.6692 };
            break;
        }
        break;
    case 34:
        switch (a_1) {
        case 0:
            return {844.3568115234375, 2371.8, 52.660701751708984 };
            break;
        case 1:
            return {896.6461791992188, 2352.743408203125, 50.6525 };
            break;
        }
        break;
    case 35:
        switch (a_1) {
        case 0:
            return {41.25529861450195, 6550.58203125, 30.4309 };
            break;
        case 1:
            return {81.73789978027344, 6497.6845703125, 30.352699279785156 };
            break;
        case 2:
            return {95.52549743652344, 6532.82958984375, 30.5575 };
            break;
        }
        break;
    case 36:
        switch (a_1) {
        case 0:
            return {-1973.57275390625, 2814.708740234375, 31.810199737548828 };
            break;
        case 1:
            return {-2144.201171875, 3020.408203125, 31.8099 };
            break;
        case 2:
            return {-2014.3087158203125, 2947.87841796875, 31.810199737548828 };
            break;
        case 3:
            return {-1925.9716796875, 3023.612548828125, 31.810199737548828 };
            break;
        case 4:
            return {-2120.684814453125, 3136.5, 31.81 };
            break;
        }
        break;
    case 37:
        switch (a_1) {
        case 0:
            return {334.3941955566406, 133.90890502929688, 102.065 };
            break;
        case 1:
            return {326.1827087402344, 163.33889770507812, 102.42639923095703 };
            break;
        }
        break;
    case 38:
        switch (a_1) {
        case 0:
            return {-311.639404296875, 226.61509704589844, 86.85769653320312 };
            break;
        }
        break;
    case 39:
        switch (a_1) {
        case 0:
            return {1407.98828125, 1118.8448486328125, 113.83789825439453 };
            break;
        }
        break;
    case 40:
        switch (a_1) {
        case 0:
            return {-1889.739013671875, 2047.2791748046875, 139.872406 };
            break;
        }
        break;
    case 41:
        switch (a_1) {
        case 0:
            return {-3418.4013671875, 947.1168212890625, 0.0 };
            break;
        }
        break;
    case 42:
        switch (a_1) {
        case 0:
            return {708.33447265625, 4102.0751953125, 27.17029953 };
            break;
        }
        break;
    case 43:
        switch (a_1) {
        case 0:
            return {-970.36181640625, -2980.644775390625, 12.945099830627441 };
            break;
        }
        break;
    case 44:
        switch (a_1) {
        case 0:
            return {298.9856872558594, -1454.19104, 45.509498596191406 };
            break;
        case 1:
            return {312.6377868652344, -1466.202880859375, 45.509498596191406 };
            break;
        }
        break;
    case 45:
        switch (a_1) {
        case 0:
            return {-169.3282928466797, 6273.0439453125, 30.4894 };
            break;
        case 1:
            return {-200.93460083, 6274.80859375, 30.489299774169922 };
            break;
        }
        break;
    case 46:
        switch (a_1) {
        case 0:
            return {2925.42919921875, 4635.04248046875, 47.545101165771484 };
            break;
        }
        break;
    case 47:
        switch (a_1) {
        case 0:
            return {-1654.6954345703125, 3043.88671875, 30.8236 };
            break;
        case 1:
            return {-1661.3177490234375, 3114.8388671875, 30.71809959411621 };
            break;
        case 2:
            return {-1618.91357421875, 3115.79541015625, 30.55769920349121 };
            break;
        }
        break;
    case 48:
        switch (a_1) {
        case 0:
            return {2873.63720703125, -669.3931884765625, 0.0 };
            break;
        case 1:
            return {2870.9970703125, -614.9962158203125, 0.0 };
            break;
        }
        break;
    case 49:
        switch (a_1) {
        case 0:
            return {3385.162109375, 5187.80126953125, 0.0 };
            break;
        }
        break;
    case 50:
        switch (a_1) {
        case 0:
            return {2511.69970703125, -342.5625915527344, 117.1864013671875 };
            break;
        case 1:
            return {2512.238037109375, -427.2641906738281, 117.18879699707031 };
            break;
        }
        break;
    case 51:
        switch (a_1) {
        case 0:
            return {401.4161071777344, -629.7783203125, 27.5002 };
            break;
        case 1:
            return {441.2265930175781, -572.79638671875, 27.499799728393555 };
            break;
        }
        break;
    case 52:
        switch (a_1) {
        case 0:
            return {2677.947265625, 1392.4503173828125, 23.5557 };
            break;
        case 1:
            return {2769.880615234375, 1478.75048828125, 23.52359962463379 };
            break;
        }
        break;
    case 53:
        switch (a_1) {
        case 0:
            return {-49.5069, 1965.8479, 188.72610473632812 };
            break;
        case 1:
            return {-52.82529830932617, 1949.417236328125, 189.18609619140625 };
            break;
        case 2:
            return {-143.85560607910156, 1894.998046875, 196.3253936767578 };
            break;
        }
        break;
    case 54:
        switch (a_1) {
        case 0:
            return {-678.5845947265625, 5795.7666015625, 16.331 };
            break;
        case 1:
            return {-671.1857299804688, 5840.75927734375, 16.3313 };
            break;
        case 2:
            return {-724.7985229492188, 5821.65966796875, 16.2562 };
            break;
        }
        break;
    }
    return {0.0, 0.0, 0.0 };
}

auto sub_d355(auto a_0, auto a_1, auto a_2) {
    switch (a_0) {
    case 1:
        switch (a_1) {
        case 0:
            if (a_2 == ${submersible}) {
                return 0;
            }
            break;
        }
        break;
    case 17:
        switch (a_1) {
        case 0:
            if (a_2 == ${shamal}) {
                return 0;
            }
            break;
        }
        break;
    }
    return 1;
}

auto sub_d3b3(auto a_0) {
    v_5 = 0;
    v_6 = 0;
    for (v_3 = 0; v_3 < sub_79b8(a_0); v_3 += 1) {
        v_6 = 0;
        for (v_4 = 0; v_4 < 30; v_4 += 1) {
            if (!v_6) {
                if (sub_6ae(PLAYER::INT_TO_PLAYERINDEX(v_4), 0, 1)) {
                    if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::GET_PLAYER_PED(PLAYER::INT_TO_PLAYERINDEX(v_4)), 0), sub_c411(a_0, v_3)) < 36.0) {
                        v_6 = 1;
                    }
                }
            }
        }
        if (!v_6) {
            GAMEPLAY::SET_BIT(&v_5, v_3);
        }
    }
    return v_5;
}

auto sub_d43a(auto a_0, auto a_1) {
    if (l_62._f2[a_1/*1*/] == a_0) {
        return 1;
    }
    return 0;
}

void sub_d454() {
    if (ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID())) {}
    v_3 = PLAYER::PLAYER_ID();
    if (sub_c3f8(sub_5182(l_626), 1752.6298828125, 3241.048095703125, 40.8582, 50.0, 1)) {
        v_2 = 90000.0;
    } else { 
        v_2 = 22500.0;
    }
    if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0), sub_5182(l_626)) < v_2) {
        v_4 = 0;
        v_5 = 0;
        if (!sub_9c70(l_626)) {
            sub_d904(l_626);
            if (!v_4) {
                if (((((!sub_d79b(PLAYER::PLAYER_ID())) && sub_8da3(PLAYER::PLAYER_ID(), l_626)) && (!sub_d77e(l_626))) && (sub_d74d() < 5)) && (!(sub_7e10(PLAYER::PLAYER_ID(), l_626) == 0))) {
                    v_4 = 1;
                }
            }
        }
        if (((GAMEPLAY::IS_BIT_SET(l_4AC, 0) && (!GAMEPLAY::IS_BIT_SET(l_4AC, 5))) && (!GAMEPLAY::IS_BIT_SET(l_4AC, 1))) && (l_4AC._f3 == l_626)) {
            v_4 = 1;
            v_5 = 1;
        }
        if (v_4) {
            v_7 = -1;
            if (v_5) {
                v_7 = l_4AC._f2;
            } else { 
                for (v_6 = 0; v_6 < 5; v_6 += 1) {
                    if (v_7 == -1) {
                        if ((!GAMEPLAY::IS_BIT_SET(l_E3[v_3/*30*/]._f5[v_6/*4*/]._f1, 0)) && (v_6 != l_4AC._f2)) {
                            v_7 = v_6;
                        }
                    }
                }
            }
            if (v_7 != -1) {
                asm .vardef<F> 8, "[{\"type\":\"field\",\"value\":[{\"offset\":0,\"value\":-1}]}]"
                v_8 = l_626;
                v_8._f1 = 0;
                GAMEPLAY::SET_BIT(&v_8._f1, 0);
                if (v_5) {
                    GAMEPLAY::SET_BIT(&v_8._f1, 1);
                    GAMEPLAY::SET_BIT(&l_4AC, 5);
                    if (GAMEPLAY::IS_BIT_SET(l_4AC, 3)) {
                        GAMEPLAY::CLEAR_BIT(&l_4AC, 3);
                    }
                    v_8._f3 = l_4AC._fC;
                } else { 
                    v_8._f3 = sub_7e10(PLAYER::PLAYER_ID(), l_626);
                }
                l_E3[v_3/*30*/]._f5[v_7/*4*/]/*{4}*/ = v_8;
                sub_d71c(sub_117c(1, 1), v_3, v_7, l_626);
                l_E3[v_3/*30*/]._f1A += 1;
                sub_d6e6(l_626);
            }
        }
    } else if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0), sub_5182(l_626)) > 40000.0) {
        if (sub_9c70(l_626)) {
            sub_10eb(l_626);
            sub_d6a1(l_626);
        }
    }
    l_626 += 1;
    if (l_626 >= 55) {
        l_626 = 0;
    }
}

void sub_d6a1(auto a_0) {
    v_3 = PLAYER::PLAYER_ID();
    if (GAMEPLAY::IS_BIT_SET(l_E3[v_3/*30*/]._f2[sub_1133(a_0)/*1*/], sub_1126(a_0))) {
        GAMEPLAY::CLEAR_BIT(&l_E3[v_3/*30*/]._f2[sub_1133(a_0)/*1*/], sub_1126(a_0));
    }
}

void sub_d6e6(auto a_0) {
    if (!GAMEPLAY::IS_BIT_SET(l_627[sub_1133(a_0)/*1*/], sub_1126(a_0))) {
        GAMEPLAY::SET_BIT(&l_627[sub_1133(a_0)/*1*/], sub_1126(a_0));
    }
}

void sub_d71c(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6 = 298;
    v_6._f1 = PLAYER::PLAYER_ID();
    v_6._f2 = a_1;
    v_6._f3 = a_2;
    v_6._f4 = a_3;
    SCRIPT::TRIGGER_SCRIPT_EVENT(1, &v_6, 5, a_0);
}

auto sub_d74d() {
    v_2 = PLAYER::PLAYER_ID();
    v_3 = 0;
    v_3 += l_E3[v_2/*30*/]._f1A;
    if (GAMEPLAY::IS_BIT_SET(l_4AC, 0)) {
        v_3 += 1;
    }
    return v_3;
}

auto sub_d77e(auto a_0) {
    return GAMEPLAY::IS_BIT_SET(l_627[sub_1133(a_0)/*1*/], sub_1126(a_0));
}

auto sub_d79b(auto a_0) {
    if (((((((((((((((((((g_182604[a_0/*324*/] == 0) || (g_182604[a_0/*324*/] == 1)) || (g_182604[a_0/*324*/] == 2)) || (g_182604[a_0/*324*/] == 3)) || (g_182604[a_0/*324*/] == 5)) || (g_182604[a_0/*324*/] == 8)) || (g_182604[a_0/*324*/] == 118)) || (g_182604[a_0/*324*/] == 11)) || (g_182604[a_0/*324*/] == 12)) || (g_182604[a_0/*324*/] == 13)) || (g_182604[a_0/*324*/] == 14)) || (g_182604[a_0/*324*/] == 122)) || (g_182604[a_0/*324*/] == 15)) || (g_182604[a_0/*324*/] == 23)) || (g_182604[a_0/*324*/] == 59)) || (g_182604[a_0/*324*/] == 60)) || (g_182604[a_0/*324*/] == 27)) || sub_d8ec(a_0, 0)) || sub_d8ec(a_0, 7)) {
        return 1;
    }
    return 0;
}

auto sub_d8ec(auto a_0, auto a_1) {
    return GAMEPLAY::IS_BIT_SET(g_24D5B9[a_0/*254*/]._fCD, a_1);
}

void sub_d904(auto a_0) {
    v_3 = PLAYER::PLAYER_ID();
    if (!GAMEPLAY::IS_BIT_SET(l_E3[v_3/*30*/]._f2[sub_1133(a_0)/*1*/], sub_1126(a_0))) {
        GAMEPLAY::SET_BIT(&l_E3[v_3/*30*/]._f2[sub_1133(a_0)/*1*/], sub_1126(a_0));
    }
}

void sub_d94a() {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (!NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT()) {
            if (g_252B2D != -1) {
                g_252B2D = -1;
            }
            if (g_252B2E != -1) {
                g_252B2E = -1;
            }
            if (g_252B2F != -1) {
                g_252B2F = -1;
            }
            if (g_252B45 != -1) {
                g_252B45 = -1;
            }
            if (g_252B46 != -1) {
                g_252B46 = -1;
            }
            if (g_252B47 != -1) {
                g_252B47 = -1;
            }
        }
    }
}

auto sub_d9af() {
    return g_182604[PLAYER::PLAYER_ID()/*324*/]._fA5 != 0;
}

void sub_d9c6() {
    l_67C._f1C = -1;
    l_E3[PLAYER::PLAYER_ID()/*30*/]._f1D = 0;
    l_E3[PLAYER::PLAYER_ID()/*30*/]._f1C = 0;
    l_E3[PLAYER::PLAYER_ID()/*30*/]._f1B = -1;
    l_67C._f5 = -1;
    l_67C._f7 = 0;
}

auto sub_da01(auto a_0) {
    if (l_E3[PLAYER::PLAYER_ID()/*30*/]._f1C == 0) {
        if (NETWORK::_B07D3185E11657A5(a_0)) {
            v_3 = NETWORK::NETWORK_GET_NETWORK_ID_FROM_ENTITY(a_0);
            l_E3[PLAYER::PLAYER_ID()/*30*/]._f1C = 1;
            l_E3[PLAYER::PLAYER_ID()/*30*/]._f1B = v_3;
        }
    }
    if (((l_62._f5E == PLAYER::PLAYER_ID()) && (l_62._f5D >= 0)) && (l_62._f5D < 32)) {
        if (l_62._f60[l_62._f5D/*1*/] >= 0) {
            l_E3[PLAYER::PLAYER_ID()/*30*/]._f1D = 1;
            l_E3[PLAYER::PLAYER_ID()/*30*/]._f1C = 0;
            return l_62._f5D;
        } else { }
    } else if (l_62._f5E == -1) {
    } else if ((l_62._f5D < 0) || (l_62._f5D >= 32)) {
    } else { }
    return -1;
}

void sub_dab8(auto a_0, auto a_1) {
    a_0 = a_1;
}

auto sub_dac5(auto a_0, auto a_1, auto a_2) {
    if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID())) {
        if (ENTITY::DOES_ENTITY_EXIST(PED::SET_EXCLUSIVE_PHONE_RELATIONSHIPS(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 1)) {
            if (a_1 != 0) {
                if (ENTITY::DOES_ENTITY_EXIST(PED::SET_EXCLUSIVE_PHONE_RELATIONSHIPS(PLAYER::PLAYER_PED_ID()))) {
                    if (PED::SET_EXCLUSIVE_PHONE_RELATIONSHIPS(PLAYER::PLAYER_PED_ID()) != a_1) {
                        if (a_0._f1C == 0x4019cb4c) {
                            a_2 = 1;
                        }
                        return 0;
                    }
                }
            }
            if (a_1 != 0) {
                if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 1)) {
                    if (PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 1) != a_1) {
                        if (a_0._f1C == 0x4019cb4c) {
                            a_2 = 1;
                        }
                        return 0;
                    }
                }
            }
            if (ENTITY::DOES_ENTITY_EXIST(PED::SET_EXCLUSIVE_PHONE_RELATIONSHIPS(PLAYER::PLAYER_PED_ID()))) {
                a_0._f9 = PED::SET_EXCLUSIVE_PHONE_RELATIONSHIPS(PLAYER::PLAYER_PED_ID());
            }
            if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 1)) {
                a_0._f9 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 1);
            }
            if ((ENTITY::GET_ENTITY_MODEL(a_0._f9) == 0xb79f589e) || (ENTITY::GET_ENTITY_MODEL(a_0._f9) == 0x4019cb4c)) {
                a_0._f1C = ENTITY::GET_ENTITY_MODEL(a_0._f9);
                return 1;
            } else { 
                a_0._f1C = ENTITY::GET_ENTITY_MODEL(a_0._f9);
                return 0;
            }
        } else { 
            return 0;
        }
    }
    return 0;
}

auto sub_dbe5() {
    return l_62;
}

auto sub_dbef(auto a_0) {
    return l_E3[a_0/*30*/];
}

void sub_dbfd() {
    if (g_180331) {
        if (!l_678) {
            if (l_679) {
                l_677 = 1;
                l_67A = -1;
            } else { }
            l_678 = 1;
        }
    } else if (l_678) {
        if (l_677) {
            if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
                v_3 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0);
                if (!(l_67A == v_3)) {
                    sub_dde4(&v_3);
                    l_67A = v_3;
                    l_67B = NETWORK::GET_NETWORK_TIME();
                } else if (NETWORK::GET_TIME_DIFFERENCE(NETWORK::GET_NETWORK_TIME(), l_67B) > 2000) {
                    l_67A = 0;
                }
            } else if (ENTITY::DOES_ENTITY_EXIST(l_67A)) {
                sub_dde4(&l_67A);
            } else { 
                l_678 = 0;
                l_677 = 0;
                l_679 = 0;
                if (l_67A == 0) {
                    g_2554DA._f1121 = 1;
                }
            }
        }
    } else if (sub_6ae(PLAYER::PLAYER_ID(), 1, 1)) {
        if (l_679) {
            if (GAMEPLAY::IS_BIT_SET(g_180194, 3) || GAMEPLAY::IS_BIT_SET(g_180194, 1)) {
            } else if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
                l_679 = 0;
                l_67A = -1;
            } else { 
                v_2 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0);
                if (!(l_67A == v_2)) {
                    if (!sub_dd64(v_2)) {
                        l_679 = 0;
                    } else { }
                    l_67A = v_2;
                }
            }
        } else if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
            v_2 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0);
            if (!(v_2 == l_67A)) {
                if (sub_dd64(v_2)) {
                    l_679 = 1;
                } else { }
                l_67A = v_2;
            }
        }
    }
}

auto sub_dd64(auto a_0) {
    if ((DECORATOR::_IS_DECORATOR_OF_TYPE("CreatedByPegasus", 2) && DECORATOR::_DOES_DECORATOR_EXIST(a_0, "CreatedByPegasus")) && DECORATOR::_GET_DECORATOR_BOOL(a_0, "CreatedByPegasus")) {
        if (NETWORK::NETWORK_DOES_NETWORK_ID_EXIST(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31) && NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31)) {
            if (!(NETWORK::NET_TO_VEH(g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._f31) == a_0)) {
                return 1;
            } else { }
        } else { 
            return 1;
        }
    }
    return 0;
}

void sub_dde4(auto a_0) {
    if (sub_6ae(PLAYER::PLAYER_ID(), 1, 1)) {
        if (ENTITY::DOES_ENTITY_EXIST(a_0) && VEHICLE::IS_VEHICLE_DRIVEABLE(a_0, 0)) {
            if (sub_e0f9(a_0)) {
                return ;
            }
        }
        if (!sub_e048(a_0, 1, 1, 0)) {
            for (v_3 = 0; v_3 < 32; v_3 += 1) {
                v_4 = PLAYER::INT_TO_PLAYERINDEX(v_3);
                if (sub_6ae(v_4, 0, 1)) {
                    if (PED::IS_PED_IN_VEHICLE(PLAYER::GET_PLAYER_PED(v_4), a_0, 0)) {
                        if (sub_4d0(&l_63B, 10000, 0)) {
                            sub_dfef(sub_e036(v_4), 0, 0.0, 0, 0, 0);
                        } else if (PLAYER::_EE68096F9F37341E() == v_3) {
                            if (!GAMEPLAY::IS_BIT_SET(l_4A8, l_57F)) {
                                sub_dfcc("TWOSTRINGS", "PEG_RECLAIM", "EPS_DROP_EXIT", -1);
                                GAMEPLAY::SET_BIT(&l_4A8, l_57F);
                            }
                        }
                    }
                }
            }
        } else if (!NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(a_0)) {
            NETWORK::NETWORK_REQUEST_CONTROL_OF_ENTITY(a_0);
            sub_4c3(&l_63B);
            GAMEPLAY::CLEAR_BIT(&l_4A8, l_57F);
        } else { 
            VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(a_0, 1);
            ENTITY::SET_ENTITY_AS_MISSION_ENTITY(a_0, 0, 1);
            VEHICLE::_CFD778E7904C255E(a_0);
            ENTITY::_3910051CCECDB00C(a_0, 1);
            if (sub_df2c(a_0)) {
                VEHICLE::DELETE_VEHICLE(a_0);
            } else { 
                ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(a_0);
            }
            l_67A = 0;
            sub_4c3(&l_63B);
            GAMEPLAY::CLEAR_BIT(&l_4A8, l_57F);
        }
    }
}

auto sub_df2c(auto a_0) {
    if ((ENTITY::IS_ENTITY_IN_ANGLED_AREA(a_0, 358.9707336425781, -1597.8516845703125, 20.000152587890625, 412.8247375488281, -1640.9068603515625, 40.542091369628906, 33.25, 0, 1, 0) || ENTITY::IS_ENTITY_IN_ANGLED_AREA(a_0, 406.6251525878906, -1644.2421875, 20.042194366455078, 417.1268310546875, -1652.936767578125, 41.951, 20.25, 0, 1, 0)) || ENTITY::IS_ENTITY_IN_ANGLED_AREA(a_0, 414.67584228515625, -1635.666259765625, 20.092775344848633, 423.5415344238281, -1635.64453125, 41.043155670166016, 15.5, 0, 1, 0)) {
        return 1;
    }
    return 0;
}

void sub_dfcc(auto a_0, auto a_1, auto a_2, auto a_3) {
    UI::_8509B634FBE7DA11(a_0);
    UI::_ADD_TEXT_COMPONENT_ITEM_STRING(a_1);
    UI::_ADD_TEXT_COMPONENT_ITEM_STRING(a_2);
    UI::_238FFE5C7B0498A6(0, 0, 1, a_3);
}

void sub_dfef(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    v_8 = 55;
    v_8._f1 = PLAYER::PLAYER_ID();
    v_8._f4 = a_1;
    v_8._f5 = a_4;
    v_8._f2 = a_2;
    v_8._f3 = a_3;
    v_8._f6 = a_5;
    if (!(a_0 == 0)) {
        SCRIPT::TRIGGER_SCRIPT_EVENT(1, &v_8, 7, a_0);
    } else { }
}

auto sub_e036(auto a_0) {
    GAMEPLAY::SET_BIT(&v_3, a_0);
    return v_3;
}

auto sub_e048(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_7 = VEHICLE::GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(a_0) + 1;
    if (!ENTITY::IS_ENTITY_DEAD(a_0)) {
        for (v_6 = 0; v_6 < v_7; v_6 += 1) {
            if (!VEHICLE::IS_VEHICLE_SEAT_FREE(a_0, v_6 - 1)) {
                v_8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(a_0, v_6 - 1);
                if (a_3 && (v_8 == PLAYER::PLAYER_PED_ID())) {
                } else if (a_2) {
                    if (!PED::IS_PED_INJURED(v_8)) {
                        if (PED::IS_PED_A_PLAYER(v_8)) {
                            return 0;
                        }
                    } else if (a_1 == 0) {
                        return 0;
                    }
                } else if (a_1 == 0) {
                    return 0;
                } else { 
                    v_9 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(a_0, v_6 - 1);
                    if (!PED::IS_PED_INJURED(v_9)) {
                        return 0;
                    }
                }
            }
        }
    }
    return 1;
}

auto sub_e0f9(auto a_0) {
    v_3/*{3}*/ = ENTITY::GET_ENTITY_COORDS(a_0, 1);
    if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(v_3, g_1001A3[1/*1425*/]._f4EE._f72, 1) < 30.0) {
        if (OBJECT::IS_POINT_IN_ANGLED_AREA(v_3, g_1001A3[1/*1425*/]._f4EE._f75, g_1001A3[1/*1425*/]._f4EE._f75._f3, g_1001A3[1/*1425*/]._f4EE._f75._f6, 0, 1)) {
            return 1;
        }
    }
    if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(v_3, g_1001A3[8/*1425*/]._f4EE._f72, 1) < 30.0) {
        if (OBJECT::IS_POINT_IN_ANGLED_AREA(v_3, g_1001A3[8/*1425*/]._f4EE._f75, g_1001A3[8/*1425*/]._f4EE._f75._f3, g_1001A3[8/*1425*/]._f4EE._f75._f6, 0, 1)) {
            return 1;
        }
    }
    if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(v_3, g_1001A3[17/*1425*/]._f4EE._f72, 1) < 30.0) {
        if (OBJECT::IS_POINT_IN_ANGLED_AREA(v_3, g_1001A3[17/*1425*/]._f4EE._f75, g_1001A3[17/*1425*/]._f4EE._f75._f3, g_1001A3[17/*1425*/]._f4EE._f75._f6, 0, 1)) {
            return 1;
        }
    }
    return 0;
}

void sub_e238(auto a_0) {
    if (((!sub_6ae(a_0, 0, 1)) || (!NETWORK::NETWORK_DOES_NETWORK_ID_EXIST(g_24D5B9[a_0/*254*/]._f31))) || (NETWORK::NETWORK_DOES_NETWORK_ID_EXIST(g_24D5B9[a_0/*254*/]._f31) && (!NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(g_24D5B9[a_0/*254*/]._f31)))) {
        if (ENTITY::DOES_ENTITY_EXIST(g_24F57C._f237[a_0/*1*/])) {
            sub_dde4(&g_24F57C._f237[a_0/*1*/]);
        }
    } else if (NETWORK::NETWORK_DOES_NETWORK_ID_EXIST(g_24D5B9[a_0/*254*/]._f31)) {
        if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(g_24D5B9[a_0/*254*/]._f31)) {
            g_24F57C._f237[a_0/*1*/] = NETWORK::NET_TO_VEH(g_24D5B9[a_0/*254*/]._f31);
        }
    }
    if (g_2554DA._f1121) {
        sub_6df5("PEG_RECLAIM", 1);
        g_2554DA._f1121 = 0;
    }
    a_0 += 1;
    if (a_0 >= 32) {
        a_0 = 0;
    }
}

auto sub_e322(auto a_0) {
    if (sub_a49(a_0, 0)) {
        return 1;
    }
    if (sub_e363()) {
        if (a_0 == PLAYER::PLAYER_ID()) {
            return 1;
        }
    }
    if (GAMEPLAY::IS_BIT_SET(g_24D5B9[a_0/*254*/]._fC2, 2)) {
        return 1;
    }
    return 0;
}

auto sub_e363() {
    return GAMEPLAY::IS_BIT_SET(g_240005, 3);
}

void sub_e374() {
}

void sub_e37c() {
    SYSTEM::WAIT(0);
}

auto sub_e389() {
    return g_180332;
}

auto sub_e395() {
    if (sub_a49(PLAYER::PLAYER_ID(), 0) || sub_f9b1()) {
        return 1;
    }
    if ((!(sub_f574(23) && sub_e435(23))) && (!(sub_f574(22) && sub_e435(22)))) {
        return 1;
    }
    if ((!sub_e41d(PLAYER::PLAYER_ID())) || sub_e402()) {
        return 1;
    }
    return 0;
}

auto sub_e402() {
    return GAMEPLAY::IS_BIT_SET(g_182604[PLAYER::PLAYER_ID()/*324*/]._f74, 18);
}

auto sub_e41d(auto a_0) {
    return GAMEPLAY::IS_BIT_SET(g_182604[a_0/*324*/]._f74, 6);
}

auto sub_e435(auto a_0) {
    if (g_182604[PLAYER::PLAYER_ID()/*324*/] == 122) {
        return 0;
    }
    v_3 = PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID());
    if ((v_3 >= 0) && (v_3 <= 3)) {
        if (((GAMEPLAY::IS_BIT_SET(g_187385._f9, 30) && (g_187385._f668F[v_3/*1*/] != 0)) || (GAMEPLAY::IS_BIT_SET(g_187385._f11065, 10) && (g_1461B6 != 0))) && sub_f4e6(v_3)) {
            return 0;
        }
        if (sub_f4d2()) {
            return 0;
        }
    }
    switch (a_0) {
    case 10:
        if (NETWORK::NETWORK_IS_ACTIVITY_SESSION() && GAMEPLAY::IS_BIT_SET(g_187385._f11065, 21)) {
            return 0;
        }
        if (sub_e389()) {
            return 1;
        } else if (sub_f4a6(PLAYER::PLAYER_ID()) || sub_f49a()) {
            return 0;
        }
        if (sub_f451(PLAYER::PLAYER_ID())) {
            if (g_25C994._f21 == 1) {
                return 1;
            } else { 
                return 0;
            }
        }
        if (sub_f406(PLAYER::PLAYER_ID())) {
            if (sub_f3f2(PLAYER::PLAYER_ID())) {
                return 0;
            } else if (sub_f3de(PLAYER::PLAYER_ID())) {
                return 1;
            } else { 
                return 1;
            }
        }
        break;
    case 11:
        if (NETWORK::NETWORK_IS_ACTIVITY_SESSION() && GAMEPLAY::IS_BIT_SET(g_187385._f11065, 22)) {
            return 0;
        }
        if (sub_e389()) {
            return 1;
        } else if (sub_f4a6(PLAYER::PLAYER_ID()) || sub_f49a()) {
            return 0;
        }
        if (sub_f451(PLAYER::PLAYER_ID())) {
            if (g_25C994._f21 == 1) {
                return 1;
            } else { 
                return 0;
            }
        }
        if (sub_f406(PLAYER::PLAYER_ID())) {
            if (sub_f3f2(PLAYER::PLAYER_ID())) {
                return 0;
            } else if (sub_f3de(PLAYER::PLAYER_ID())) {
                return 1;
            } else if (sub_f3ca(PLAYER::PLAYER_ID())) {
                return 0;
            } else { 
                return 1;
            }
        }
        break;
    case 8:
        if (NETWORK::NETWORK_IS_ACTIVITY_SESSION() && GAMEPLAY::IS_BIT_SET(g_187385._f11065, 17)) {
            return 0;
        }
        if (sub_f49a()) {
            return 0;
        }
        if (sub_f4a6(PLAYER::PLAYER_ID()) || sub_e389()) {
            if (sub_f3b6() || sub_f3a2()) {
                v_4 = sub_f033();
                if (((((v_4 == ${weapon_unarmed}) || (v_4 == ${weapon_rpg})) || (v_4 == ${weapon_grenadelauncher})) || sub_effe(v_4)) || sub_efab(v_4)) {
                    return 0;
                }
                return 1;
            } else { 
                return 1;
            }
        }
        if (sub_f451(PLAYER::PLAYER_ID())) {
            return 0;
        }
        if (sub_f406(PLAYER::PLAYER_ID())) {
            if (sub_f3f2(PLAYER::PLAYER_ID())) {
                return 1;
            } else if (sub_f3de(PLAYER::PLAYER_ID())) {
                return 1;
            } else { 
                return 1;
            }
        }
        break;
    case 0:
        if ((sub_f4a6(PLAYER::PLAYER_ID()) || sub_e389()) || sub_f49a()) {
            return 0;
        }
        if (sub_f451(PLAYER::PLAYER_ID())) {
            return 0;
        }
        if (sub_f406(PLAYER::PLAYER_ID())) {
            if (sub_f3f2(PLAYER::PLAYER_ID())) {
                return 1;
            } else if (sub_f3de(PLAYER::PLAYER_ID())) {
                return 1;
            } else { 
                return 1;
            }
        }
        break;
    case 9:
        if ((((((g_182604[PLAYER::PLAYER_ID()/*324*/] == 3) || (g_182604[PLAYER::PLAYER_ID()/*324*/] == 32)) || sub_f4a6(PLAYER::PLAYER_ID())) || sub_e389()) || sub_f49a()) || sub_f451(PLAYER::PLAYER_ID())) {
            return 0;
        }
        if (sub_f406(PLAYER::PLAYER_ID())) {
            if (sub_f3f2(PLAYER::PLAYER_ID())) {
                return 0;
            } else if (sub_f3de(PLAYER::PLAYER_ID())) {
                return 0;
            } else if (sub_ef97(PLAYER::PLAYER_ID()) || sub_ef83(PLAYER::PLAYER_ID())) {
                return 0;
            } else { 
                return 1;
            }
        }
        break;
    case 13:
        if (NETWORK::NETWORK_IS_ACTIVITY_SESSION() && GAMEPLAY::IS_BIT_SET(g_187385._f11065, 20)) {
            return 0;
        }
        if (((((sub_f4a6(PLAYER::PLAYER_ID()) || sub_e389()) || sub_f49a()) || sub_f451(PLAYER::PLAYER_ID())) || (g_182604[PLAYER::PLAYER_ID()/*324*/] == 3)) || (g_182604[PLAYER::PLAYER_ID()/*324*/] == 32)) {
            return 0;
        }
        if (sub_f451(PLAYER::PLAYER_ID())) {
            return 0;
        }
        if (sub_f406(PLAYER::PLAYER_ID())) {
            if (sub_f3f2(PLAYER::PLAYER_ID())) {
                return 0;
            } else if (sub_f3de(PLAYER::PLAYER_ID())) {
                return 0;
            } else if (sub_ef97(PLAYER::PLAYER_ID()) || sub_ef83(PLAYER::PLAYER_ID())) {
                return 0;
            } else { 
                return 1;
            }
        }
        break;
    case 7:
        if ((((sub_e389() || sub_f49a()) || sub_f4a6(PLAYER::PLAYER_ID())) || sub_f451(PLAYER::PLAYER_ID())) || (g_182604[PLAYER::PLAYER_ID()/*324*/] == 3)) {
            return 0;
        }
        if (sub_f406(PLAYER::PLAYER_ID())) {
            if (sub_f3f2(PLAYER::PLAYER_ID())) {
                return 0;
            } else if (sub_f3de(PLAYER::PLAYER_ID())) {
                return 0;
            } else { 
                return 1;
            }
        }
        break;
    case 22:
        if ((((sub_f451(PLAYER::PLAYER_ID()) || (g_182604[PLAYER::PLAYER_ID()/*324*/] == 3)) || sub_f4a6(PLAYER::PLAYER_ID())) || sub_e389()) || sub_f49a()) {
            return 0;
        }
        if (sub_f406(PLAYER::PLAYER_ID())) {
            if (sub_f3f2(PLAYER::PLAYER_ID())) {
                return 0;
            } else if (sub_f3de(PLAYER::PLAYER_ID())) {
                return 0;
            } else if (sub_ef97(PLAYER::PLAYER_ID()) || sub_ef83(PLAYER::PLAYER_ID())) {
                return 0;
            } else { 
                return 1;
            }
        }
        break;
    case 23:
    case 24:
    case 25:
    case 26:
        if (NETWORK::NETWORK_IS_ACTIVITY_SESSION() && GAMEPLAY::IS_BIT_SET(g_187385._f11065, 19)) {
            return 0;
        }
        if ((((sub_f451(PLAYER::PLAYER_ID()) || (g_182604[PLAYER::PLAYER_ID()/*324*/] == 3)) || sub_f4a6(PLAYER::PLAYER_ID())) || sub_e389()) || sub_f49a()) {
            return 0;
        }
        if (sub_f406(PLAYER::PLAYER_ID())) {
            if (sub_f3f2(PLAYER::PLAYER_ID())) {
                return 0;
            } else if (sub_f3de(PLAYER::PLAYER_ID())) {
                return 0;
            } else if (sub_ef97(PLAYER::PLAYER_ID()) || sub_ef83(PLAYER::PLAYER_ID())) {
                return 0;
            } else { 
                return 1;
            }
        }
        break;
    case 12:
        if (NETWORK::NETWORK_IS_ACTIVITY_SESSION() && GAMEPLAY::IS_BIT_SET(g_187385._f11065, 16)) {
            return 0;
        }
        if (sub_f4a6(PLAYER::PLAYER_ID())) {
            if ((sub_e389() || sub_f49a()) || sub_f3b6()) {
                return 0;
            } else { 
                return 1;
            }
        }
        if ((g_182604[PLAYER::PLAYER_ID()/*324*/] == 0) || (g_182604[PLAYER::PLAYER_ID()/*324*/] == 4)) {
            return 0;
        }
        if (g_182604[PLAYER::PLAYER_ID()/*324*/] == 3) {
            return 0;
        }
        if (sub_f451(PLAYER::PLAYER_ID())) {
            return 0;
        }
        if (sub_f406(PLAYER::PLAYER_ID())) {
            if (sub_f3f2(PLAYER::PLAYER_ID())) {
                return 0;
            } else if (sub_f3de(PLAYER::PLAYER_ID())) {
                return 1;
            } else { 
                return 1;
            }
        }
        break;
    case 2:
        if (((sub_f451(PLAYER::PLAYER_ID()) || sub_f4a6(PLAYER::PLAYER_ID())) || sub_e389()) || sub_f49a()) {
            return 0;
        }
        if (sub_f406(PLAYER::PLAYER_ID())) {
            return 0;
        }
        break;
    case 1:
        if (((((((g_182604[PLAYER::PLAYER_ID()/*324*/] == 0) || (g_182604[PLAYER::PLAYER_ID()/*324*/] == 4)) || (g_182604[PLAYER::PLAYER_ID()/*324*/] == 3)) || sub_f4a6(PLAYER::PLAYER_ID())) || sub_e389()) || sub_f49a()) || sub_f451(PLAYER::PLAYER_ID())) {
            return 0;
        }
        if (sub_f406(PLAYER::PLAYER_ID())) {
            if (sub_f3f2(PLAYER::PLAYER_ID())) {
                return 0;
            } else if (sub_f3de(PLAYER::PLAYER_ID())) {
                return 1;
            } else { 
                return 1;
            }
        }
        break;
    case 14:
        if (NETWORK::NETWORK_IS_ACTIVITY_SESSION() && GAMEPLAY::IS_BIT_SET(g_187385._f11065, 18)) {
            return 0;
        }
        if (sub_e389() || (g_182604[PLAYER::PLAYER_ID()/*324*/] == 32)) {
            return 0;
        }
        if (sub_f4a6(PLAYER::PLAYER_ID())) {
            if ((g_182604[PLAYER::PLAYER_ID()/*324*/] != 5) && (!sub_f49a())) {
                return 1;
            }
        }
        if (sub_f406(PLAYER::PLAYER_ID())) {
            if (sub_f3f2(PLAYER::PLAYER_ID())) {
                return 0;
            } else if (sub_f3de(PLAYER::PLAYER_ID())) {
                return 1;
            } else { 
                return 1;
            }
        }
        if ((g_182604[PLAYER::PLAYER_ID()/*324*/] == 0) && (g_187385._f11 > 1)) {
            return 1;
        }
        return 0;
        break;
    case 6:
        if (sub_e389()) {
            return 1;
        }
        if (sub_f4a6(PLAYER::PLAYER_ID())) {
            return 0;
        }
        if (g_182604[PLAYER::PLAYER_ID()/*324*/] == 0) {
            if (g_187385._f11 <= 1) {
                return 0;
            }
        }
        if (sub_f451(PLAYER::PLAYER_ID())) {
            return 0;
        }
        if (g_182604[PLAYER::PLAYER_ID()/*324*/] == 3) {
            return 0;
        }
        if (sub_f406(PLAYER::PLAYER_ID())) {
            if (sub_f3f2(PLAYER::PLAYER_ID())) {
                return 1;
            } else if (sub_f3de(PLAYER::PLAYER_ID())) {
                return 0;
            } else { 
                return 0;
            }
        }
        break;
    case 20:
        if (NETWORK::NETWORK_IS_ACTIVITY_SESSION() && GAMEPLAY::IS_BIT_SET(g_187385._f11065, 28)) {
            return 0;
        }
        if (sub_e389()) {
            return 1;
        }
        if (sub_f4a6(PLAYER::PLAYER_ID())) {
            return 0;
        }
        if (sub_f451(PLAYER::PLAYER_ID())) {
            return 0;
        }
        if (g_182604[PLAYER::PLAYER_ID()/*324*/] == 3) {
            return 0;
        }
        if (sub_f406(PLAYER::PLAYER_ID())) {
            if (sub_f3f2(PLAYER::PLAYER_ID())) {
                return 0;
            } else if (sub_f3de(PLAYER::PLAYER_ID())) {
                return 0;
            } else { 
                return 1;
            }
        }
        if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) < 1) {
            return 0;
        }
        break;
    case 15:
    case 17:
    case 18:
    case 19:
    case 21:
    case 36:
    case 37:
        if (sub_ef2f(PLAYER::PLAYER_ID(), 1)) {
            return 0;
        }
        break;
    case 35:
        if (sub_ef2f(PLAYER::PLAYER_ID(), 1)) {
            return 0;
        }
        break;
    }
    return 1;
}

auto sub_ef2f(auto a_0, auto a_1) {
    if (a_1) {
        if (sub_ef5b(a_0)) {
            return 1;
        }
    }
    if (g_182604[a_0/*324*/] == -1) {
        return 0;
    }
    return 1;
}

auto sub_ef5b(auto a_0) {
    return sub_ef69(a_0);
}

auto sub_ef69(auto a_0) {
    return GAMEPLAY::IS_BIT_SET(g_182604[a_0/*324*/]._fD._f1, 0);
}

auto sub_ef83(auto a_0) {
    return g_24D5B9[a_0/*254*/]._f72 == 7;
}

auto sub_ef97(auto a_0) {
    return g_24D5B9[a_0/*254*/]._f72 == 2;
}

auto sub_efab(auto a_0) {
    switch (a_0) {
    case ${weapon_crowbar}:
    case 0x92a27487:
    case ${weapon_bat}:
    case ${weapon_knife}:
    case 0xd8df3c3c:
    case 0xf9dcbf2d:
    case ${weapon_bottle}:
    case ${weapon_golfclub}:
    case ${weapon_hammer}:
    case ${weapon_nightstick}:
        return 1;
        break;
    }
    return 0;
}

auto sub_effe(auto a_0) {
    switch (a_0) {
    case ${weapon_grenade}:
    case 0xab564b93:
    case ${weapon_smokegrenade}:
    case ${weapon_molotov}:
    case ${weapon_stickybomb}:
        return 1;
        break;
    }
    return 0;
}

auto sub_f033() {
    if (sub_f3b6() || sub_f3a2()) {
        return sub_f05e(g_187385._f7DBD);
    }
    return g_146194;
}

auto sub_f05e(auto a_0) {
    switch (a_0) {
    case 0:
        return ${weapon_pistol};
        break;
    case 1:
        return ${weapon_combatpistol};
        break;
    case 2:
        return ${weapon_appistol};
        break;
    case 29:
        return ${weapon_snspistol};
        break;
    case 30:
        return ${weapon_heavypistol};
        break;
    case 37:
        return 0x83839c4;
        break;
    case 35:
        return 0x99aeeb3b;
        break;
    case 3:
        return ${weapon_pumpshotgun};
        break;
    case 4:
        return ${weapon_sawnoffshotgun};
        break;
    case 5:
        return ${weapon_assaultshotgun};
        break;
    case 40:
        return 0x3aabbbaa;
        break;
    case 6:
        return ${weapon_microsmg};
        break;
    case 7:
        return ${weapon_smg};
        break;
    case 8:
        return ${weapon_mg};
        break;
    case 9:
        return ${weapon_combatmg};
        break;
    case 31:
        return 0x61012683;
        break;
    case 10:
        return ${weapon_assaultrifle};
        break;
    case 11:
        return ${weapon_carbinerifle};
        break;
    case 12:
        return ${weapon_advancedrifle};
        break;
    case 32:
        return ${weapon_specialcarbine};
        break;
    case 33:
        return ${weapon_bullpuprifle};
        break;
    case 39:
        return 0xa89cb99e;
        break;
    case 13:
        return ${weapon_sniperrifle};
        break;
    case 14:
        return ${weapon_heavysniper};
        break;
    case 41:
        return 0xc734385a;
        break;
    case 15:
        return ${weapon_grenadelauncher};
        break;
    case 16:
        return ${weapon_rpg};
        break;
    case 17:
        return ${weapon_minigun};
        break;
    case 38:
        return 0x7f7497e5;
        break;
    case 43:
        return 0x63ab0442;
        break;
    case 18:
        return ${weapon_grenade};
        break;
    case 19:
        return ${weapon_stickybomb};
        break;
    case 20:
        return ${weapon_smokegrenade};
        break;
    case 21:
        return ${weapon_molotov};
        break;
    case 22:
        return ${weapon_petrolcan};
        break;
    case 44:
        return 0xab564b93;
        break;
    case 23:
        return ${weapon_knife};
        break;
    case 24:
        return ${weapon_nightstick};
        break;
    case 25:
        return ${weapon_bat};
        break;
    case 26:
        return ${weapon_crowbar};
        break;
    case 27:
        return ${weapon_golfclub};
        break;
    case 34:
        return ${weapon_bottle};
        break;
    case 36:
        return 0x92a27487;
        break;
    case 28:
        return ${weapon_unarmed};
        break;
    case 42:
        return 0x47757124;
        break;
    case 45:
        return 0xd8df3c3c;
        break;
    case 46:
        return 0xa3d4d34;
        break;
    case 47:
        return 0xdc4db296;
        break;
    }
    return ${weapon_pistol};
}

auto sub_f3a2() {
    return GAMEPLAY::IS_BIT_SET(g_187385._f9, 19);
}

auto sub_f3b6() {
    return GAMEPLAY::IS_BIT_SET(g_187385._f9, 18);
}

auto sub_f3ca(auto a_0) {
    return g_24D5B9[a_0/*254*/]._f72 == 4;
}

auto sub_f3de(auto a_0) {
    return g_24D5B9[a_0/*254*/]._f72 == 6;
}

auto sub_f3f2(auto a_0) {
    return g_24D5B9[a_0/*254*/]._f72 == 5;
}

auto sub_f406(auto a_0) {
    switch (g_1406C1) {
    case 0:
        if (!sub_f43c(a_0)) {
            if (g_182604[a_0/*324*/] == 0) {
                return 1;
            }
        }
        break;
    }
    return 0;
}

auto sub_f43c(auto a_0) {
    return g_182604[a_0/*324*/]._fA5 != 0;
}

auto sub_f451(auto a_0) {
    switch (g_1406C1) {
    case 0:
        if (!sub_f43c(a_0)) {
            if ((g_182604[a_0/*324*/] == 2) || (g_182604[a_0/*324*/] == 8)) {
                return 1;
            }
        }
        break;
    }
    return 0;
}

auto sub_f49a() {
    return g_180331;
}

auto sub_f4a6(auto a_0) {
    switch (g_1406C1) {
    case 0:
        if (g_182604[a_0/*324*/] == 1) {
            return 1;
        }
        break;
    }
    return 0;
}

auto sub_f4d2() {
    return GAMEPLAY::IS_BIT_SET(g_2554DA._f112D, 6);
}

auto sub_f4e6(auto a_0) {
    v_3 = 0;
    if (GAMEPLAY::IS_BIT_SET(g_187385._f11065, 2) && (a_0 == 0)) {
        v_3 = 1;
    } else if (GAMEPLAY::IS_BIT_SET(g_187385._f11065, 3) && (a_0 == 1)) {
        v_3 = 1;
    } else if (GAMEPLAY::IS_BIT_SET(g_187385._f11065, 4) && (a_0 == 2)) {
        v_3 = 1;
    } else if (GAMEPLAY::IS_BIT_SET(g_187385._f11065, 5) && (a_0 == 3)) {
        v_3 = 1;
    }
    return v_3;
}

auto sub_f574(auto a_0) {
    switch (a_0) {
    case 10:
        if (sub_7076(PLAYER::PLAYER_ID(), 1)) {
            return 0;
        }
        if (sub_d8ec(PLAYER::PLAYER_ID(), 0)) {
            return 0;
        }
        if ((sub_d8ec(PLAYER::PLAYER_ID(), 7) || (g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._fE6 != -1)) || (g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._fE7 != -1)) {
            return 0;
        }
        break;
    case 11:
        if (sub_7076(PLAYER::PLAYER_ID(), 1)) {
            return 0;
        }
        if (sub_d8ec(PLAYER::PLAYER_ID(), 0)) {
            return 0;
        }
        if ((sub_d8ec(PLAYER::PLAYER_ID(), 7) || (g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._fE6 != -1)) || (g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._fE7 != -1)) {
            return 0;
        }
        if (g_6084) {
            return 0;
        }
        break;
    case 8:
        if (sub_7076(PLAYER::PLAYER_ID(), 1)) {
            return 0;
        }
        if (sub_d8ec(PLAYER::PLAYER_ID(), 0)) {
            return 0;
        }
        if ((sub_d8ec(PLAYER::PLAYER_ID(), 7) || (g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._fE6 != -1)) || (g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._fE7 != -1)) {
            return 0;
        }
        break;
    case 0:
        if (sub_7076(PLAYER::PLAYER_ID(), 1)) {
            return 0;
        }
        if (sub_d8ec(PLAYER::PLAYER_ID(), 0)) {
            return 0;
        }
        if ((sub_d8ec(PLAYER::PLAYER_ID(), 7) || (g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._fE6 != -1)) || (g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._fE7 != -1)) {
            return 0;
        }
        break;
    case 9:
        if (sub_7076(PLAYER::PLAYER_ID(), 1)) {
            return 0;
        }
        if (sub_d8ec(PLAYER::PLAYER_ID(), 0)) {
            return 0;
        }
        if ((sub_d8ec(PLAYER::PLAYER_ID(), 7) || (g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._fE6 != -1)) || (g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._fE7 != -1)) {
            return 0;
        }
        break;
    case 13:
        if (sub_7076(PLAYER::PLAYER_ID(), 1)) {
            return 0;
        }
        if (sub_d8ec(PLAYER::PLAYER_ID(), 0)) {
            return 0;
        }
        if ((sub_d8ec(PLAYER::PLAYER_ID(), 7) || (g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._fE6 != -1)) || (g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._fE7 != -1)) {
            return 0;
        }
        break;
    case 7:
        break;
    case 22:
        break;
    case 23:
    case 24:
    case 25:
    case 26:
        break;
    case 12:
        break;
    case 2:
        break;
    case 1:
        break;
    case 14:
        if (sub_7076(PLAYER::PLAYER_ID(), 1)) {
            return 0;
        }
        if (sub_d8ec(PLAYER::PLAYER_ID(), 0)) {
            return 0;
        }
        if ((sub_d8ec(PLAYER::PLAYER_ID(), 7) || (g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._fE6 != -1)) || (g_24D5B9[PLAYER::PLAYER_ID()/*254*/]._fE7 != -1)) {
            return 0;
        }
        for (v_3 = 0; v_3 < 32; v_3 += 1) {
            if (sub_6ae(PLAYER::INT_TO_PLAYERINDEX(v_3), 0, 1)) {
                if (PLAYER::INT_TO_PLAYERINDEX(v_3) != PLAYER::PLAYER_ID()) {
                    if (!sub_a49(PLAYER::INT_TO_PLAYERINDEX(v_3), 0)) {
                        return 1;
                    }
                }
            }
        }
        return 0;
        break;
    case 6:
        if (sub_7076(PLAYER::PLAYER_ID(), 1)) {
            return 0;
        }
        if (sub_d8ec(PLAYER::PLAYER_ID(), 0)) {
            return 0;
        }
        for (v_3 = 0; v_3 < 32; v_3 += 1) {
            if (sub_6ae(PLAYER::INT_TO_PLAYERINDEX(v_3), 0, 1)) {
                if (PLAYER::INT_TO_PLAYERINDEX(v_3) != PLAYER::PLAYER_ID()) {
                    if (!sub_a49(PLAYER::INT_TO_PLAYERINDEX(v_3), 0)) {
                        return 1;
                    }
                }
            }
        }
        return 0;
        break;
    case 20:
        if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) < 1) {
            return 0;
        }
        if (sub_d8ec(PLAYER::PLAYER_ID(), 0) || sub_d8ec(PLAYER::PLAYER_ID(), 16)) {
            return 0;
        }
        break;
    case 15:
    case 17:
    case 18:
    case 19:
    case 21:
    case 36:
    case 37:
        break;
    case 35:
        if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) {
            return 0;
        }
        break;
    }
    return 1;
}

auto sub_f9b1() {
    return GAMEPLAY::IS_BIT_SET(g_182604[PLAYER::PLAYER_ID()/*324*/]._f1F._f12, 14);
}

auto sub_f9ce() {
    sub_fae1(&v_2);
    if (v_2) {
        return 1;
    }
    if (g_141422 == 0) {
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            return 1;
        }
    }
    if (sub_fad2()) {
        return 1;
    }
    if (g_252FC2) {
        return 1;
    }
    if (sub_fac6()) {
        return 1;
    }
    if (sub_faaf(157)) {
        if (!sub_faa0()) {
            return 1;
        }
    }
    if (sub_faaf(155)) {
        return 1;
    }
    if (!NETWORK::NETWORK_IS_SIGNED_ONLINE()) {
        return 1;
    }
    if (sub_fa61() != 0) {
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(sub_fa61()) == 0) {
            return 1;
        }
    }
    return 0;
}

auto sub_fa61() {
    switch (sub_fa95()) {
    case 0:
        return ${freemode};
        break;
    case 2:
        return ${creator};
        break;
    }
    return 0;
}

auto sub_fa95() {
    return g_5F7C;
}

auto sub_faa0() {
    return g_250CE3._f23C;
}

auto sub_faaf(auto a_0) {
    if (SCRIPT::GET_EVENT_EXISTS(1, a_0)) {
        return 1;
    }
    return 0;
}

auto sub_fac6() {
    return g_2528A6;
}

auto sub_fad2() {
    return g_250CE3._f237;
}

void sub_fae1(auto a_0) {
    for (v_3 = 0; v_3 < SCRIPT::GET_NUMBER_OF_EVENTS(1); v_3 += 1) {
        v_4 = SCRIPT::GET_EVENT_AT_INDEX(1, v_3);
        if (v_4 == 168) {
            SCRIPT::GET_EVENT_DATA(1, v_3, &v_5, 2);
            switch (v_5) {
            case 306:
                sub_fb51(v_3);
                break;
            case 2:
                SCRIPT::GET_EVENT_DATA(1, v_3, &v_7, 3);
                if (v_7._f2 == 53) {
                    a_0 = 1;
                }
                break;
            }
        }
    }
}

void sub_fb51(auto a_0) {
    if (SCRIPT::GET_EVENT_DATA(1, a_0, &v_3, 3)) {
        if (sub_6ae(v_3._f1, 1, 1)) {
            v_6 = PLAYER::GET_PLAYER_PED(v_3._f1);
            if (ENTITY::DOES_ENTITY_EXIST(v_6)) {
                if (PED::IS_PED_IN_ANY_VEHICLE(v_6, 0)) {
                    v_7 = PED::GET_VEHICLE_PED_IS_IN(v_6, 0);
                    if (VEHICLE::IS_VEHICLE_WINDOW_INTACT(v_7, v_3._f2) && NETWORK::NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT()) {
                        if (sub_fbd2(v_7, &v_8)) {
                            VEHICLE::REMOVE_VEHICLE_WINDOW(v_7, v_3._f2);
                        }
                        if (v_8) {
                            ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(&v_7);
                        }
                    }
                }
            }
        }
    } else { }
}

auto sub_fbd2(auto a_0, auto a_1) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(a_0)) {
            if (NETWORK::NETWORK_GET_ENTITY_IS_LOCAL(a_0)) {
                ENTITY::SET_ENTITY_AS_MISSION_ENTITY(a_0, 0, 1);
                a_1 = 1;
            }
        }
        if (ENTITY::_DDE6DF5AE89981D2(a_0, 0)) {
            if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(a_0)) {
                return 1;
            }
        } else { }
    } else { }
    return 0;
}

void sub_fc20() {
    sub_c1c();
    sub_fc30();
}

void sub_fc30() {
    SCRIPT::TERMINATE_THIS_THREAD();
}

auto sub_fc3c(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11, auto a_12, auto a_13, auto a_14, auto a_15, auto a_16, auto a_17, auto a_18, auto a_19) {
    sub_fe1f(32, a_0);
    sub_fcfe(0, -1, 0);
    NETWORK::NETWORK_REGISTER_HOST_BROADCAST_VARIABLES(&l_62, 129);
    NETWORK::NETWORK_REGISTER_PLAYER_BROADCAST_VARIABLES(&l_E3, 961);
    GAMEPLAY::SET_THIS_SCRIPT_CAN_BE_PAUSED(0);
    if (!sub_fca5()) {
        return 0;
    }
    g_252B2D = -1;
    g_252B2E = -1;
    g_252B2F = -1;
    g_252B45 = -1;
    g_252B46 = -1;
    g_252B47 = -1;
    g_252BB6 = 0;
    l_E3[PLAYER::_EE68096F9F37341E()/*30*/] = 0;
    return 1;
}

auto sub_fca5() {
    v_2 = 0;
    while (1) {
        v_2 += 1;
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            return 0;
        }
        if (NETWORK::_5D10B3795F3FC886()) {
            return 1;
        }
        if (sub_fad2()) {
            return 0;
        }
        if (sub_faaf(155)) {
            return 0;
        }
        if (v_2 >= 3600) {
            return 0;
        }
        SYSTEM::WAIT(0);
    }
    return 0;
}

auto sub_fcfe(auto a_0, auto a_1, auto a_2) {
    v_5 = NETWORK::NETWORK_GET_SCRIPT_STATUS();
    while (v_5 != 2) {
        if ((((v_5 == 3) || (v_5 == 4)) || (v_5 == 5)) || (v_5 == 6)) {
            if (!a_2) {
                sub_fc30();
            } else { 
                return 0;
            }
        }
        if (!sub_fe13()) {
            if (a_0 == 0) {
                if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    if (!a_2) {
                        sub_fc30();
                    } else { 
                        return 0;
                    }
                }
                if (sub_fad2()) {
                    if (!a_2) {
                        sub_fc30();
                    } else { 
                        return 0;
                    }
                }
                if (sub_faaf(155)) {
                    if (!a_2) {
                        sub_fc30();
                    } else { 
                        return 0;
                    }
                }
            } else if (!NETWORK::NETWORK_IS_IN_SESSION()) {
                if (!a_2) {
                    sub_fc30();
                } else { 
                    return 0;
                }
            }
        }
        SYSTEM::WAIT(0);
        v_5 = NETWORK::NETWORK_GET_SCRIPT_STATUS();
    }
    if (a_1 > -1) {
        g_1406F8 = v_5;
    }
    if (a_0 == 0) {
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (!a_2) {
                sub_fc30();
            } else { 
                return 0;
            }
        }
    } else if (!NETWORK::NETWORK_IS_IN_SESSION()) {
        if (!a_2) {
            sub_fc30();
        } else { 
            return 0;
        }
    }
    return 1;
}

auto sub_fe13() {
    return g_141422;
}

void sub_fe1f(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11, auto a_12, auto a_13, auto a_14, auto a_15, auto a_16, auto a_17, auto a_18, auto a_19, auto a_20) {
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        sub_fc30();
    }
    NETWORK::NETWORK_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT(a_0, 0, a_1._f10);
}