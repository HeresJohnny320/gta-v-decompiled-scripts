// listener's C4 decompiler

void main() {
    l_2 = 1;
    l_3 = 134;
    l_4 = 134;
    l_5 = 1;
    l_6 = 1;
    l_7 = 1;
    l_8 = 134;
    l_9 = 1;
    l_A = 12;
    l_B = 12;
    l_E = 0.001;
    if (PLAYER::_C968670BFACE42D9(3)) {
        sub_894();
        SCRIPT::TERMINATE_THIS_THREAD();
    }
    sub_472();
    while (1) {
        SYSTEM::WAIT(0);
        if (g_3839._f1 != 9) {
            if (!l_11) {
                l_11 = 1;
            } else if (g_3827) {
                if (!l_12) {
                    l_12 = 1;
                    sub_40f(g_3826, "SET_DATA_SLOT_EMPTY", 5.0, 0xbf800000, 0xbf800000, 0xbf800000, 0xbf800000);
                    sub_259(g_3826, 1);
                    sub_40f(g_3826, "DISPLAY_VIEW", 5.0, 0xbf800000, 0xbf800000, 0xbf800000, 0xbf800000);
                } else { 
                    sub_145();
                }
            }
            if (sub_11c()) {
                sub_894();
            }
        }
        if (sub_d9()) {
            sub_894();
        }
    }
}

auto sub_d9() {
    if ((((g_3839._f1 == 1) || (g_3839._f1 == 3)) || (g_3839._f1 == 0)) || (g_3801 == 1)) {
        g_382C = 1;
        return 1;
    } else { 
        return 0;
    }
}

auto sub_11c() {
    if ((g_B35 == 1) || (g_3839._f1 < 7)) {
        g_382C = 1;
        return 1;
    } else { 
        return 0;
    }
}

void sub_145() {
    if (!l_13) {
        if (CONTROLS::IS_CONTROL_PRESSED(2, 172)) {
            l_13 = 1;
            sub_40f(g_3826, "SET_INPUT_EVENT", 1.0, 0xbf800000, 0xbf800000, 0xbf800000, 0xbf800000);
        }
    } else if (!CONTROLS::IS_CONTROL_PRESSED(2, 172)) {
        l_13 = 0;
    }
    if (!l_14) {
        if (CONTROLS::IS_CONTROL_PRESSED(2, 173)) {
            l_14 = 1;
            sub_40f(g_3826, "SET_INPUT_EVENT", 3.0, 0xbf800000, 0xbf800000, 0xbf800000, 0xbf800000);
        }
    } else if (!CONTROLS::IS_CONTROL_PRESSED(2, 173)) {
        l_14 = 0;
    }
    if (!l_15) {
        if (CONTROLS::IS_CONTROL_PRESSED(2, 174)) {
            l_15 = 1;
            sub_40f(g_3826, "SET_INPUT_EVENT", 4.0, 0xbf800000, 0xbf800000, 0xbf800000, 0xbf800000);
        }
    } else if (!CONTROLS::IS_CONTROL_PRESSED(2, 174)) {
        l_15 = 0;
    }
    if (!l_16) {
        if (CONTROLS::IS_CONTROL_PRESSED(2, 175)) {
            l_16 = 1;
            sub_40f(g_3826, "SET_INPUT_EVENT", 2.0, 0xbf800000, 0xbf800000, 0xbf800000, 0xbf800000);
        }
    } else if (!CONTROLS::IS_CONTROL_PRESSED(2, 175)) {
        l_16 = 0;
    }
}

void sub_259(auto a_0, auto a_1) {
    if (g_1559E == g_1559F) {
        if (!a_1) {
            return ;
        }
    }
    if (a_0 == 0) {
        return ;
    }
    if (!GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(a_0)) {
        return ;
    }
    sub_472();
    v_4 = g_155A2;
    v_5 = g_155A1;
    v_6 = 1;
    v_7 = 0;
    v_8 = 0;
    v_9 = 0;
    while (v_6) {
        v_8 = v_7;
        v_7 = g_155A3[v_4/*25*/][v_5/*1*/];
        if (!(v_7 == v_8)) {
            if (!(v_7 == 0)) {
                switch (v_4) {
                case 0:
                    v_A = "fSu";
                    break;
                case 1:
                    v_A = "fMo";
                    break;
                case 2:
                    v_A = "fTu";
                    break;
                case 3:
                    v_A = "fWe";
                    break;
                case 4:
                    v_A = "fTh";
                    break;
                case 5:
                    v_A = "fFr";
                    break;
                case 6:
                    v_A = "fSa";
                    break;
                }
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(a_0, "SET_DATA_SLOT_EMPTY");
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_9);
                GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(a_0, "SET_DATA_SLOT");
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(5);
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_9);
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_5);
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_FLOAT(0.0);
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_FLOAT(-1.0);
                sub_3fd(v_A);
                sub_3fd(sub_3cd(v_7));
                GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                v_9 += 1;
            }
        }
        v_5 += 1;
        if (v_5 > 23) {
            v_5 = 0;
            v_4 += 1;
        }
        if (v_4 > 6) {
            v_4 = 0;
        }
        if ((v_4 == g_155A2) && (v_5 == g_155A1)) {
            v_6 = 0;
        }
    }
    g_1559F = g_1559E;
}

auto sub_3cd(auto a_0) {
    switch (a_0) {
    case 0:
        return "ORG_EV_0";
        break;
    case 1:
        return "ORG_EV_1";
        break;
    }
    return "ORG_EV_0";
}

void sub_3fd(auto a_0) {
    GRAPHICS::_BEGIN_TEXT_COMPONENT(a_0);
    GRAPHICS::_END_TEXT_COMPONENT();
}

void sub_40f(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(a_0, a_1);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_2));
    if (a_3 != -1.0) {
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_3));
    }
    if (a_4 != -1.0) {
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_4));
    }
    if (a_5 != -1.0) {
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_5));
    }
    if (a_6 != -1.0) {
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_6));
    }
    GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
}

void sub_472() {
    if (!g_1559D) {
        g_15655 = TIME::GET_CLOCK_MONTH();
        g_15654 = TIME::GET_CLOCK_DAY_OF_MONTH();
        g_15653 = TIME::GET_CLOCK_HOURS();
        g_1559D = 1;
        g_155A2 = TIME::GET_CLOCK_DAY_OF_WEEK();
        g_155A1 = TIME::GET_CLOCK_HOURS();
        sub_81c();
        return ;
    }
    v_2 = TIME::GET_CLOCK_MONTH();
    v_3 = TIME::GET_CLOCK_DAY_OF_MONTH();
    v_4 = TIME::GET_CLOCK_HOURS();
    v_5 = g_15655;
    v_6 = g_15654;
    v_7 = g_15653;
    v_8 = 0;
    v_9 = 0;
    v_A = 0;
    v_B = 0;
    v_C = 0;
    v_D = sub_70f(v_6, v_5, v_3, v_2);
    if (v_D > 0) {
        v_C = 0;
        if (v_D > 7) {
            v_A = 0;
            v_B = 0;
            for (v_A = 0; v_A < 7; v_A += 1) {
                for (v_B = 0; v_B < 24; v_B += 1) {
                    if (!(g_155A3[v_8/*25*/][v_9/*1*/] == 0)) {
                        g_1559E += 1;
                        g_155A0 -= 1;
                    }
                    g_155A3[v_8/*25*/][v_9/*1*/] = 0;
                }
            }
        } else if (v_D > 1) {
            v_C += (v_D - 1) * 24;
        }
        v_C += 24 - v_7;
        v_C += 24 - (24 - v_4);
        v_A = 0;
        v_9 = g_155A1;
        v_8 = g_155A2;
        for (v_A = 0; v_A < v_C; v_A += 1) {
            if (v_9 > 23) {
                v_9 = 0;
                v_8 += 1;
            }
            if (v_8 > 6) {
                v_8 = 0;
            }
            if (!(g_155A3[v_8/*25*/][v_9/*1*/] == 0)) {
                g_1559E += 1;
                g_155A0 -= 1;
            }
            g_155A3[v_8/*25*/][v_9/*1*/] = 0;
            v_9 += 1;
        }
        g_155A1 = v_9 - 1;
        g_155A2 = v_8;
    } else { 
        if (v_7 > v_4) {
            g_15655 = v_2;
            g_15654 = v_3;
            g_15653 = v_4;
            g_155A2 = TIME::GET_CLOCK_DAY_OF_WEEK();
            g_155A1 = TIME::GET_CLOCK_HOURS();
            return ;
        }
        if (v_7 == v_4) {
            return ;
        } else { 
            v_C = v_4 - v_7;
            v_A = 0;
            v_9 = g_155A1;
            v_8 = g_155A2;
            for (v_A = 0; v_A < v_C; v_A += 1) {
                if (!(g_155A3[v_8/*25*/][v_9/*1*/] == 0)) {
                    g_1559E += 1;
                    g_155A0 -= 1;
                }
                g_155A3[v_8/*25*/][v_9/*1*/] = 0;
                v_9 += 1;
                if (v_9 > 23) {
                    v_9 = 0;
                    v_8 += 1;
                }
                if (v_8 > 6) {
                    v_8 = 0;
                }
            }
            g_155A1 = v_9;
            g_155A2 = v_8;
        }
    }
    if (g_1559E > g_1559F) {}
    if (((v_5 == v_2) && (v_7 == v_4)) && (v_6 == v_3)) {
    } else { 
        g_15655 = v_2;
        g_15654 = v_3;
        g_15653 = v_4;
    }
}

auto sub_70f(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6 = 0;
    if (!(a_1 == a_3)) {
        if (a_1 < a_3) {
            v_7 = sub_7c2(a_1) - (sub_7c2(a_1) - a_0);
            v_8 = 0;
            if (a_3 > (a_1 + 1)) {
                v_9 = a_3 - a_1;
                v_A = a_1 + 1;
                v_6 = 0;
                for (v_6 = 0; v_6 < v_9; v_6 += 1) {
                    if (v_A > 11) {
                        v_A = 0;
                    }
                    v_8 += sub_7c2(v_A);
                    v_A += 1;
                }
            }
            v_B = sub_7c2(a_3) - a_2;
            v_C = (v_7 + v_8) + v_B;
            return v_C;
        }
    } else { 
        if (a_2 < a_0) {
            return 0;
        }
        if (a_2 == a_0) {
            return 0;
        }
        return a_2 - a_0;
    }
    return 0;
}

auto sub_7c2(auto a_0) {
    return sub_7d0(a_0);
}

auto sub_7d0(auto a_0) {
    switch (a_0) {
    case 8:
        return 30;
    case 3:
        return 30;
    case 5:
        return 30;
    case 10:
        return 30;
    case 1:
        return 28;
    }
    return 31;
    return 0;
}

void sub_81c() {
    g_155A1 = 0;
    g_155A2 = 0;
    v_2 = 0;
    v_3 = 0;
    for (v_2 = 0; v_2 < 7; v_2 += 1) {
        for (v_3 = 0; v_3 < 24; v_3 += 1) {
            g_155A3[v_2/*25*/][v_3/*1*/] = 0;
        }
    }
    sub_86a();
}

void sub_86a() {
    g_155A1 = 0;
    g_155A2 = 0;
    g_15653 = TIME::GET_CLOCK_HOURS();
    g_15654 = TIME::GET_CLOCK_DAY_OF_MONTH();
    g_15655 = TIME::GET_CLOCK_MONTH();
}

void sub_894() {
    SCRIPT::TERMINATE_THIS_THREAD();
}