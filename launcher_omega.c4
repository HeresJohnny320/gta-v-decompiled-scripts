// listener's C4 decompiler

void main() {
    l_2 = 1;
    l_3 = 134;
    l_4 = 134;
    l_5 = 1;
    l_6 = 1;
    l_7 = 1;
    l_8 = 134;
    l_9 = 1;
    l_A = 12;
    l_B = 12;
    l_E = 0.001;
    l_13 = "NULL";
    l_14 = 0.0;
    l_18 = -0.0375;
    l_19 = 0.17;
    l_1D = 80.0;
    l_1E = 140.0;
    l_1F = 180.0;
    l_22 = 3;
    l_51 = 1;
    l_52 = 65;
    l_53 = 49;
    l_54 = 64;
    l_58 = UI::_4A9923385BDB9DAD();
    l_59 = UI::_GET_BLIP_INFO_ID_ITERATOR();
    l_5B = sub_dcf0(69);
    l_5C = -1;
    GAMEPLAY::_6F2135B6129620C1(1);
    sub_dcd6();
    asm .vardef<F> 2, "[{\"type\":\"field\",\"value\":[{\"offset\":17,\"value\":2}]},{\"type\":\"field\",\"value\":[{\"offset\":28,\"value\":6}]},{\"type\":\"field\",\"value\":[{\"offset\":35,\"value\":5}]},{\"type\":\"field\",\"value\":[{\"offset\":41,\"value\":6}]}]"
    v_3F/*{3}*/ = {0.0, 0.0, 0.0 };
    sub_dca3(&v_2);
    v_3F/*{3}*/ = l_63._f1[0/*3*/];
    asm .vardef<F> 0x42, "[{\"offset\":0,\"value\":2}]"
    v_42[0/*1*/] = 44;
    v_42[1/*1*/] = 45;
    if (PLAYER::_C968670BFACE42D9(83)) {
        sub_dc91("Force cleanup [TERMINATING]");
        if (v_2 != -1) {
            if (g_178B8[v_2/*10*/]._f9 != -1) {
                sub_dc91("Relinquishing candidate id...");
                sub_dc54(&g_178B8[v_2/*10*/]._f9);
            }
        }
        sub_d8ec(&v_2, 1);
    }
    if (!sub_d7be(&v_42, &v_2, v_3F, 1.0)) {
        sub_d7a4();
        sub_dc91("SCRIPT TERMINATED");
        SCRIPT::TERMINATE_THIS_THREAD();
    }
    if (!sub_d426(v_2)) {
        sub_d7a4();
        sub_dc91("SCRIPT TERMINATED");
        SCRIPT::TERMINATE_THIS_THREAD();
    }
    if (sub_d3d2(v_2)) {
        sub_d7a4();
        sub_dc91("SCRIPT TERMINATED");
        SCRIPT::TERMINATE_THIS_THREAD();
    }
    while (!sub_cc9f(&v_2)) {
        SYSTEM::WAIT(0);
        if (!BRAIN::IS_WORLD_POINT_WITHIN_BRAIN_ACTIVATION_RANGE()) {
            sub_dc91("Player out of range [TERMINATING]");
            sub_d8ec(&v_2, 1);
        }
    }
    GAMEPLAY::CLEAR_AREA(v_3F, v_2._fF, 1, 0, 0, 0);
    if (v_2 == 44) {
        sub_cc37();
    } else if (v_2 == 45) {
        sub_cc29();
    }
    while (1) {
        SYSTEM::WAIT(0);
        if (!sub_b26c(&v_2, 1)) {
            sub_d8ec(&v_2, 1);
        }
        sub_b244(v_2);
        sub_af35(&l_5C, &v_2._f9, v_3F);
        if (v_2 == 44) {
            sub_ac5d(&v_2, v_3F, "SCRAPAU", "SCRAP_1_AMB", 3, "OMEGA", &l_5D);
            sub_ab6b();
        } else if (v_2 == 45) {
            sub_ac5d(&v_2, v_3F, "SCRAPAU", "SCRAP_2_AMB", 3, "OMEGA", &l_5E);
            sub_aa63(&v_2);
        }
        if (sub_98ab(&v_2, 0)) {
            if (!sub_27b(&v_2)) {
                sub_d8ec(&v_2, 1);
            }
            if (sub_25d(&v_2)) {
                sub_d8ec(&v_2, 0);
            }
        }
    }
}

auto sub_25d(auto a_0) {
    while (!g_178B8[a_0/*10*/]) {
        SYSTEM::WAIT(0);
    }
    return 1;
}

auto sub_27b(auto a_0) {
    if (!sub_9887()) {
        while (!sub_941c(a_0)) {
            if (sub_93db(a_0)) {
                sub_9037();
            }
            if (!sub_b26c(a_0, a_0 != 2)) {
                sub_dc91("LAUNCH_RC_MISSION - NOT IS_RC_FINE_AND_IN_RANGE() [TERMINATING]");
                return 0;
            }
            SYSTEM::WAIT(0);
        }
    }
    if (sub_9015()) {
        sub_8fae();
    }
    if (!sub_8633(a_0)) {
        sub_dc91("STEP_7_COMMON_LaunchMission - Trying to launch a null script string name");
        return 0;
    }
    sub_7013(a_0, &v_3);
    v_23/*"16"*/ = sub_6bc6(a_0);
    sub_6b59(&v_23, v_3._f3, 0);
    sub_6b00(a_0);
    if (!sub_9887()) {
        if (a_0._f10 == 2) {
            sub_ccb(&a_0._f1, 0);
        } else { 
            sub_ccb(&a_0._f1, 1);
        }
    }
    sub_33c(a_0, v_3);
    return 1;
}

void sub_33c(auto a_0, auto a_1) {
    sub_cb8(a_1);
    GAMEPLAY::CLEAR_BIT(&g_17C49._f41BC[a_0/*6*/], 5);
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${mission_stat_watcher}) > 0) {
        while (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${mission_stat_watcher}) > 0) {
            sub_c4c();
            SYSTEM::WAIT(0);
        }
    }
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${mission_stat_watcher}) < 1) {
        g_D5DF = 0;
        SCRIPT::REQUEST_SCRIPT("mission_stat_watcher");
        while (!SCRIPT::HAS_SCRIPT_LOADED("mission_stat_watcher")) {
            SYSTEM::WAIT(0);
        }
        SYSTEM::START_NEW_SCRIPT("mission_stat_watcher", 1828);
        SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED("mission_stat_watcher");
    }
    while (!GAMEPLAY::IS_BIT_SET(g_17C49._f41BC[a_0/*6*/], 5)) {
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${mission_stat_watcher}) > 0) {
            GAMEPLAY::SET_BIT(&g_17C49._f41BC[a_0/*6*/], 5);
        }
    }
    sub_3fb(a_0);
}

void sub_3fb(auto a_0) {
    if (g_D5DC == 1) {
        sub_c13();
        g_D5DC = 0;
        if (g_D5D7) {
            return ;
        }
    }
    if (g_3) {
        g_D5DF = 1;
        sub_aa7();
        return ;
    }
    g_D5ED/*"16"*/ = sub_a6f(a_0);
    g_D5E1 = 0;
    g_D5E0 = 0;
    switch (a_0) {
    case 1:
    case 9:
        g_D5D4 = 1;
        g_D5D7 = 1;
        g_D5DA = 1;
        break;
    case 0:
    case 4:
    case 7:
    case 10:
    case 11:
    case 13:
    case 15:
    case 27:
    case 31:
    case 35:
    case 36:
    case 37:
    case 44:
    case 45:
    case 48:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
        g_D5DF = 1;
        g_D5E0 = 1;
        sub_aa7();
        sub_c4c();
        return ;
        break;
    }
    v_3 = g_105B3;
    g_105B3 = 1;
    v_4 = g_105B4;
    g_105B4 = a_0;
    if (!g_D5D4) {
        if (((g_105B4 != v_4) || (g_1051D == 0)) || (v_3 != g_105B3)) {
            g_6075 = 0;
            sub_aa7();
            sub_608(a_0);
        } else { 
            g_D5D7 = 1;
        }
    }
    g_D5FA = GAMEPLAY::GET_GAME_TIMER();
    sub_555();
    g_D5DE = 0;
}

void sub_555() {
    if (!g_D5DB) {
        return ;
    }
    if (g_1051D == 0) {
        return ;
    }
    v_2 = 0;
    for (v_2 = 0; v_2 < g_1051D; v_2 += 1) {
        switch (g_D6BF[g_1051E[v_2/*9*/]/*13*/]) {
        case 1:
        case 9:
            g_1051E[v_2/*9*/]._f3 = 1;
            break;
        case 4:
            if (g_D5E6) {
                g_1051E[v_2/*9*/]._f3 = 1;
            }
            break;
        case 6:
            if (g_D6BF[g_1051E[v_2/*9*/]/*13*/]._f3) {
                if (g_1051E[v_2/*9*/]._f1 != 0) {
                    g_1051E[v_2/*9*/]._f3 = 1;
                }
            }
            break;
        }
    }
    g_D5DB = 0;
}

void sub_608(auto a_0) {
    switch (a_0) {
    case 2:
        sub_9f0(741);
        sub_9f0(742);
        return ;
    case 3:
        sub_9f0(743);
        sub_9f0(744);
        return ;
    case 5:
        sub_9f0(745);
        sub_9f0(746);
        return ;
    case 6:
        sub_9f0(747);
        sub_9f0(748);
        return ;
    case 8:
        sub_9f0(749);
        return ;
    case 12:
        sub_9f0(750);
        return ;
    case 14:
        sub_9f0(751);
        sub_9f0(752);
        return ;
    case 16:
        sub_9f0(753);
        sub_9f0(754);
        return ;
    case 17:
        sub_9f0(755);
        sub_9f0(756);
        sub_9f0(757);
        return ;
    case 18:
        sub_9f0(758);
        sub_9f0(759);
        return ;
    case 19:
        sub_9f0(760);
        sub_9f0(761);
        return ;
    case 20:
        sub_9f0(762);
        return ;
    case 21:
        sub_9f0(763);
        return ;
    case 22:
        sub_9f0(764);
        sub_9f0(765);
        return ;
    case 23:
        sub_9f0(766);
        return ;
    case 25:
        sub_9f0(767);
        sub_9f0(768);
        sub_9f0(769);
        return ;
    case 26:
        sub_9f0(770);
        sub_9f0(771);
        return ;
    case 28:
        sub_9f0(772);
        sub_9f0(773);
        return ;
    case 29:
        sub_9f0(774);
        sub_9f0(775);
        return ;
    case 30:
        sub_9f0(776);
        sub_9f0(777);
        return ;
    case 32:
        sub_9f0(778);
        sub_9f0(779);
        return ;
    case 33:
        sub_9f0(780);
        sub_9f0(781);
        sub_9f0(782);
        return ;
    case 34:
        sub_9f0(783);
        sub_9f0(784);
        return ;
    case 38:
        sub_9f0(785);
        sub_9f0(786);
        return ;
    case 39:
        sub_9f0(787);
        sub_9f0(788);
        return ;
    case 40:
        sub_9f0(789);
        return ;
    case 41:
        sub_9f0(790);
        sub_9f0(791);
        sub_9f0(792);
        return ;
    case 42:
        sub_9f0(793);
        sub_9f0(794);
        sub_9f0(795);
        return ;
    case 43:
        sub_9f0(796);
        sub_9f0(797);
        return ;
    case 46:
        sub_9f0(798);
        sub_9f0(799);
        return ;
    }
    switch (a_0) {
    case 47:
        sub_9f0(800);
        sub_9f0(801);
        return ;
    case 49:
        sub_9f0(802);
        sub_9f0(803);
        return ;
    case 50:
        sub_9f0(804);
        sub_9f0(805);
        return ;
    case 51:
        sub_9f0(806);
        return ;
    case 57:
        sub_9f0(807);
        sub_9f0(808);
        sub_9f0(809);
        return ;
    case 58:
        sub_9f0(828);
        sub_9f0(829);
        sub_9f0(830);
        return ;
    case 59:
        sub_9f0(831);
        sub_9f0(832);
        sub_9f0(833);
        return ;
    case 60:
        sub_9f0(834);
        sub_9f0(835);
        sub_9f0(836);
        return ;
    case 61:
        sub_9f0(837);
        sub_9f0(838);
        sub_9f0(839);
        return ;
    case 62:
        sub_9f0(840);
        sub_9f0(841);
        sub_9f0(842);
        return ;
    case 24:
        sub_9f0(843);
        sub_9f0(844);
        sub_9f0(845);
        return ;
    }
}

void sub_9f0(auto a_0) {
    g_D5D7 = 1;
    g_D5DA = 1;
    if (g_1051D > 15) {
        return ;
    }
    sub_a3b(g_1051D);
    g_1051E[g_1051D/*9*/] = a_0;
    g_1051D += 1;
    if (g_D6BF[a_0/*13*/] == 16) {
        g_105B5 = 1;
    }
}

void sub_a3b(auto a_0) {
    g_1051E[a_0/*9*/]._f1 = 0;
    g_1051E[a_0/*9*/]._f2 = 0.0;
    g_1051E[a_0/*9*/]._f3 = 0;
    g_1051E[a_0/*9*/]._f4 = 0;
}

auto<2> sub_a6f(auto a_0) {
    v_3/*"8"*/ = "";
    v_5/*{2}*/ = sub_6bc6(a_0);
    if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&v_5)) {
    } else { 
        v_3/*"8"*/ = "RC_";
        v_3/*8*/ += v_5;
    }
    return v_3;
}

void sub_aa7() {
    if (g_D5DE) {
        return ;
    }
    g_D5E7 = 0;
    g_1051D = 0;
    g_D5E9 = 0;
    if (g_D5E6) {}
    g_D5E6 = 0;
    sub_bff(0);
    sub_bd5();
    g_105B5 = 0;
    g_D5DD = 1;
    sub_b6d();
    sub_b61();
    sub_b2a();
    sub_afd();
    g_D5D4 = 0;
    g_D5F2 = 0;
    g_D5FA = -1;
}

void sub_afd() {
    v_2 = 0;
    for (v_2 = 0; v_2 < 4; v_2 += 1) {
        g_105D8[v_2/*2*/]._f1 = -1;
    }
    g_105E1 = 0;
}

void sub_b2a() {
    v_2 = 0;
    for (v_2 = 0; v_2 < 16; v_2 += 1) {
        g_105B6[v_2/*2*/] = 0;
        g_105B6[v_2/*2*/]._f1 = -1;
    }
    g_105D7 = 0;
}

void sub_b61() {
    g_D67D = 0;
}

void sub_b6d() {
    g_D5F1 = 0;
    g_D5F5 = sub_bc1(0xd8146ad1);
    g_D5F4 = sub_bc1(0x82feb19d);
    g_D5F7 = sub_bc1(0x8eaf083b);
    g_D5F6 = sub_bc1(0x786bbd76);
    g_D5F9 = sub_bc1(0x9c1a8ca0);
    g_D5F8 = sub_bc1(0x9d82ded);
}

auto sub_bc1(auto a_0) {
    STATS::STAT_GET_INT(a_0, &v_3, -1);
    return v_3;
}

void sub_bd5() {
    g_D5FB = 0;
    v_2 = 0;
    for (v_2 = 0; v_2 < 64; v_2 += 1) {
        g_D5FC[v_2/*2*/] = 0;
    }
}

void sub_bff(auto a_0) {
    g_10B99 = a_0;
    g_10B9A = a_0;
}

void sub_c13() {
    g_D5DC = 1;
    v_2 = 0;
    for (v_2 = 0; v_2 < g_1051D; v_2 += 1) {
        g_1051E[v_2/*9*/]._f3 = 2;
    }
    if (g_D5E6) {}
    g_D5E6 = 0;
}

void sub_c4c() {
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${mission_stat_watcher}) > 0) {
        if (sub_c8e()) {
            if (g_D5D9 && (!g_D5D8)) {
                g_D5D9 = 0;
                GAMEPLAY::TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME("mission_stat_watcher");
            }
        } else { 
            GAMEPLAY::TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME("mission_stat_watcher");
        }
    }
}

auto sub_c8e() {
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${mission_stat_watcher}) < 1) {
        return 0;
    }
    if (!g_D5D7) {
        return 0;
    } else { }
    return g_D5E3;
}

void sub_cb8(auto a_0) {
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, a_0)) {}
}

void sub_ccb(auto a_0, auto a_1) {
    GAMEPLAY::CLEAR_BIT(&g_15F6A._f14, 17);
    sub_ce8(a_0, a_1, 0);
}

void sub_ce8(auto a_0, auto a_1, auto a_2) {
    if ((g_15F6A != 10) && (g_15F6A != 9)) {
        g_164CF/*"32"*/ = a_0;
        sub_19bd(&g_164D7, a_0, 0, "Start", a_1, a_2);
        sub_d2d();
        g_14A41 = 0;
    } else { }
}

void sub_d2d() {
    g_16D94 = g_164D7;
    g_16D94._f1 = g_164D7._f1;
    g_16D94._f6 = g_164D7._f6;
    g_16D94._f7 = g_164D7._f7;
    g_16D94._f8 = g_164D7._f8;
    g_16D94._f2 = g_164D7._f2;
    g_16D94._f3 = g_164D7._f3;
    g_16D94._f4 = g_164D7._f4;
    g_16D94._f5 = g_164D7._f5;
    for (v_3 = 0; v_3 < 3; v_3 += 1) {
        g_16D94._f9[v_3/*1*/] = g_164D7._f9[v_3/*1*/];
        g_16D94._fD[v_3/*1*/] = g_164D7._fD[v_3/*1*/];
        g_16D94._f11[v_3/*1*/] = g_164D7._f11[v_3/*1*/];
        g_16D94._f15[v_3/*1*/] = g_164D7._f15[v_3/*1*/];
        g_16D94._f19[0/*223*/][v_3/*74*/]/*{74}*/ = g_164D7._f19[0/*223*/][v_3/*74*/];
        g_16D94._f19[1/*223*/][v_3/*74*/]/*{74}*/ = g_164D7._f19[1/*223*/][v_3/*74*/];
        for (v_2 = 0; v_2 < 12; v_2 += 1) {
            g_16D94._f1D8[v_3/*65*/][v_2/*1*/] = g_164D7._f1D8[v_3/*65*/][v_2/*1*/];
            g_16D94._f1D8[v_3/*65*/]._fD[v_2/*1*/] = g_164D7._f1D8[v_3/*65*/]._fD[v_2/*1*/];
            g_16D94._f1D8[v_3/*65*/]._f1A[v_2/*1*/] = g_164D7._f1D8[v_3/*65*/]._f1A[v_2/*1*/];
        }
        g_16D94._f1D8[v_3/*65*/]._f3B = g_164D7._f1D8[v_3/*65*/]._f3B;
        g_16D94._f1D8[v_3/*65*/]._f3C = g_164D7._f1D8[v_3/*65*/]._f3C;
        g_16D94._f1D8[v_3/*65*/]._f3D = g_164D7._f1D8[v_3/*65*/]._f3D;
        g_16D94._f1D8[v_3/*65*/]._f3E = g_164D7._f1D8[v_3/*65*/]._f3E;
        g_16D94._f1D8[v_3/*65*/]._f3F = g_164D7._f1D8[v_3/*65*/]._f3F;
        g_16D94._f1D8[v_3/*65*/]._f40 = g_164D7._f1D8[v_3/*65*/]._f40;
        for (v_2 = 0; v_2 < 9; v_2 += 1) {
            g_16D94._f1D8[v_3/*65*/]._f27[v_2/*1*/] = g_164D7._f1D8[v_3/*65*/]._f27[v_2/*1*/];
            g_16D94._f1D8[v_3/*65*/]._f31[v_2/*1*/] = g_164D7._f1D8[v_3/*65*/]._f31[v_2/*1*/];
        }
        for (v_2 = 0; v_2 < 44; v_2 += 1) {
            g_16D94._f29C[v_3/*284*/][v_2/*3*/]/*{3}*/ = g_164D7._f29C[v_3/*284*/][v_2/*3*/];
        }
        for (v_2 = 0; v_2 < 50; v_2 += 1) {
            g_16D94._f29C[v_3/*284*/]._f85[v_2/*3*/]/*{3}*/ = g_164D7._f29C[v_3/*284*/]._f85[v_2/*3*/];
        }
        for (v_2 = 0; v_2 < 4; v_2 += 1) {
            g_16D94._f5F1[v_3/*32*/][v_2/*1*/] = g_164D7._f5F1[v_3/*32*/][v_2/*1*/];
        }
        for (v_2 = 0; v_2 < 10; v_2 += 1) {
            g_16D94._f5F1[v_3/*32*/]._f5[v_2/*1*/] = g_164D7._f5F1[v_3/*32*/]._f5[v_2/*1*/];
        }
        for (v_2 = 0; v_2 < 15; v_2 += 1) {
            g_16D94._f5F1[v_3/*32*/]._f10[v_2/*1*/] = g_164D7._f5F1[v_3/*32*/]._f10[v_2/*1*/];
        }
        g_16D94._f652[v_3/*1*/] = g_164D7._f652[v_3/*1*/];
        for (v_2 = 0; v_2 <= 3; v_2 += 1) {
            g_16D94._f843[v_3/*15*/][v_2/*1*/] = g_164D7._f843[v_3/*15*/][v_2/*1*/];
            g_16D94._f843[v_3/*15*/]._f5[v_2/*1*/] = g_164D7._f843[v_3/*15*/]._f5[v_2/*1*/];
            g_16D94._f843[v_3/*15*/]._fA[v_2/*1*/] = g_164D7._f843[v_3/*15*/]._fA[v_2/*1*/];
        }
        for (v_2 = 0; v_2 <= 2; v_2 += 1) {
            g_16D94._f656[v_3/*164*/][v_2/*1*/] = g_164D7._f656[v_3/*164*/][v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f4[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f4[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f8[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f8[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._fC[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._fC[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f10[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f10[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f14[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f14[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f18[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f18[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f1C[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f1C[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f20[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f20[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f24[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f24[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f28[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f28[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f2C[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f2C[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f30[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f30[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f34[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f34[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f38[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f38[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f3C[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f3C[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f40[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f40[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f44[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f44[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f48[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f48[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f4C[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f4C[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f50[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f50[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f54[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f54[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f58[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f58[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f5C[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f5C[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f60[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f60[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f64[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f64[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f68[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f68[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f6C[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f6C[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f70[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f70[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f74[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f74[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f78[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f78[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f7C[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f7C[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f80[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f80[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f84[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f84[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f88[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f88[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f8C[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f8C[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f90[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f90[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f94[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f94[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f98[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f98[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._f9C[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._f9C[v_2/*1*/];
            g_16D94._f656[v_3/*164*/]._fA0[v_2/*1*/] = g_164D7._f656[v_3/*164*/]._fA0[v_2/*1*/];
        }
    }
    g_16D94._f871/*{3}*/ = g_164D7._f871;
    g_16D94._f871._f3 = g_164D7._f871._f3;
    g_16D94._f877/*{3}*/ = g_164D7._f877;
    g_16D94._f877._f3/*{3}*/ = g_164D7._f877._f3;
    g_16D94._f877._f6 = g_164D7._f877._f6;
    g_16D94._f877._f8 = g_16D94._f877._f8;
    g_16D94._f877._f7 = g_164D7._f877._f7;
    g_16D94._f877._f9 = g_164D7._f877._f9;
    g_16D94._f877._fB = g_164D7._f877._fB;
    g_16D94._f877._fA = g_164D7._f877._fA;
    g_16D94._f877._fC = g_164D7._f877._fC;
    g_16D94._f877._fC._f1/*{4}*/ = g_164D7._f877._fC._f1;
    g_16D94._f877._fC._f5 = g_164D7._f877._fC._f5;
    g_16D94._f877._fC._f6 = g_164D7._f877._fC._f6;
    g_16D94._f877._fC._f7 = g_164D7._f877._fC._f7;
    g_16D94._f877._fC._f8 = g_164D7._f877._fC._f8;
    g_16D94._f877._fC._f9/*{26}*/ = g_164D7._f877._fC._f9;
    g_16D94._f877._fC._f23/*{3}*/ = g_164D7._f877._fC._f23;
    g_16D94._f877._fC._f26 = g_164D7._f877._fC._f26;
    g_16D94._f877._fC._f27 = g_164D7._f877._fC._f27;
    g_16D94._f877._fC._f28 = g_164D7._f877._fC._f28;
    g_16D94._f877._fC._f29 = g_164D7._f877._fC._f29;
    g_16D94._f877._fC._f35 = g_164D7._f877._fC._f35;
    g_16D94._f877._fC._f2A = g_164D7._f877._fC._f2A;
    g_16D94._f877._fC._f2B = g_164D7._f877._fC._f2B;
    g_16D94._f877._fC._f2C = g_164D7._f877._fC._f2C;
    g_16D94._f877._fC._f2D = g_164D7._f877._fC._f2D;
    g_16D94._f877._fC._f2F = g_164D7._f877._fC._f2F;
    g_16D94._f877._fC._f30 = g_164D7._f877._fC._f30;
    g_16D94._f877._fC._f31 = g_164D7._f877._fC._f31;
    g_16D94._f877._fC._f32 = g_164D7._f877._fC._f32;
    g_16D94._f877._fC._f33 = g_164D7._f877._fC._f33;
    g_16D94._f877._fC._f34 = g_164D7._f877._fC._f34;
    g_16D94._f8B9 = g_164D7._f8B9;
    g_16D94._f8B9._f1 = g_164D7._f8B9._f1;
    g_16D94._f8B9._f2 = g_164D7._f8B9._f2;
    g_16D94._f8B9._f3 = g_164D7._f8B9._f3;
}

void sub_19bd(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    a_0 = sub_6ae7();
    a_0._f1 = sub_67fb();
    GAMEPLAY::_GET_WEATHER_TYPE_TRANSITION(&a_0._f6, &a_0._f7, &a_0._f8);
    if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        sub_506e(&a_0._f871, 0);
        sub_5032(PLAYER::PLAYER_PED_ID());
        sub_40ea(PLAYER::PLAYER_PED_ID(), 0);
        WEAPON::GET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), &a_0._f2, 1);
        if ((a_0._f2 == 0) || (a_0._f2 == ${object})) {
            a_0._f2 = ${weapon_unarmed};
        }
    }
    for (v_9 = 0; v_9 < 3; v_9 += 1) {
        a_0._f11[v_9/*1*/] = g_17C49._f6C1._f21B._f126[v_9/*1*/];
        if (v_9 == sub_3fc3()) {
            sub_35f2(PLAYER::PLAYER_PED_ID(), &a_0._f1D8[v_9/*65*/], 1);
        } else { 
            for (v_8 = 0; v_8 < 12; v_8 += 1) {
                a_0._f1D8[v_9/*65*/][v_8/*1*/] = g_15E98[v_9/*65*/][v_8/*1*/];
                a_0._f1D8[v_9/*65*/]._fD[v_8/*1*/] = g_15E98[v_9/*65*/]._fD[v_8/*1*/];
            }
            a_0._f1D8[v_9/*65*/]._f3B = g_15E98[v_9/*65*/]._f3B;
            a_0._f1D8[v_9/*65*/]._f3C = g_15E98[v_9/*65*/]._f3C;
            a_0._f1D8[v_9/*65*/]._f3D = g_15E98[v_9/*65*/]._f3D;
            a_0._f1D8[v_9/*65*/]._f3E = g_15E98[v_9/*65*/]._f3E;
            a_0._f1D8[v_9/*65*/]._f3F = g_15E98[v_9/*65*/]._f3F;
            a_0._f1D8[v_9/*65*/]._f40 = g_15E98[v_9/*65*/]._f40;
            for (v_8 = 0; v_8 < 9; v_8 += 1) {
                a_0._f1D8[v_9/*65*/]._f27[v_8/*1*/] = g_15E98[v_9/*65*/]._f27[v_8/*1*/];
                a_0._f1D8[v_9/*65*/]._f31[v_8/*1*/] = g_15E98[v_9/*65*/]._f31[v_8/*1*/];
            }
        }
        for (v_8 = 0; v_8 < 44; v_8 += 1) {
            a_0._f29C[v_9/*284*/][v_8/*3*/]/*{3}*/ = g_17C49._f6C1._f21B._f12A[v_9/*284*/][v_8/*3*/];
        }
        for (v_8 = 0; v_8 < 50; v_8 += 1) {
            a_0._f29C[v_9/*284*/]._f85[v_8/*3*/]/*{3}*/ = g_17C49._f6C1._f21B._f12A[v_9/*284*/]._f85[v_8/*3*/];
        }
        switch (v_9) {
        case 0:
            STATS::STAT_GET_INT(0xbbe7bea0, &a_0._f5F1[v_9/*32*/][0/*1*/], -1);
            STATS::STAT_GET_INT(0xbd0ac0e6, &a_0._f5F1[v_9/*32*/][1/*1*/], -1);
            STATS::STAT_GET_INT(0x407407aa, &a_0._f5F1[v_9/*32*/]._f5[0/*1*/], -1);
            STATS::STAT_GET_INT(0xae46634d, &a_0._f5F1[v_9/*32*/]._f5[1/*1*/], -1);
            STATS::STAT_GET_INT(0xd25eab9d, &a_0._f5F1[v_9/*32*/]._f5[2/*1*/], -1);
            STATS::STAT_GET_INT(0xbf938607, &a_0._f5F1[v_9/*32*/]._f5[3/*1*/], -1);
            STATS::STAT_GET_INT(0x876d959c, &a_0._f5F1[v_9/*32*/]._f5[4/*1*/], -1);
            STATS::STAT_GET_INT(0x87af642a, &a_0._f5F1[v_9/*32*/]._f10[0/*1*/], -1);
            STATS::STAT_GET_INT(0x4ee77297, &a_0._f5F1[v_9/*32*/]._f10[1/*1*/], -1);
            STATS::STAT_GET_INT(0x2d4e2f65, &a_0._f5F1[v_9/*32*/]._f10[2/*1*/], -1);
            STATS::STAT_GET_INT(0xf079b5bd, &a_0._f5F1[v_9/*32*/]._f10[3/*1*/], -1);
            STATS::STAT_GET_INT(0x40b7d638, &a_0._f5F1[v_9/*32*/]._f10[4/*1*/], -1);
            STATS::STAT_GET_INT(0x13e87c9a, &a_0._f5F1[v_9/*32*/]._f10[5/*1*/], -1);
            STATS::STAT_GET_INT(0xe22a991f, &a_0._f5F1[v_9/*32*/]._f10[6/*1*/], -1);
            STATS::STAT_GET_INT(0xa9322733, &a_0._f5F1[v_9/*32*/]._f10[7/*1*/], -1);
            STATS::STAT_GET_INT(0xf77e43c6, &a_0._f5F1[v_9/*32*/]._f10[8/*1*/], -1);
            STATS::STAT_GET_INT(0xccfeeecc, &a_0._f5F1[v_9/*32*/]._f10[9/*1*/], -1);
            STATS::STAT_GET_INT(0xa43cfe56, &a_0._f5F1[v_9/*32*/]._f10[10/*1*/], -1);
            STATS::STAT_GET_INT(0x72301a3d, &a_0._f5F1[v_9/*32*/]._f10[11/*1*/], -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0xf875dedc, &a_0._f5F1[v_9/*32*/][0/*1*/], -1);
            STATS::STAT_GET_INT(0xb5b048e, &a_0._f5F1[v_9/*32*/][1/*1*/], -1);
            STATS::STAT_GET_INT(0xd3eebb4e, &a_0._f5F1[v_9/*32*/]._f5[0/*1*/], -1);
            STATS::STAT_GET_INT(0xb9588622, &a_0._f5F1[v_9/*32*/]._f5[1/*1*/], -1);
            STATS::STAT_GET_INT(0x3d718e5a, &a_0._f5F1[v_9/*32*/]._f5[2/*1*/], -1);
            STATS::STAT_GET_INT(0x6b5d6a31, &a_0._f5F1[v_9/*32*/]._f5[3/*1*/], -1);
            STATS::STAT_GET_INT(0x9058b423, &a_0._f5F1[v_9/*32*/]._f5[4/*1*/], -1);
            STATS::STAT_GET_INT(0xb19a20d6, &a_0._f5F1[v_9/*32*/]._f10[0/*1*/], -1);
            STATS::STAT_GET_INT(0x84614665, &a_0._f5F1[v_9/*32*/]._f10[1/*1*/], -1);
            STATS::STAT_GET_INT(0x6f2a1bf7, &a_0._f5F1[v_9/*32*/]._f10[2/*1*/], -1);
            STATS::STAT_GET_INT(0xe6fe8b9e, &a_0._f5F1[v_9/*32*/]._f10[3/*1*/], -1);
            STATS::STAT_GET_INT(0xf8c12f23, &a_0._f5F1[v_9/*32*/]._f10[4/*1*/], -1);
            STATS::STAT_GET_INT(0xc31bc3d9, &a_0._f5F1[v_9/*32*/]._f10[5/*1*/], -1);
            STATS::STAT_GET_INT(0xd4596654, &a_0._f5F1[v_9/*32*/]._f10[6/*1*/], -1);
            STATS::STAT_GET_INT(0x2d381820, &a_0._f5F1[v_9/*32*/]._f10[7/*1*/], -1);
            STATS::STAT_GET_INT(0x40febfad, &a_0._f5F1[v_9/*32*/]._f10[8/*1*/], -1);
            STATS::STAT_GET_INT(0x9c7512f, &a_0._f5F1[v_9/*32*/]._f10[9/*1*/], -1);
            STATS::STAT_GET_INT(0x5fd50bf0, &a_0._f5F1[v_9/*32*/]._f10[10/*1*/], -1);
            STATS::STAT_GET_INT(0x9198ef77, &a_0._f5F1[v_9/*32*/]._f10[11/*1*/], -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xa967697, &a_0._f5F1[v_9/*32*/][0/*1*/], -1);
            STATS::STAT_GET_INT(0xe4562a17, &a_0._f5F1[v_9/*32*/][1/*1*/], -1);
            STATS::STAT_GET_INT(0x6aaef0a, &a_0._f5F1[v_9/*32*/]._f5[0/*1*/], -1);
            STATS::STAT_GET_INT(0xf4614a77, &a_0._f5F1[v_9/*32*/]._f5[1/*1*/], -1);
            STATS::STAT_GET_INT(0xe96f3493, &a_0._f5F1[v_9/*32*/]._f5[2/*1*/], -1);
            STATS::STAT_GET_INT(0xdaac970e, &a_0._f5F1[v_9/*32*/]._f5[3/*1*/], -1);
            STATS::STAT_GET_INT(0xcd6f7c94, &a_0._f5F1[v_9/*32*/]._f5[4/*1*/], -1);
            STATS::STAT_GET_INT(0xd87a875, &a_0._f5F1[v_9/*32*/]._f10[0/*1*/], -1);
            STATS::STAT_GET_INT(0x8d73284e, &a_0._f5F1[v_9/*32*/]._f10[1/*1*/], -1);
            STATS::STAT_GET_INT(0x734bf3fc, &a_0._f5F1[v_9/*32*/]._f10[2/*1*/], -1);
            STATS::STAT_GET_INT(0x41ec913e, &a_0._f5F1[v_9/*32*/]._f10[3/*1*/], -1);
            STATS::STAT_GET_INT(0x581ebda2, &a_0._f5F1[v_9/*32*/]._f10[4/*1*/], -1);
            STATS::STAT_GET_INT(0xcc81a66a, &a_0._f5F1[v_9/*32*/]._f10[5/*1*/], -1);
            STATS::STAT_GET_INT(0x9ab3c2cf, &a_0._f5F1[v_9/*32*/]._f10[6/*1*/], -1);
            STATS::STAT_GET_INT(0xb0deef25, &a_0._f5F1[v_9/*32*/]._f10[7/*1*/], -1);
            STATS::STAT_GET_INT(0x7f240bb0, &a_0._f5F1[v_9/*32*/]._f10[8/*1*/], -1);
            STATS::STAT_GET_INT(0xff888c7b, &a_0._f5F1[v_9/*32*/]._f10[9/*1*/], -1);
            STATS::STAT_GET_INT(0xffba48db, &a_0._f5F1[v_9/*32*/]._f10[10/*1*/], -1);
            STATS::STAT_GET_INT(0xf293ae8e, &a_0._f5F1[v_9/*32*/]._f10[11/*1*/], -1);
            break;
        }
        a_0._f9[v_9/*1*/] = g_17C49._f5CED._fE9[v_9/*69*/]._f1;
        a_0._fD[v_9/*1*/] = g_CAD5[v_9/*1*/];
        a_0._f19[0/*223*/][v_9/*74*/]/*{74}*/ = g_17C49._f6C1._f21B._f663[0/*223*/][v_9/*74*/];
        a_0._f19[1/*223*/][v_9/*74*/]/*{74}*/ = g_17C49._f6C1._f21B._f663[1/*223*/][v_9/*74*/];
        for (v_8 = 0; v_8 <= 3; v_8 += 1) {
            a_0._f843[v_9/*15*/][v_8/*1*/] = g_17C49._f6C1._f1ED[v_9/*15*/][v_8/*1*/];
            a_0._f843[v_9/*15*/]._f5[v_8/*1*/] = g_17C49._f6C1._f1ED[v_9/*15*/]._f5[v_8/*1*/];
            a_0._f843[v_9/*15*/]._fA[v_8/*1*/] = g_17C49._f6C1._f1ED[v_9/*15*/]._fA[v_8/*1*/];
        }
        for (v_8 = 0; v_8 <= 2; v_8 += 1) {
            a_0._f656[v_9/*164*/][v_8/*1*/] = g_17C49._f6C1[v_9/*164*/][v_8/*1*/];
            a_0._f656[v_9/*164*/]._f4[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f4[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f8[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f8[v_8/*1*/];
            a_0._f656[v_9/*164*/]._fC[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._fC[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f10[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f10[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f14[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f14[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f18[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f18[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f1C[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f1C[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f20[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f20[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f24[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f24[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f28[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f28[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f2C[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f2C[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f30[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f30[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f34[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f34[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f38[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f38[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f3C[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f3C[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f40[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f40[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f44[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f44[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f48[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f48[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f4C[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f4C[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f50[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f50[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f54[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f54[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f58[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f58[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f5C[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f5C[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f60[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f60[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f64[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f64[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f68[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f68[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f6C[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f6C[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f70[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f70[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f74[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f74[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f78[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f78[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f7C[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f7C[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f80[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f80[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f84[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f84[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f88[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f88[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f8C[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f8C[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f90[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f90[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f94[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f94[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f98[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f98[v_8/*1*/];
            a_0._f656[v_9/*164*/]._f9C[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._f9C[v_8/*1*/];
            a_0._f656[v_9/*164*/]._fA0[v_8/*1*/] = g_17C49._f6C1[v_9/*164*/]._fA0[v_8/*1*/];
        }
    }
    STATS::STAT_GET_INT(0xdcdd4ca8, &a_0._f652[0/*1*/], -1);
    STATS::STAT_GET_INT(0x15151676, &a_0._f652[1/*1*/], -1);
    STATS::STAT_GET_INT(0x78fe7a3, &a_0._f652[2/*1*/], -1);
    a_0._f5 = 145;
    if (a_4 == 1) {
        sub_2863(&a_0._f877, a_0, a_5, 1, 1, 0);
    }
    sub_2841(&a_0._f8B9);
    a_3 = a_3;
    a_2 = a_2;
}

auto sub_2841(auto a_0) {
    a_0 = g_150C8;
    a_0._f1 = g_150C9;
    a_0._f2 = 0;
    a_0._f3 = 0;
    return 1;
}

void sub_2863(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (a_2 == 0) {
        a_2 = PLAYER::PLAYER_PED_ID();
    } else { }
    if (ENTITY::DOES_ENTITY_EXIST(a_2)) {
        a_1._f5 = sub_358b(a_2);
    }
    if (sub_3314(a_2, &v_8, a_3, a_5)) {
        sub_28ea(a_0, a_1, v_8, a_4);
    } else if (ENTITY::DOES_ENTITY_EXIST(v_8)) {
        if (!ENTITY::IS_ENTITY_DEAD(v_8)) {
            if (VEHICLE::IS_VEHICLE_MODEL(v_8, ${skylift}) && PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), v_8, 0)) {
                sub_28ea(a_0, a_1, v_8, a_4);
            }
        }
    }
}

auto sub_28ea(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (VEHICLE::IS_VEHICLE_DRIVEABLE(a_2, 0)) {
        sub_2958(a_0, a_2, a_3);
        a_1._f4 = a_2;
        if (sub_292a(a_2)) {
            a_1._f3 = 1;
        } else { 
            a_1._f3 = 0;
        }
        return 1;
    } else { }
    return 0;
}

auto sub_292a(auto a_0) {
    for (v_3 = 0; v_3 <= 6; v_3 += 1) {
        if (g_15F6A._f16[v_3/*1*/] == a_0) {
            return 1;
        }
    }
    return 0;
}

void sub_2958(auto a_0, auto a_1, auto a_2) {
    sub_2e2d(a_1, &a_0._fC);
    a_0._f7 = sub_2ad9(a_1, 145, 0);
    a_0._fB = sub_2a76(a_1);
    if (!a_0._f7) {
        if (!a_0._fA) {
            a_0._fA = sub_2a34(a_1);
        }
    }
    if (a_2 == 1) {
        a_0/*{3}*/ = ENTITY::GET_ENTITY_COORDS(a_1, 1);
        a_0._f6 = ENTITY::GET_ENTITY_HEADING(a_1);
        a_0._f3/*{3}*/ = ENTITY::GET_ENTITY_VELOCITY(a_1);
        if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(a_1, -1154.3255615234375, -1523.871337890625, 3.2621889114379883, -1158.4525146484375, -1517.7496337890625, 6.374244213104248, 13.0, 0, 1, 0)) {
            a_0/*{3}*/ = {-1160.0950927734375, -1515.406982421875, 3.1496 };
            a_0._f6 = 305.64239501953125;
        }
        if (g_109CB == a_1) {
            a_0._f9 = 1;
        }
    }
    if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
        a_0._f8 = 1;
    } else { 
        a_0._f8 = 0;
    }
}

auto sub_2a34(auto a_0) {
    for (v_3 = 0; v_3 < 68; v_3 += 1) {
        if (ENTITY::DOES_ENTITY_EXIST(g_10642._f1E4[v_3/*1*/])) {
            if (a_0 == g_10642._f1E4[v_3/*1*/]) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_2a76(auto a_0) {
    if (!ENTITY::DOES_ENTITY_EXIST(a_0)) {
        return 145;
    }
    if (!VEHICLE::IS_VEHICLE_DRIVEABLE(a_0, 0)) {
        return 145;
    }
    for (v_3 = 0; v_3 < 9; v_3 += 1) {
        if (ENTITY::DOES_ENTITY_EXIST(g_15692[v_3/*1*/])) {
            if (g_15692[v_3/*1*/] == a_0) {
                return g_1569C[v_3/*1*/];
            }
        }
    }
    return 145;
}

auto sub_2ad9(auto a_0, auto a_1, auto a_2) {
    if (!ENTITY::DOES_ENTITY_EXIST(a_0)) {
        return 0;
    }
    if (!VEHICLE::IS_VEHICLE_DRIVEABLE(a_0, 0)) {
        return 0;
    }
    for (v_5 = 0; v_5 < 9; v_5 += 1) {
        if (ENTITY::DOES_ENTITY_EXIST(g_15692[v_5/*1*/])) {
            if (g_15692[v_5/*1*/] == a_0) {
                if ((a_1 == 145) || (a_1 == g_1569C[v_5/*1*/])) {
                    if ((a_2 == 0) || (ENTITY::GET_ENTITY_MODEL(a_0) == sub_2b67(a_1, a_2))) {
                        return 1;
                    }
                }
            }
        }
    }
    return 0;
}

auto sub_2b67(auto a_0, auto a_1) {
    if (sub_2e21(a_0)) {
        asm .vardef<F> 4, "[{\"type\":\"field\",\"value\":[{\"offset\":11,\"value\":12}]},{\"type\":\"field\",\"value\":[{\"offset\":31,\"value\":25}]},{\"type\":\"field\",\"value\":[{\"offset\":57,\"value\":2}]}]"
        sub_2ba9(a_0, &v_4, a_1);
        return v_4;
    } else if (a_0 != 145) {}
    return 0;
}

void sub_2ba9(auto a_0, auto a_1, auto a_2) {
    asm .vardef<F> 6, "[{\"type\":\"field\",\"value\":[{\"offset\":11,\"value\":12}]},{\"type\":\"field\",\"value\":[{\"offset\":31,\"value\":25}]},{\"type\":\"field\",\"value\":[{\"offset\":57,\"value\":2}]}]"
    v_6._f40 = 1;
    v_6._f3C = 255;
    v_6._f3D = 255;
    v_6._f3E = 255;
    v_6._f49 = 1;
    v_6._f3 = 1000;
    v_6._f1 = 0;
    switch (a_0) {
    case 0:
        v_5 = ${tailgater};
        if (g_17C49._f1CAD._f63._f3A[128/*1*/] && (!g_17C49._f1CAD._f63._f3A[131/*1*/])) {
            v_5 = ${premier};
        }
        switch (v_5) {
        case ${tailgater}:
            v_6 = v_5;
            v_6._f2 = 3.0;
            v_6._f4 = 0;
            v_6._f9 = 1;
            v_6._fB[0/*1*/] = 1;
            v_6._f1B/*"16"*/ = "5MDS003";
            break;
        case ${premier}:
            v_6 = v_5;
            v_6._f2 = 14.899999999999999;
            v_6._f5 = 43;
            v_6._f6 = 43;
            v_6._f7 = 0;
            v_6._f8 = 156;
            v_6._f9 = 0;
            v_6._f1B/*"16"*/ = "880HS955";
            break;
        }
        break;
    case 2:
        v_5 = ${bodhi2};
        switch (v_5) {
        case ${bodhi2}:
            v_6 = v_5;
            v_6._f2 = 14.0;
            v_6._f5 = 32;
            v_6._f6 = 0;
            v_6._f7 = 0;
            v_6._f8 = 156;
            v_6._f1B/*"16"*/ = "BETTY 32";
            if (g_17C49._f1CAD._f63._f3A[119/*1*/]) {
                v_6._fB[1/*1*/] = 1;
            }
            break;
        }
        break;
    case 1:
        if (a_2 == 1) {
            v_5 = ${buffalo2};
        } else if (a_2 == 2) {
            v_5 = ${bagger};
        } else if (g_17C49._f1CAD._f63._f3A[118/*1*/]) {
            v_5 = ${bagger};
        } else { 
            v_5 = ${buffalo2};
        }
        switch (v_5) {
        case ${bagger}:
            v_6 = v_5;
            v_6._f2 = 6.0;
            v_6._f5 = 53;
            v_6._f6 = 0;
            v_6._f7 = 59;
            v_6._f8 = 156;
            v_6._f1B/*"16"*/ = "FC88";
            break;
        case ${buffalo2}:
            v_6 = v_5;
            v_6._f2 = 0.0;
            v_6._f5 = 111;
            v_6._f6 = 111;
            v_6._f7 = 0;
            v_6._f8 = 156;
            v_6._fA = 1;
            v_6._f1B/*"16"*/ = "FC1988";
            v_6._fB[0/*1*/] = 1;
            v_6._fB[1/*1*/] = 1;
            v_6._fB[2/*1*/] = 1;
            v_6._fB[3/*1*/] = 1;
            v_6._fB[4/*1*/] = 1;
            v_6._fB[5/*1*/] = 1;
            v_6._fB[6/*1*/] = 1;
            v_6._fB[7/*1*/] = 1;
            v_6._fB[8/*1*/] = 1;
            break;
        }
        break;
    default:
        break;
    }
    a_1/*{74}*/ = v_6;
}

auto sub_2e21(auto a_0) {
    return a_0 < 3;
}

void sub_2e2d(auto a_0, auto a_1) {
    if (VEHICLE::IS_VEHICLE_DRIVEABLE(a_0, 0)) {
        sub_3263(a_1);
        a_1._f2A = ENTITY::GET_ENTITY_MODEL(a_0);
        a_1._f1/*"16"*/ = VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT(a_0);
        a_1 = VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(a_0);
        VEHICLE::GET_VEHICLE_COLOURS(a_0, &a_1._f5, &a_1._f6);
        VEHICLE::GET_VEHICLE_EXTRA_COLOURS(a_0, &a_1._f7, &a_1._f8);
        VEHICLE::GET_VEHICLE_TYRE_SMOKE_COLOR(a_0, &a_1._f26, &a_1._f27, &a_1._f28);
        a_1._f29 = VEHICLE::GET_VEHICLE_WINDOW_TINT(a_0);
        a_1._f2B = VEHICLE::GET_VEHICLE_LIVERY(a_0);
        a_1._f2D = VEHICLE::GET_VEHICLE_WHEEL_TYPE(a_0);
        a_1._f2E = VEHICLE::GET_VEHICLE_DOOR_LOCK_STATUS(a_0);
        VEHICLE::GET_VEHICLE_CUSTOM_SECONDARY_COLOUR(a_0, &a_1._f2F, &a_1._f30, &a_1._f31);
        VEHICLE::_GET_VEHICLE_NEON_LIGHTS_COLOUR(a_0, &a_1._f32, &a_1._f33, &a_1._f34);
        if (VEHICLE::_IS_VEHICLE_NEON_LIGHT_ENABLED(a_0, 2)) {
            GAMEPLAY::SET_BIT(&a_1._f35, 28);
        }
        if (VEHICLE::_IS_VEHICLE_NEON_LIGHT_ENABLED(a_0, 3)) {
            GAMEPLAY::SET_BIT(&a_1._f35, 29);
        }
        if (VEHICLE::_IS_VEHICLE_NEON_LIGHT_ENABLED(a_0, 0)) {
            GAMEPLAY::SET_BIT(&a_1._f35, 30);
        }
        if (VEHICLE::_IS_VEHICLE_NEON_LIGHT_ENABLED(a_0, 1)) {
            GAMEPLAY::SET_BIT(&a_1._f35, 31);
        }
        if ((a_1._f29 == -1) && (a_1._f2A != ${granger})) {
            a_1._f29 = 0;
        }
        if (VEHICLE::IS_VEHICLE_A_CONVERTIBLE(a_0, 0)) {
            a_1._f2C = VEHICLE::GET_CONVERTIBLE_ROOF_STATE(a_0);
        }
        if (VEHICLE::IS_THIS_MODEL_A_PLANE(a_1._f2A)) {
            if (VEHICLE::_4198AB0022B15F87(a_0)) {
                switch (VEHICLE::_9B0F3DCA3DB0F4CD(a_0)) {
                case 0:
                case 2:
                    GAMEPLAY::CLEAR_BIT(&a_1._f35, 23);
                    GAMEPLAY::SET_BIT(&a_1._f35, 22);
                    break;
                case 1:
                case 3:
                    GAMEPLAY::CLEAR_BIT(&a_1._f35, 23);
                    GAMEPLAY::CLEAR_BIT(&a_1._f35, 22);
                    break;
                case 4:
                    GAMEPLAY::SET_BIT(&a_1._f35, 23);
                    break;
                }
            } else { 
                GAMEPLAY::SET_BIT(&a_1._f35, 23);
            }
        }
        if (!VEHICLE::GET_VEHICLE_TYRES_CAN_BURST(a_0)) {
            GAMEPLAY::SET_BIT(&a_1._f35, 9);
        }
        if (VEHICLE::IS_VEHICLE_STOLEN(a_0)) {
            GAMEPLAY::SET_BIT(&a_1._f35, 10);
        }
        if (VEHICLE::GET_IS_VEHICLE_PRIMARY_COLOUR_CUSTOM(a_0)) {
            GAMEPLAY::SET_BIT(&a_1._f35, 13);
            VEHICLE::GET_VEHICLE_CUSTOM_PRIMARY_COLOUR(a_0, &a_1._f2F, &a_1._f30, &a_1._f31);
        } else { }
        if (VEHICLE::GET_IS_VEHICLE_SECONDARY_COLOUR_CUSTOM(a_0)) {
            GAMEPLAY::SET_BIT(&a_1._f35, 12);
        }
        sub_3189(&a_0, &a_1._f9, &a_1._f23);
        for (v_4 = 0; v_4 <= 11; v_4 += 1) {
            if (VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(a_0, v_4 + 1)) {
                GAMEPLAY::SET_BIT(&a_1._f35, sub_30d9(v_4 + 1));
            }
        }
        if (GRAPHICS::_060D935D3981A275(a_0, 0)) {
            GAMEPLAY::SET_BIT(&a_1._f35, 11);
        } else { 
            GAMEPLAY::CLEAR_BIT(&a_1._f35, 11);
        }
        if (DECORATOR::_DOES_DECORATOR_EXIST(a_0, "IgnoredByQuickSave") && DECORATOR::_GET_DECORATOR_BOOL(a_0, "IgnoredByQuickSave")) {
            GAMEPLAY::SET_BIT(&a_1._f35, 27);
        } else { 
            GAMEPLAY::CLEAR_BIT(&a_1._f35, 27);
        }
    }
}

auto sub_30d9(auto a_0) {
    switch (a_0) {
    case 1:
        return 0;
        break;
    case 2:
        return 1;
        break;
    case 3:
        return 2;
        break;
    case 4:
        return 3;
        break;
    case 5:
        return 4;
        break;
    case 6:
        return 5;
        break;
    case 7:
        return 6;
        break;
    case 8:
        return 7;
        break;
    case 9:
        return 8;
        break;
    case 10:
        return 24;
        break;
    case 11:
        return 25;
        break;
    case 12:
        return 26;
        break;
    }
    return 0;
}

auto sub_3189(auto a_0, auto a_1, auto a_2) {
    if (!VEHICLE::IS_VEHICLE_DRIVEABLE(a_0, 0)) {
        return 0;
    }
    if (VEHICLE::GET_NUM_MOD_KITS(a_0) == 0) {
        return 0;
    }
    for (v_5 = 0; v_5 < a_1; v_5 += 1) {
        v_6 = v_5;
        if ((((((v_6 == 17) || (v_6 == 18)) || (v_6 == 19)) || (v_6 == 20)) || (v_6 == 21)) || (v_6 == 22)) {
            a_1[v_5/*1*/] = 0;
            if (VEHICLE::IS_TOGGLE_MOD_ON(a_0, v_6)) {
                a_1[v_5/*1*/] = 1;
            }
        } else { 
            a_1[v_5/*1*/] = VEHICLE::GET_VEHICLE_MOD(a_0, v_5) + 1;
            if (v_5 == 23) {
                a_2[0/*1*/] = VEHICLE::GET_VEHICLE_MOD_VARIATION(a_0, v_5);
            } else if (v_5 == 24) {
                a_2[1/*1*/] = VEHICLE::GET_VEHICLE_MOD_VARIATION(a_0, v_5);
            }
        }
    }
    return 1;
}

void sub_3263(auto a_0) {
    a_0._f2A = 0;
    a_0._f35 = 0;
    a_0._f29 = 0;
    a_0._f26 = 0;
    a_0._f27 = 0;
    a_0._f28 = 0;
    a_0._f32 = 0;
    a_0._f33 = 0;
    a_0._f34 = 0;
    a_0 = 0;
    a_0._f1/*"16"*/ = "";
    a_0._f5 = 0;
    a_0._f6 = 0;
    a_0._f7 = 0;
    a_0._f8 = 0;
    for (v_3 = 0; v_3 < 25; v_3 += 1) {
        a_0._f9[v_3/*1*/] = 0;
    }
    for (v_3 = 0; v_3 < 2; v_3 += 1) {
        a_0._f23[v_3/*1*/] = 0;
    }
    a_0._f2B = 0;
    a_0._f2C = 0;
    a_0._f2D = 0;
    a_0._f2E = 1;
    a_0._f2F = 0;
    a_0._f30 = 0;
    a_0._f31 = 0;
}

auto sub_3314(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!PED::IS_PED_INJURED(a_0)) {
            if (a_0 == PLAYER::PLAYER_PED_ID()) {
                a_1 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
            } else { 
                a_1 = PED::GET_VEHICLE_PED_IS_IN(a_0, 1);
            }
            if (ENTITY::DOES_ENTITY_EXIST(a_1)) {
                if (VEHICLE::IS_VEHICLE_DRIVEABLE(a_1, 0)) {
                    if ((a_2 == 0) || (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(a_1, 1), ENTITY::GET_ENTITY_COORDS(a_0, 1), 1) < 100.0)) {
                        if (VEHICLE::IS_VEHICLE_MODEL(a_1, ${taxi})) {
                            if ((VEHICLE::GET_PED_IN_VEHICLE_SEAT(a_1, -1) != a_0) && (VEHICLE::GET_PED_IN_VEHICLE_SEAT(a_1, -1) != 0)) {
                                return 0;
                            }
                        }
                        if (sub_3441(a_1, sub_6ae7(), 1)) {
                            v_6 = SCRIPT::GET_THIS_SCRIPT_NAME();
                            if (!GAMEPLAY::ARE_STRINGS_EQUAL(v_6, "save_anywhere")) {
                                return 0;
                            } else if (!PED::IS_PED_IN_ANY_VEHICLE(a_0, 1)) {
                                return 0;
                            } else { }
                        } else { }
                        if (a_3 == 1) {
                            if (DECORATOR::_DOES_DECORATOR_EXIST(a_1, "IgnoredByQuickSave")) {
                                if (DECORATOR::_GET_DECORATOR_BOOL(a_1, "IgnoredByQuickSave")) {
                                    return 0;
                                }
                            }
                        } else if (VEHICLE::IS_VEHICLE_MODEL(a_1, ${blimp})) {
                            return 0;
                        }
                        return 1;
                    }
                }
            } else { }
        } else { }
    } else { }
    return 0;
}

auto sub_3441(auto a_0, auto a_1, auto a_2) {
    if ((!ENTITY::DOES_ENTITY_EXIST(a_0)) || (!VEHICLE::IS_VEHICLE_DRIVEABLE(a_0, 0))) {
        return 0;
    }
    v_5 = 0;
    while (sub_34b2(a_1, v_5, &v_6, &v_E)) {
        if ((!a_2) || GAMEPLAY::IS_BIT_SET(g_17C49._f156E[v_E/*1*/], 0)) {
            if (VEHICLE::IS_VEHICLE_IN_GARAGE_AREA(&v_6, a_0)) {
                return 1;
            } else { }
        } else { }
        v_5 += 1;
    }
    return 0;
}

auto sub_34b2(auto a_0, auto a_1, auto a_2, auto a_3) {
    a_2/*"32"*/ = "";
    switch (a_0) {
    case 0:
        if (a_1 == 0) {
            a_2/*"32"*/ = "Michael - Beverly Hills";
            a_3 = 0;
            return 1;
        } else if (a_1 == 1) {
            a_2/*"32"*/ = "Trevor - Countryside";
            a_3 = 1;
            return 1;
        }
        break;
    case 1:
        if (a_1 == 0) {
            a_2/*"32"*/ = "Franklin - Aunt";
            a_3 = 5;
            return 1;
        } else if (a_1 == 1) {
            a_2/*"32"*/ = "Franklin - Hills";
            a_3 = 6;
            return 1;
        }
        break;
    case 2:
        if (a_1 == 0) {
            a_2/*"32"*/ = "Trevor - Countryside";
            a_3 = 2;
            return 1;
        } else if (a_1 == 1) {
            a_2/*"32"*/ = "Trevor - City";
            a_3 = 3;
            return 1;
        } else if (a_1 == 2) {
            a_2/*"32"*/ = "Trevor - Stripclub";
            a_3 = 4;
            return 1;
        }
        break;
    }
    return 0;
}

auto sub_358b(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        v_4 = ENTITY::GET_ENTITY_MODEL(a_0);
        for (v_3 = 0; v_3 <= 2; v_3 += 1) {
            if (sub_35c8(v_3) == v_4) {
                return v_3;
            }
        }
    }
    return 145;
}

auto sub_35c8(auto a_0) {
    if (sub_2e21(a_0)) {
        return g_17C49._f744E[a_0/*29*/];
    } else if (a_0 != 145) {}
    return 0;
}

void sub_35f2(auto a_0, auto a_1, auto a_2) {
    if (!PED::IS_PED_INJURED(a_0)) {
        v_5 = sub_358b(a_0);
        for (v_6 = 0; v_6 < 12; v_6 += 1) {
            sub_3d82(a_0, v_6, &a_1._fD[v_6/*1*/], &a_1[v_6/*1*/], &a_1._f1A[v_6/*1*/], a_2, 145);
        }
        for (v_6 = 0; v_6 < 9; v_6 += 1) {
            sub_383a(a_0, v_6, &a_1._f27[v_6/*1*/], &a_1._f31[v_6/*1*/], a_2, 145);
        }
        if (sub_2e21(v_5)) {
            a_1._f3B = g_17C49._f6C1._f21B[v_5/*65*/]._f3B;
            a_1._f3C = g_17C49._f6C1._f21B[v_5/*65*/]._f3C;
            a_1._f3D = g_17C49._f6C1._f21B[v_5/*65*/]._f3D;
            a_1._f3E = g_17C49._f6C1._f21B[v_5/*65*/]._f3E;
            a_1._f3F = g_17C49._f6C1._f21B[v_5/*65*/]._f3F;
            a_1._f40 = g_17C49._f6C1._f21B[v_5/*65*/]._f40;
        } else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (ENTITY::GET_ENTITY_MODEL(a_0) == ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()))) {
            if (sub_380e(161, -1)) {
                a_1._f3B = sub_379c(2035, g_10A08, 0);
            } else { 
                a_1._f3B = sub_379c(740, g_10A08, 0);
            }
            a_1._f3C = sub_379c(741, g_10A08, 0);
            a_1._f3D = sub_379c(742, g_10A08, 0);
        }
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (a_0 == PLAYER::PLAYER_PED_ID())) {
            if (sub_380e(161, -1)) {
                a_1._f3B = sub_379c(2035, g_10A08, 0);
            } else { 
                a_1._f3B = sub_379c(740, g_10A08, 0);
            }
        }
    }
}

auto sub_379c(auto a_0, auto a_1, auto a_2) {
    if (a_2 == 0) {}
    v_5 = g_25744D[a_0/*6*/][sub_37ce(a_1)/*1*/];
    if (STATS::STAT_GET_INT(v_5, &v_6, -1)) {
        return v_6;
    }
    return 0;
}

auto sub_37ce(auto a_0) {
    v_3 = a_0;
    if (v_3 == -1) {
        v_4 = sub_3802();
        if (v_4 > -1) {
            g_25732E = 0;
            v_3 = v_4;
        } else { 
            v_3 = 0;
            g_25732E = 1;
        }
    }
    return v_3;
}

auto sub_3802() {
    return g_1407E1;
}

auto sub_380e(auto a_0, auto a_1) {
    v_4 = g_25BDB1[a_0/*6*/][sub_37ce(a_1)/*1*/];
    if (STATS::STAT_GET_BOOL(v_4, &v_5, -1)) {
        return v_5;
    }
    return 0;
}

void sub_383a(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    v_8 = sub_358b(a_0);
    if (a_0 != 0) {
        a_2 = PED::GET_PED_PROP_INDEX(a_0, a_1);
        a_3 = PED::GET_PED_PROP_TEXTURE_INDEX(a_0, a_1);
    } else { 
        v_8 = a_5;
    }
    if (a_4 == 0) {
        return ;
    }
    if (a_1 == 0) {
        if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
            if (a_0 != 0) {
                if (PED::IS_PED_WEARING_HELMET(a_0) && (PED::_451294E859ECC018(a_0) != -1)) {
                    a_2 = PED::_451294E859ECC018(a_0);
                    a_3 = PED::_9D728C1E12BF5518(a_0);
                }
            }
        }
    }
    switch (v_8) {
    case 0:
        if (a_1 == 0) {
            if (a_2 == 7) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 11) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 21) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 16) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 23) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 27) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 28) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if ((a_2 >= 14) && (a_2 <= 20)) {
                if (((a_4 & 2) != 0) || ((a_4 & 4) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            }
        } else if (a_1 == 1) {
            if (a_2 == 1) {
                if (((a_4 & 2) != 0) || ((a_4 & 64) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            }
        }
        break;
    case 1:
        if (a_1 == 0) {
            if (a_2 == 2) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 4) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 16) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 6) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 17) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 20) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 21) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if ((a_2 >= 8) && (a_2 <= 14)) {
                if (((a_4 & 2) != 0) || ((a_4 & 4) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            }
        }
        break;
    case 2:
        if (a_1 == 0) {
            if (a_2 == 9) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 11) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 12) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 21) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 23) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 27) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (((a_2 >= 14) && (a_2 <= 20)) || (a_2 == 2)) {
                if (((a_4 & 2) != 0) || ((a_4 & 4) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            }
        }
        break;
    }
}

void sub_3d82(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    v_9 = sub_358b(a_0);
    if (a_0 != 0) {
        a_2 = PED::GET_PED_DRAWABLE_VARIATION(a_0, a_1);
        a_3 = PED::GET_PED_TEXTURE_VARIATION(a_0, a_1);
        a_4 = PED::GET_PED_PALETTE_VARIATION(a_0, a_1);
    } else { 
        v_9 = a_6;
    }
    if (a_5 == 0) {
        return ;
    }
    switch (v_9) {
    case 0:
        if (a_1 == 8) {
            if ((((a_5 & 1) != 0) || ((a_5 & 2) != 0)) || ((a_5 & 32) != 0)) {
                if (a_2 == 15) {
                    a_2 = 0;
                    a_3 = 0;
                }
            }
            if (((a_5 & 2) != 0) || ((a_5 & 64) != 0)) {
                if ((a_2 == 3) || (a_2 == 22)) {
                    a_2 = 0;
                    a_3 = 0;
                }
            }
        } else if (a_1 == 9) {
            if ((((a_5 & 1) != 0) || ((a_5 & 2) != 0)) || ((a_5 & 32) != 0)) {
                if (a_2 == 5) {
                    a_2 = 0;
                    a_3 = 0;
                }
            }
            if (((a_5 & 2) != 0) || ((a_5 & 4) != 0)) {
                if (a_2 == 8) {
                    a_2 = 0;
                    a_3 = 0;
                }
            }
        }
        break;
    case 1:
        if (a_1 == 8) {
            if ((((a_5 & 1) != 0) || ((a_5 & 2) != 0)) || ((a_5 & 32) != 0)) {
                if ((a_2 == 1) || (a_2 == 10)) {
                    a_2 = 14;
                    a_3 = 0;
                }
            }
            if (((a_5 & 2) != 0) || ((a_5 & 64) != 0)) {
                if (a_2 == 19) {
                    a_2 = 14;
                    a_3 = 0;
                }
            }
        } else if (a_1 == 9) {
            if (((a_5 & 2) != 0) || ((a_5 & 4) != 0)) {
                if (a_2 == 5) {
                    a_2 = 0;
                    a_3 = 0;
                }
            }
        }
        break;
    case 2:
        if (a_1 == 8) {
            if ((((a_5 & 1) != 0) || ((a_5 & 2) != 0)) || ((a_5 & 32) != 0)) {
                if (a_2 == 3) {
                    a_2 = 14;
                    a_3 = 0;
                }
            }
        } else if (a_1 == 9) {
            if ((a_2 >= 5) && (a_2 <= 7)) {
                if (((a_5 & 2) != 0) || ((a_5 & 4) != 0)) {
                    a_2 = 0;
                    a_3 = 0;
                }
            }
        }
        break;
    }
}

auto sub_3fc3() {
    sub_3fdc();
    return g_17C49._f6C1._f21B._fC8D;
}

void sub_3fdc() {
    if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID())) {
        if (sub_35c8(g_17C49._f6C1._f21B._fC8D) != ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID())) {
            v_2 = sub_358b(PLAYER::PLAYER_PED_ID());
            if (sub_2e21(v_2) && ((!sub_40dc(14)) || g_17832)) {
                if ((g_17C49._f6C1._f21B._fC8D != v_2) && sub_2e21(g_17C49._f6C1._f21B._fC8D)) {
                    g_17C49._f6C1._f21B._fC8E = g_17C49._f6C1._f21B._fC8D;
                }
                g_17C49._f6C1._f21B._fC8F = v_2;
                g_17C49._f6C1._f21B._fC8D = v_2;
                return ;
            }
        } else { 
            if (g_17C49._f6C1._f21B._fC8D != 145) {
                g_17C49._f6C1._f21B._fC8F = g_17C49._f6C1._f21B._fC8D;
            }
            return ;
        }
    }
    g_17C49._f6C1._f21B._fC8D = 145;
}

auto sub_40dc(auto a_0) {
    return g_8861 == a_0;
}

void sub_40ea(auto a_0, auto a_1) {
    v_4 = sub_358b(a_0);
    if (sub_2e21(v_4) && (!PED::IS_PED_INJURED(a_0))) {
        if (a_0 == PLAYER::PLAYER_PED_ID()) {
            sub_41dd(a_0, &g_17C49._f6C1._f21B._f12A[v_4/*284*/]);
            for (v_6 = 0; v_6 <= (8 - 1); v_6 += 1) {
                g_17C49._f6C1._f21B._f47F[v_6/*4*/][v_4/*1*/] = UI::_A13E93403F26C812(v_6);
                if (a_1) {
                    v_5 = UI::_A48931185F0536FE();
                    if (g_17C49._f6C1._f21B._f47F[v_6/*4*/][v_4/*1*/] == v_5) {
                        g_17C49._f6C1._f21B._f4A0 = v_6;
                    }
                }
            }
            PLAYER::GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), &v_7);
            if (v_4 == 0) {
                STATS::STAT_SET_INT(0xc8fd0844, v_7, 1);
            } else if (v_4 == 1) {
                STATS::STAT_SET_INT(0xd3161861, v_7, 1);
            } else if (v_4 == 2) {
                STATS::STAT_SET_INT(0xe205ca9b, v_7, 1);
            }
        }
    }
}

void sub_41dd(auto a_0, auto a_1) {
    if (!PED::IS_PED_INJURED(a_0)) {
        for (v_4 = 0; v_4 <= (44 - 1); v_4 += 1) {
            a_1[v_4/*3*/]._f1 = 0;
        }
        for (v_4 = 0; v_4 <= (44 - 1); v_4 += 1) {
            v_7 = sub_4dbe(v_4);
            if (v_7 != 0) {
                v_8 = WEAPON::GET_PED_WEAPONTYPE_IN_SLOT(a_0, sub_4dbe(v_4));
                v_8._f1 = 0;
                v_8._f2 = 0;
                if ((v_8 != 0) && (v_8 != ${weapon_unarmed})) {
                    v_8._f1 = WEAPON::GET_AMMO_IN_PED_WEAPON(a_0, v_8);
                    if (v_8 == ${gadget_parachute}) {
                        v_8._f1 = 1;
                    }
                    GAMEPLAY::SET_BIT(&v_8._f2, 20 + WEAPON::GET_PED_WEAPON_TINT_INDEX(a_0, v_8));
                    if (v_8._f1 == -1) {
                        if (!WEAPON::GET_MAX_AMMO(a_0, v_8, &v_8._f1)) {
                            v_8._f1 = 0;
                        }
                    }
                    a_1[v_4/*3*/]._f1 = v_8._f1;
                    v_5 = 0;
                    v_6 = sub_4567(v_8, v_5);
                    while (v_6 != 0) {
                        if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(a_0, v_8, v_6)) {
                            GAMEPLAY::SET_BIT(&v_8._f2, v_5);
                        }
                        v_5 += 1;
                        v_6 = sub_4567(v_8, v_5);
                    }
                }
                a_1[v_4/*3*/]/*{3}*/ = v_8;
            }
        }
        for (v_4 = 0; v_4 <= (50 - 1); v_4 += 1) {
            a_1._f85[v_4/*3*/]._f1 = 0;
        }
        v_C = DLC1::GET_NUM_DLC_WEAPONS();
        for (v_B = 0; v_B < v_C; v_B += 1) {
            if ((DLC1::GET_DLC_WEAPON_DATA(v_B, &v_D) && (!sub_4441(v_D._f1))) && (v_4A < 50)) {
                if (!DLC1::_IS_OUTFIT_EMPTY(v_D)) {
                    v_8 = v_D._f1;
                    v_8._f1 = 0;
                    v_8._f2 = 0;
                    v_8._f1 = WEAPON::GET_AMMO_IN_PED_WEAPON(a_0, v_8);
                    if (WEAPON::HAS_PED_GOT_WEAPON(a_0, v_8, 0)) {
                        GAMEPLAY::SET_BIT(&v_8._f2, 20 + WEAPON::GET_PED_WEAPON_TINT_INDEX(a_0, v_8));
                    } else { 
                        GAMEPLAY::SET_BIT(&v_8._f2, 20);
                    }
                    if (v_8._f1 == -1) {
                        if (!WEAPON::GET_MAX_AMMO(a_0, v_8, &v_8._f1)) {
                            v_8._f1 = 0;
                        }
                    }
                    a_1._f85[v_4A/*3*/]._f1 = v_8._f1;
                    for (v_5 = 0; v_5 < DLC1::GET_NUM_DLC_WEAPON_COMPONENTS(v_B); v_5 += 1) {
                        if (DLC1::GET_DLC_WEAPON_COMPONENT_DATA(v_B, v_5, &v_34)) {
                            if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(a_0, v_8, v_34._f3)) {
                                GAMEPLAY::SET_BIT(&v_8._f2, v_5);
                            }
                        }
                    }
                }
                if (v_8 != 0) {
                    if (!WEAPON::HAS_PED_GOT_WEAPON(a_0, v_8, 0)) {
                        v_8 = 0;
                        v_8._f1 = 0;
                    }
                }
                a_1._f85[v_4A/*3*/]/*{3}*/ = v_8;
                v_4A += 1;
            }
        }
    }
}

auto sub_4441(auto a_0) {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
    } else { 
        switch (a_0) {
        case 0x99aeeb3b:
        case ${weapon_bullpupshotgun}:
        case ${weapon_assaultsmg}:
            return 0;
            break;
        case ${weapon_snspistol}:
        case ${weapon_bottle}:
        case 0x61012683:
            return 0;
            break;
        case ${weapon_specialcarbine}:
        case ${weapon_heavypistol}:
            return 0;
            break;
        case ${weapon_bullpuprifle}:
            return 0;
            break;
        case 0x92a27487:
        case 0x83839c4:
            return 0;
            break;
        case 0xa89cb99e:
        case 0x7f7497e5:
            return 0;
            break;
        case 0xc734385a:
        case 0x3aabbbaa:
            return 0;
            break;
        case 0xab564b93:
        case 0x63ab0442:
            return 0;
            break;
        case 0xd8df3c3c:
        case 0xdc4db296:
        case 0xa3d4d34:
            return 0;
            break;
        case 0x8210d4d5:
        case ${weapon_programmablear}:
        case 0xa52e2957:
        case ${weapon_heavyrifle}:
        case ${weapon_rubbergun}:
        case 0xd04c944d:
        case 0xd866acd1:
        case ${weapon_assaultmg}:
        case 0xe232c28c:
        case ${weapon_loudhailer}:
        case 0x787f0bb:
        case ${weapon_assaultsniper}:
        case 0x47757124:
            return 1;
            break;
        }
    }
    return 0;
}

auto sub_4567(auto a_0, auto a_1) {
    v_4 = 0;
    switch (a_0) {
    case ${weapon_pistol}:
        switch (a_1) {
        case 0:
            v_4 = 0xfed0fd71;
            break;
        case 1:
            v_4 = 0xed265a1c;
            break;
        case 2:
            v_4 = ${component_at_pi_flsh};
            break;
        case 3:
            v_4 = 0x65ea7ebb;
            break;
        case 4:
            v_4 = 0xd7391086;
            break;
        }
        break;
    case ${weapon_combatpistol}:
        switch (a_1) {
        case 0:
            v_4 = 0x721b079;
            break;
        case 1:
            v_4 = 0xd67b4f2d;
            break;
        case 2:
            v_4 = ${component_at_pi_flsh};
            break;
        case 3:
            v_4 = ${component_at_pi_supp};
            break;
        }
        break;
    case ${weapon_appistol}:
        switch (a_1) {
        case 0:
            v_4 = 0x31c4b22a;
            break;
        case 1:
            v_4 = 0x249a17d5;
            break;
        case 2:
            v_4 = ${component_at_pi_flsh};
            break;
        case 3:
            v_4 = ${component_at_pi_supp};
            break;
        case 4:
            v_4 = 0x9b76c72c;
            break;
        }
        break;
    case ${weapon_microsmg}:
        switch (a_1) {
        case 0:
            v_4 = 0xcb48aef0;
            break;
        case 1:
            v_4 = 0x10e6ba2b;
            break;
        case 2:
            v_4 = ${component_at_pi_flsh};
            break;
        case 3:
            v_4 = ${component_at_scope_macro};
            break;
        case 4:
            v_4 = ${component_at_ar_supp_02};
            break;
        case 5:
            v_4 = 0x487aae09;
            break;
        }
        break;
    case ${weapon_smg}:
        switch (a_1) {
        case 0:
            v_4 = 0x26574997;
            break;
        case 1:
            v_4 = 0x350966fb;
            break;
        case 2:
            v_4 = ${component_at_ar_flsh};
            break;
        case 3:
            v_4 = ${component_at_pi_supp};
            break;
        case 4:
            v_4 = 0x3cc6ba57;
            break;
        case 5:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 6:
            v_4 = 0x27872c90;
            break;
        }
        break;
    case ${weapon_assaultrifle}:
        switch (a_1) {
        case 0:
            v_4 = 0xbe5eea16;
            break;
        case 1:
            v_4 = 0xb1214f9b;
            break;
        case 2:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 3:
            v_4 = ${component_at_ar_flsh};
            break;
        case 4:
            v_4 = ${component_at_scope_macro};
            break;
        case 5:
            v_4 = ${component_at_ar_supp_02};
            break;
        case 6:
            v_4 = 0x4ead7533;
            break;
        }
        break;
    case ${weapon_carbinerifle}:
        switch (a_1) {
        case 0:
            v_4 = 0x9fbe33ec;
            break;
        case 1:
            v_4 = 0x91109691;
            break;
        case 2:
            v_4 = 0x75414f30;
            break;
        case 3:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 4:
            v_4 = ${component_at_ar_flsh};
            break;
        case 5:
            v_4 = ${component_at_scope_medium};
            break;
        case 6:
            v_4 = ${component_at_ar_supp};
            break;
        case 7:
            v_4 = 0xd89b9658;
            break;
        }
        break;
    case ${weapon_advancedrifle}:
        switch (a_1) {
        case 0:
            v_4 = 0xfa8fa10f;
            break;
        case 1:
            v_4 = 0x8ec1c979;
            break;
        case 2:
            v_4 = ${component_at_ar_flsh};
            break;
        case 3:
            v_4 = ${component_at_scope_small};
            break;
        case 4:
            v_4 = ${component_at_ar_supp};
            break;
        case 5:
            v_4 = 0x377cd377;
            break;
        }
        break;
    case ${weapon_mg}:
        switch (a_1) {
        case 0:
            v_4 = 0xf434ef84;
            break;
        case 1:
            v_4 = 0x82158b47;
            break;
        case 2:
            v_4 = 0x3c00afed;
            break;
        case 3:
            v_4 = ${component_at_ar_afgrip};
            break;
        }
        break;
    case ${weapon_combatmg}:
        switch (a_1) {
        case 0:
            v_4 = 0xe1ffb34a;
            break;
        case 1:
            v_4 = 0xd6c59cd6;
            break;
        case 2:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 3:
            v_4 = ${component_at_scope_medium};
            break;
        }
        break;
    case ${weapon_pumpshotgun}:
        switch (a_1) {
        case 0:
            v_4 = ${component_at_sr_supp};
            break;
        case 1:
            v_4 = ${component_at_ar_flsh};
            break;
        }
        break;
    case ${weapon_assaultshotgun}:
        switch (a_1) {
        case 0:
            v_4 = 0x94e81bc7;
            break;
        case 1:
            v_4 = 0x86bd7f72;
            break;
        case 2:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 3:
            v_4 = ${component_at_ar_flsh};
            break;
        case 4:
            v_4 = ${component_at_ar_supp};
            break;
        }
        break;
    case ${weapon_sniperrifle}:
        switch (a_1) {
        case 0:
            v_4 = 0x9bc64089;
            break;
        case 1:
            v_4 = ${component_at_scope_large};
            break;
        case 2:
            v_4 = ${component_at_scope_max};
            break;
        case 3:
            v_4 = ${component_at_ar_supp_02};
            break;
        case 4:
            v_4 = 0x4032b5e7;
            break;
        }
        break;
    case ${weapon_heavysniper}:
        switch (a_1) {
        case 0:
            v_4 = 0x476f52f4;
            break;
        case 1:
            v_4 = ${component_at_scope_large};
            break;
        case 2:
            v_4 = ${component_at_scope_max};
            break;
        }
        break;
    case ${weapon_grenadelauncher}:
        switch (a_1) {
        case 0:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 1:
            v_4 = ${component_at_ar_flsh};
            break;
        case 2:
            v_4 = ${component_at_scope_small};
            break;
        }
        break;
    case ${weapon_minigun}:
        switch (a_1) {
        case 0:
            v_4 = 0xc8de6f06;
            break;
        }
        break;
    case ${weapon_assaultsmg}:
        switch (a_1) {
        case 0:
            v_4 = 0x8d1307b0;
            break;
        case 1:
            v_4 = 0xbb46e417;
            break;
        case 2:
            v_4 = ${component_at_ar_flsh};
            break;
        case 3:
            v_4 = ${component_at_scope_macro};
            break;
        case 4:
            v_4 = ${component_at_ar_supp_02};
            break;
        }
        break;
    case ${weapon_bullpupshotgun}:
        switch (a_1) {
        case 0:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 1:
            v_4 = ${component_at_ar_flsh};
            break;
        case 2:
            v_4 = ${component_at_ar_supp_02};
            break;
        }
        break;
    case 0x99aeeb3b:
        switch (a_1) {
        case 0:
            v_4 = 0x2297be19;
            break;
        case 1:
            v_4 = 0xd9d3ac92;
            break;
        case 2:
            v_4 = ${component_at_pi_flsh};
            break;
        case 3:
            v_4 = ${component_at_ar_supp_02};
            break;
        case 4:
            v_4 = 0x77b8ab2f;
            break;
        }
        break;
    case 0xa3d4d34:
        switch (a_1) {
        case 0:
            v_4 = 0x4317f19e;
            break;
        case 1:
            v_4 = 0x334a5203;
            break;
        case 2:
            v_4 = ${component_at_ar_flsh};
            break;
        case 3:
            v_4 = ${component_at_scope_small};
            break;
        case 4:
            v_4 = ${component_at_ar_afgrip};
            break;
        }
        break;
    case ${weapon_sawnoffshotgun}:
        switch (a_1) {
        case 0:
            v_4 = 0x85a64df9;
            break;
        }
        break;
    case 0xd8df3c3c:
        switch (a_1) {
        case 0:
            v_4 = 0xc613f685;
            break;
        case 1:
            v_4 = 0xeed9fd63;
            break;
        case 2:
            v_4 = 0x50910c31;
            break;
        case 3:
            v_4 = 0x9761d9dc;
            break;
        case 4:
            v_4 = 0x7decfe30;
            break;
        case 5:
            v_4 = 0x3f4e8aa6;
            break;
        case 6:
            v_4 = 0x8b808bb;
            break;
        case 7:
            v_4 = 0xe28babef;
            break;
        case 8:
            v_4 = 0x7af3f785;
            break;
        }
        break;
    default:
        if (a_0 != 0) {
            v_5 = sub_4d83(a_0, &v_6);
            if (v_5 != -1) {
                if (a_1 < DLC1::GET_NUM_DLC_WEAPON_COMPONENTS(v_5)) {
                    if (DLC1::GET_DLC_WEAPON_COMPONENT_DATA(v_5, a_1, &v_2D)) {
                        return v_2D._f3;
                    }
                }
            }
        }
        break;
    }
    return v_4;
}

auto sub_4d83(auto a_0, auto a_1) {
    v_5 = DLC1::GET_NUM_DLC_WEAPONS();
    for (v_4 = 0; v_4 < v_5; v_4 += 1) {
        if (DLC1::GET_DLC_WEAPON_DATA(v_4, a_1)) {
            if (a_1._f1 == a_0) {
                return v_4;
            }
        }
    }
    return -1;
}

auto sub_4dbe(auto a_0) {
    v_3 = 0;
    switch (a_0) {
    case 0:
        v_3 = ${slot_unarmed};
        break;
    case 1:
        v_3 = ${slot_knife};
        break;
    case 2:
        v_3 = ${slot_nightstick};
        break;
    case 3:
        v_3 = ${slot_hammer};
        break;
    case 4:
        v_3 = ${slot_bat};
        break;
    case 5:
        v_3 = ${slot_crowbar};
        break;
    case 6:
        v_3 = ${slot_golfclub};
        break;
    case 7:
        v_3 = ${slot_stungun};
        break;
    case 8:
        v_3 = ${slot_pistol};
        break;
    case 9:
        v_3 = ${slot_combatpistol};
        break;
    case 10:
        v_3 = ${slot_appistol};
        break;
    case 11:
        v_3 = ${slot_microsmg};
        break;
    case 12:
        v_3 = ${slot_smg};
        break;
    case 13:
        v_3 = ${slot_assaultrifle};
        break;
    case 14:
        v_3 = ${slot_carbinerifle};
        break;
    case 15:
        v_3 = ${slot_advancedrifle};
        break;
    case 16:
        v_3 = ${slot_mg};
        break;
    case 17:
        v_3 = ${slot_combatmg};
        break;
    case 18:
        v_3 = ${slot_pumpshotgun};
        break;
    case 19:
        v_3 = ${slot_sawnoffshotgun};
        break;
    case 20:
        v_3 = ${slot_assaultshotgun};
        break;
    case 21:
        v_3 = ${slot_sniperrifle};
        break;
    case 22:
        v_3 = ${slot_heavysniper};
        break;
    case 23:
        v_3 = ${slot_grenadelauncher};
        break;
    case 24:
        v_3 = ${slot_rpg};
        break;
    case 25:
        v_3 = ${slot_minigun};
        break;
    case 26:
        v_3 = ${slot_grenade};
        break;
    case 27:
        v_3 = ${slot_stickybomb};
        break;
    case 28:
        v_3 = ${slot_smokegrenade};
        break;
    case 29:
        v_3 = ${slot_molotov};
        break;
    case 30:
        v_3 = ${slot_fireextinguisher};
        break;
    case 31:
        v_3 = ${slot_petrolcan};
        break;
    case 33:
        v_3 = ${slot_parachute};
        break;
    case 34:
        v_3 = ${slot_digiscanner};
        break;
    case 35:
        v_3 = ${slot_object};
        break;
    case 36:
        v_3 = ${slot_assaultsmg};
        break;
    case 37:
        v_3 = ${slot_bullpupshotgun};
        break;
    case 38:
        v_3 = 0x22541ebe;
        break;
    }
    return v_3;
}

void sub_5032(auto a_0) {
    v_3 = sub_358b(a_0);
    if (sub_2e21(v_3) && (!PED::IS_PED_INJURED(a_0))) {
        g_17C49._f6C1._f21B._f126[v_3/*1*/] = PED::GET_PED_ARMOUR(a_0);
    }
}

void sub_506e(auto a_0, auto a_1) {
    a_0/*{3}*/ = ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1);
    a_0._f3 = ENTITY::GET_ENTITY_HEADING(PLAYER::PLAYER_PED_ID());
    a_0._f5 = PED::GET_PED_PARACHUTE_STATE(PLAYER::PLAYER_PED_ID());
    if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        a_0._f4 = PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID());
    }
    if (SYSTEM::VDIST(a_0, 320.993408203125, 265.2514953613281, 82.12210083) < 10.0) {
        a_0/*{3}*/ = {301.2161865234375, 202.1356964111328, 103.37969970703125 };
        a_0._f3 = 156.514404296875;
    } else if (SYSTEM::VDIST(a_0, 377.15301513671875, -717.5670166015625, 10.0536) < 10.0) {
        a_0/*{3}*/ = {394.2567138671875, -713.5438842773438, 28.28529930114746 };
        a_0._f3 = 276.6272888183594;
    } else if (SYSTEM::VDIST(a_0, -1425.564453125, -244.3, 15.805299758911133) < 10.0) {
        a_0/*{3}*/ = {-1423.472412109375, -214.25390625, 45.5004 };
        a_0._f3 = 353.8757019042969;
    } else if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${finale_choice}) > 0) {
        a_0/*{3}*/ = {4.258699893951416, 525.0214233398438, 173.6280975341797 };
        a_0._f3 = 203.6746063232422;
    } else if (GAMEPLAY::IS_BIT_SET(g_10B8D, 4)) {
        a_0/*{3}*/ = {452.0255126953125, 5571.85, 780.1859130859375 };
        a_0._f3 = 78.98580169677734;
    } else if (GAMEPLAY::IS_BIT_SET(g_10B8D, 5)) {
        a_0/*{3}*/ = {-745.4462280273438, 5595.146484375, 40.6594 };
        a_0._f3 = 261.747;
    } else if (GAMEPLAY::IS_BIT_SET(g_10B8D, 6)) {
        a_0/*{3}*/ = {-1675.521484375, -1125.59, 12.091 };
        a_0._f3 = 271.8208;
    } else if (GAMEPLAY::IS_BIT_SET(g_10B8D, 7)) {
        a_0/*{3}*/ = {-1631.21923828125, -1112.80517578125, 12.02120018 };
        a_0._f3 = 316.8879089355469;
    } else if (INTERIOR::GET_INTERIOR_FROM_ENTITY(PLAYER::PLAYER_PED_ID()) == INTERIOR::_05B7A89BD78797FC(1272.6588134765625, -1715.4669189453125, 53.77149963378906, "v_lesters")) {
        a_0/*{3}*/ = {1276.9564208984375, -1725.189208984375, 53.65510177612305 };
        a_0._f3 = 204.17030334472656;
    } else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -415.43646240234375, 2068.28857421875, 113.3, -564.9515991210938, 1884.7025146484375, 134.04034423828125, 258.75, 0, 1, 0) || ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -596.4705810546875, 2089.9208984375, 125.41275024414062, -581.2134399414062, 2036.256103515625, 136.28363037109375, 9.5, 0, 1, 0)) {
        a_0/*{3}*/ = {-601.59, 2099.197265625, 128.892807 };
        a_0._f3 = 204.7498016357422;
    } else if (SYSTEM::VDIST(a_0, -1007.3926391601562, -477.95843505859375, 52.535701751708984) < 8.0) {
        a_0/*{3}*/ = {-1018.3756103515625, -483.943603515625, 36.09640121459961 };
        a_0._f3 = 114.76640319824219;
    } else if (SYSTEM::VDIST(a_0, 480.66619873046875, -1317.8084716796875, 28.20302963256836) < 15.0) {
        a_0/*{3}*/ = {497.7237854, -1310.9322509765625, 28.237199783325195 };
        a_0._f3 = 289.3663024902344;
    } else if (SYSTEM::VDIST(a_0, 2329.526611328125, 2571.311279296875, 45.67789840698242) < 5.0) {
        a_0/*{3}*/ = {2316.930419921875, 2594.15283203125, 45.71989822387695 };
        a_0._f3 = 348.13250732421875;
    }
    if (a_1 == 1) {
        if (sub_5c8c(&v_4)) {
            if (sub_560d(v_4, &v_5, &v_8)) {
                v_5._f2 += 1.0;
                a_0/*{3}*/ = v_5;
                a_0._f3 = v_8;
            }
        } else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 207.43357849121094, -1019.79541015625, -100.47276306152344, 189.93377685546875, -1019.6234741210938, -95.56883239746094, 17.1875, 0, 1, 0)) {
            v_9 = sub_6ae7();
            if (v_9 == 0) {
                a_0/*{3}*/ = {-65.12339782714844, 81.25170135498047, 70.56439971923828 };
                a_0._f3 = 71.623703;
            } else if (v_9 == 1) {
                a_0/*{3}*/ = {-68.5531, -1824.37744140625, 25.9424 };
                a_0._f3 = 215.82949829101562;
            } else if (v_9 == 2) {
                a_0/*{3}*/ = {-220.8188934326172, -1162.3016357421875, 22.0242 };
                a_0._f3 = 70.27110290527344;
            }
        } else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 483.71746826171875, -1326.6298828125, 28.213499069213867, 474.96435546875, -1307.998291015625, 34.49497604370117, 12.0, 0, 1, 0)) {
            a_0/*{3}*/ = {495.4107971191406, -1306.08, 29.288299560546875 };
            a_0._f3 = 213.62730407714844;
        } else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1146.77, -1534.219970703125, 3.37, -1158.4525146484375, -1517.7496337890625, 6.374244213104248, 13.0, 0, 1, 0)) {
            a_0/*{3}*/ = {-1160.0950927734375, -1515.406982421875, 3.1496 };
            a_0._f3 = 305.64239501953125;
        } else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 439.54315185546875, -996.9768676757812, 24.88307, 428.2935485839844, -997.0192260742188, 28.574581146240234, 8.5, 0, 1, 0)) {
            a_0/*{3}*/ = {431.88531494140625, -1013.1329956054688, 28.7907 };
            a_0._f3 = 186.681396484375;
        } else if (sub_55c9(a_0, "v_hospital", 307.3064880371094, -589.95947265625, 43.301998138427734)) {
            a_0/*{3}*/ = {279.4136962890625, -585.8814697265625, 43.25019836425781 };
            a_0._f3 = 48.802799224853516;
        }
    }
}

auto sub_55c9(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    if (!INTERIOR::_EEA5AC2EDA7C33E8(a_0)) {
        v_9 = INTERIOR::_05B7A89BD78797FC(a_4, a_3);
        if (!INTERIOR::IS_VALID_INTERIOR(v_9)) {
            return 0;
        }
        v_A = INTERIOR::GET_INTERIOR_FROM_COLLISION(a_0);
        if (v_A == v_9) {
            return 1;
        }
    }
    return 0;
}

auto sub_560d(auto a_0, auto a_1, auto a_2) {
    a_1/*{3}*/ = {0.0, 0.0, 0.0 };
    a_2 = 0.0;
    switch (a_0) {
    case 0:
        a_1/*{3}*/ = {-829.8419799804688, -191.7454071044922, 36.4385986328125 };
        a_2 = 29.5060997;
        break;
    case 1:
        a_1/*{3}*/ = {129.84840393066406, -1716.52783203125, 28.0702 };
        a_2 = 50.3483;
        break;
    case 2:
        a_1/*{3}*/ = {-1296.912841796875, -1120.99853515625, 5.3951 };
        a_2 = 0.9933;
        break;
    case 3:
        a_1/*{3}*/ = {1938.028076171875, 3718.73583984375, 31.315399169921875 };
        a_2 = 118.23049926757812;
        break;
    case 4:
        a_1/*{3}*/ = {1197.8656, -469.3808898925781, 65.0885 };
        a_2 = 346.44769287109375;
        break;
    case 5:
        a_1/*{3}*/ = {-32.2160987854, -135.82119750976562, 56.053199768066406 };
        a_2 = 186.0052032470703;
        break;
    case 6:
        a_1/*{3}*/ = {-287.76959228515625, 6238.08056640625, 30.290199279785156 };
        a_2 = 316.1348876953125;
        break;
    case 7:
        a_1/*{3}*/ = {99.28759765625, -1395.159912109375, 28.27589988708496 };
        a_2 = 320.2738952636719;
        break;
    case 8:
        a_1/*{3}*/ = {1679.445068359375, 4819.05615234375, 41.003501892089844 };
        a_2 = 4.6192;
        break;
    case 9:
        a_1/*{3}*/ = {411.3063049316406, -809.186279296875, 28.155399322509766 };
        a_2 = 1.8972;
        break;
    case 10:
        a_1/*{3}*/ = {-1088.0535888671875, 2699.1669921875, 19.274799346923828 };
        a_2 = 129.7382049560547;
        break;
    case 11:
        a_1/*{3}*/ = {1194.1629638671875, 2695.6435546875, 36.9225 };
        a_2 = 1.1454;
        break;
    case 12:
        a_1/*{3}*/ = {-821.2828979492188, -1088.027099609375, 10.0499 };
        a_2 = 120.58830261230469;
        break;
    case 13:
        a_1/*{3}*/ = {3.3416, 6521.302734375, 30.2961 };
        a_2 = 316.4450988769531;
        break;
    case 14:
        a_1/*{3}*/ = {-1208.417236328125, -785.9635, 16.0139 };
        a_2 = 36.3181;
        break;
    case 15:
        a_1/*{3}*/ = {623.1845092773438, 2739.19091796875, 40.95880126953125 };
        a_2 = 3.541100025177;
        break;
    case 16:
        a_1/*{3}*/ = {130.95550537109375, -198.20840454101562, 53.41 };
        a_2 = 251.35060119628906;
        break;
    case 17:
        a_1/*{3}*/ = {-3164.06494140625, 1067.3170166015625, 19.677799224853516 };
        a_2 = 101.2229;
        break;
    case 18:
        a_1/*{3}*/ = {-713.2797241210938, -174.27670288085938, 35.89619827270508 };
        a_2 = 29.8138;
        break;
    case 19:
        a_1/*{3}*/ = {-147.0615997314453, -306.43218994140625, 37.79119873046875 };
        a_2 = 160.45260620117188;
        break;
    case 20:
        a_1/*{3}*/ = {-1461.355224609375, -230.6092071533203, 48.3064 };
        a_2 = 318.78509521484375;
        break;
    case 21:
        a_1/*{3}*/ = {-1347.7391357421875, -1278.5733642578125, 3.8952 };
        a_2 = 17.9365;
        break;
    case 22:
        a_1/*{3}*/ = {325.68328857421875, 164.3262939453125, 102.44249725341797 };
        a_2 = 68.64070129394531;
        break;
    case 23:
        a_1/*{3}*/ = {1858.7740478515625, 3742.392822265625, 32.0779 };
        a_2 = 301.23291015625;
        break;
    case 24:
        a_1/*{3}*/ = {-286.32720947265625, 6202.80224609375, 30.3323 };
        a_2 = 225.13340759277344;
        break;
    case 25:
        a_1/*{3}*/ = {-1161.5958251953125, -1417.69970703125, 3.7119999999999997 };
        a_2 = 246.91610717773438;
        break;
    case 26:
        a_1/*{3}*/ = {1308.9522705078125, -1660.611083984375, 50.23619842529297 };
        a_2 = 163.54559326171875;
        break;
    case 27:
        a_1/*{3}*/ = {-3161.5849609375, 1074.213623046875, 19.6847 };
        a_2 = 98.60919952392578;
        break;
    case 28:
        a_1/*{3}*/ = {28.423, -1110.8135986328125, 28.284799575805664 };
        a_2 = 85.24949645996094;
        break;
    case 29:
        a_1/*{3}*/ = {1704.966064453125, 3749.709228515625, 33.018798828125 };
        a_2 = 45.677799224853516;
        break;
    case 30:
        a_1/*{3}*/ = {223.949, -38.789398193359375, 68.6483 };
        a_2 = 159.42649841308594;
        break;
    case 31:
        a_1/*{3}*/ = {837.7854, -1017.9628295898438, 26.3045 };
        a_2 = 181.04449462890625;
        break;
    case 32:
        a_1/*{3}*/ = {-313.19140625, 6093.35107421875, 30.462499618530273 };
        a_2 = 315.84051513671875;
        break;
    case 33:
        a_1/*{3}*/ = {-663.4630737304688, -952.806884765625, 20.3143 };
        a_2 = 92.67960357666016;
        break;
    case 34:
        a_1/*{3}*/ = {-1323.0596923828125, -392.8576965332031, 35.459598541259766 };
        a_2 = 210.73980712890625;
        break;
    case 35:
        a_1/*{3}*/ = {-1106.101806640625, 2684.35, 18.0953 };
        a_2 = 127.03829956054688;
        break;
    case 36:
        a_1/*{3}*/ = {-3157.93212890625, 1081.3089599609375, 19.69529914855957 };
        a_2 = 100.29419708251953;
        break;
    case 37:
        a_1/*{3}*/ = {2562.8818359375, 312.8641052246094, 107.46119689941406 };
        a_2 = 179.205;
        break;
    case 38:
        a_1/*{3}*/ = {822.47998046875, -2142.87451171875, 27.849599838256836 };
        a_2 = 355.059814453125;
        break;
    case 39:
        a_1/*{3}*/ = {-1137.0531, -1993.9161376953125, 12.167699813842773 };
        a_2 = 43.121299743652344;
        break;
    case 40:
        a_1/*{3}*/ = {717.8107299804688, -1084.0814208984375, 21.3094 };
        a_2 = 93.2649;
        break;
    case 41:
        a_1/*{3}*/ = {-387.67889404296875, -128.25680541992188, 37.67959976196289 };
        a_2 = 119.1084976196289;
        break;
    case 42:
        a_1/*{3}*/ = {117.88349914550781, 6599.4150390625, 31.013399124145508 };
        a_2 = 90.72250366210938;
        break;
    case 43:
        a_1/*{3}*/ = {1201.7088623046875, 2664.8134765625, 36.81019973754883 };
        a_2 = 133.9;
        break;
    }
    return !sub_5c63(a_1, 0.0, 0.0, 0.0);
}

auto sub_5c63(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    return ((a_0 == a_3) && (a_0._f1 == a_3._f1)) && (a_0._f2 == a_3._f2);
}

auto sub_5c8c(auto a_0) {
    if ((!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID())) && (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))) {
        if (sub_67ea()) {
            a_0 = sub_6019(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0), 5, -1, 0, 1);
            if (sub_6009(a_0) && (!sub_5ce5(a_0))) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_5ce5(auto a_0) {
    return sub_5cf5(a_0, 0, 1);
}

auto sub_5cf5(auto a_0, auto a_1, auto a_2) {
    if (a_2) {
        return GAMEPLAY::IS_BIT_SET(g_15F9E._f4F3[a_0/*1*/], a_1);
    } else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (sub_5ffe() == 0) {
            return GAMEPLAY::IS_BIT_SET(sub_379c(sub_5d55(a_0), -1, 0), a_1);
        }
    } else { 
        return GAMEPLAY::IS_BIT_SET(g_17C49._f29C[a_0/*1*/], a_1);
    }
    return 0;
}

auto sub_5d55(auto a_0) {
    switch (a_0) {
    case 0:
        return 815;
        break;
    case 1:
        return 816;
        break;
    case 2:
        return 817;
        break;
    case 3:
        return 818;
        break;
    case 4:
        return 819;
        break;
    case 5:
        return 820;
        break;
    case 6:
        return 821;
        break;
    case 7:
        return 822;
        break;
    case 8:
        return 823;
        break;
    case 9:
        return 824;
        break;
    case 10:
        return 825;
        break;
    case 11:
        return 826;
        break;
    case 12:
        return 827;
        break;
    case 13:
        return 828;
        break;
    case 14:
        return 829;
        break;
    case 15:
        return 831;
        break;
    case 16:
        return 832;
        break;
    case 17:
        return 833;
        break;
    case 18:
        return 834;
        break;
    case 19:
        return 835;
        break;
    case 20:
        return 836;
        break;
    case 21:
        return 837;
        break;
    case 22:
        return 838;
        break;
    case 23:
        return 839;
        break;
    case 24:
        return 840;
        break;
    case 25:
        return 841;
        break;
    case 26:
        return 842;
        break;
    case 27:
        return 843;
        break;
    case 28:
        return 844;
        break;
    case 29:
        return 845;
        break;
    case 30:
        return 846;
        break;
    case 31:
        return 847;
        break;
    case 32:
        return 848;
        break;
    case 33:
        return 849;
        break;
    case 34:
        return 850;
        break;
    case 35:
        return 851;
        break;
    case 36:
        return 852;
        break;
    case 37:
        return 853;
        break;
    case 38:
        return 854;
        break;
    case 39:
        return 855;
        break;
    case 40:
        return 859;
        break;
    case 41:
        return 860;
        break;
    case 42:
        return 861;
        break;
    case 43:
        return 862;
        break;
    default:
        break;
    }
    return 2903;
}

auto sub_5ffe() {
    return g_5F7C;
}

auto sub_6009(auto a_0) {
    return sub_5cf5(a_0, 5, 1);
}

auto sub_6019(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    v_B = 1000000.0;
    v_C = -1;
    for (v_9 = 0; v_9 <= 43; v_9 += 1) {
        if ((a_3 == 5) || (a_3 == sub_6591(v_9))) {
            if ((!a_5) || sub_6581(v_9)) {
                v_A = GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(a_0, sub_60b0(v_9), 1);
                if (((v_A < v_B) && ((v_A <= ((float)a_4)) || (a_4 == -1))) && (a_6 || (v_9 != 21))) {
                    v_B = v_A;
                    v_C = v_9;
                }
            }
        }
    }
    return v_C;
}

auto<3> sub_60b0(auto a_0) {
    switch (a_0) {
    case -1:
        return {0.0, 0.0, 0.0 };
        break;
    case 0:
        return {-821.99462890625, -187.17759704589844, 36.56890106201172 };
        break;
    case 1:
        return {133.57020568847656, -1710.91796875, 28.29159927368164 };
        break;
    case 2:
        return {-1287.0821533203125, -1116.5576171875, 5.9901 };
        break;
    case 3:
        return {1933.119140625, 3726.0791015625, 31.8444 };
        break;
    case 4:
        return {1208.33349609375, -470.9169921875, 65.208 };
        break;
    case 5:
        return {-30.7448, -148.49209594726562, 56.0765 };
        break;
    case 6:
        return {-280.8164978027344, 6231.7705078125, 30.695499420166016 };
        break;
    case 7:
        return {80.665, -1391.66943359375, 28.3761 };
        break;
    case 8:
        return {1687.8812255859375, 4820.5498046875, 41.00960159301758 };
        break;
    case 9:
        return {419.531, -807.5786743164062, 28.489599227905273 };
        break;
    case 10:
        return {-1094.0487060546875, 2704.170654296875, 18.087299346923828 };
        break;
    case 11:
        return {1197.97216796875, 2704.220458984375, 37.15719985961914 };
        break;
    case 12:
        return {-818.621826171875, -1077.532958984375, 10.3282 };
        break;
    case 13:
        return {-0.2361, 6516.04541015625, 30.8684 };
        break;
    case 14:
        return {-1199.8092041015625, -776.6885986328125, 16.3237 };
        break;
    case 15:
        return {618.1857299804688, 2752.566650390625, 41.0881 };
        break;
    case 16:
        return {126.685302734375, -212.5027, 53.5578 };
        break;
    case 17:
        return {-3168.96630859375, 1055.286865234375, 19.863199234 };
        break;
    case 18:
        return {-715.3598022460938, -155.7742, 36.410499572753906 };
        break;
    case 19:
        return {-158.2198944091797, -304.96630859375, 38.735 };
        break;
    case 20:
        return {-1455.0045166015625, -233.186203, 48.79359817504883 };
        break;
    case 21:
        return {-1335.9730224609375, -1278.554931640625, 3.8598001 };
        break;
    case 22:
        return {321.60980224609375, 179.41650390625, 102.58650207519531 };
        break;
    case 23:
        return {1861.685302734375, 3750.079833984375, 32.03179931640625 };
        break;
    case 24:
        return {-290.1603088378906, 6199.0947265625, 30.4871 };
        break;
    case 25:
        return {-1153.9481201171875, -1425.0185546875, 3.9544 };
        break;
    case 26:
        return {1322.4547119140625, -1651.125244140625, 51.188499450683594 };
        break;
    case 27:
        return {-3169.42041015625, 1074.7271728515625, 19.834299087524414 };
        break;
    case 28:
        return {17.6804, -1114.2879638671875, 28.797000885 };
        break;
    case 29:
        return {1697.978759765625, 3753.2, 33.705299377441406 };
        break;
    case 30:
        return {245.27110290527344, -45.812599182128906, 68.941 };
        break;
    case 31:
        return {844.1248168945312, -1025.5706787109375, 27.194799423217773 };
        break;
    case 32:
        return {-325.8904113769531, 6077.0263671875, 30.45479965209961 };
        break;
    case 33:
        return {-664.2177734375, -943.3646240234375, 20.8292 };
        break;
    case 34:
        return {-1313.948486328125, -390.9637145996094, 35.592 };
        break;
    case 35:
        return {-1111.237548828125, 2688.462646484375, 17.6131 };
        break;
    case 36:
        return {-3165.230712890625, 1082.8551025390625, 19.843799591064453 };
        break;
    case 37:
        return {2569.611572265625, 302.57598876953125, 107.73490142822266 };
        break;
    case 38:
        return {811.869873046875, -2149.1015625, 28.6362991333 };
        break;
    case 39:
        return {-1147.3138427734375, -1992.4344482421875, 12.180299758911133 };
        break;
    case 40:
        return {724.5239868164062, -1089.0810546875, 21.1692 };
        break;
    case 41:
        return {-354.5271911621094, -135.40109252929688, 38.185 };
        break;
    case 42:
        return {113.2614974975586, 6624.2802734375, 30.787099838256836 };
        break;
    case 43:
        return {1174.7073974609375, 2644.44970703125, 36.75519943237305 };
        break;
    }
    return {1000000.0, 1000000.0, 1000000.0 };
}

auto sub_6581(auto a_0) {
    return sub_5cf5(a_0, 0, 0);
}

auto sub_6591(auto a_0) {
    switch (a_0) {
    case -1:
        return 5;
        break;
    case 0:
        return 0;
        break;
    case 1:
        return 0;
        break;
    case 2:
        return 0;
        break;
    case 3:
        return 0;
        break;
    case 4:
        return 0;
        break;
    case 5:
        return 0;
        break;
    case 6:
        return 0;
        break;
    case 7:
        return 1;
        break;
    case 8:
        return 1;
        break;
    case 9:
        return 1;
        break;
    case 10:
        return 1;
        break;
    case 11:
        return 1;
        break;
    case 12:
        return 1;
        break;
    case 13:
        return 1;
        break;
    case 14:
        return 1;
        break;
    case 15:
        return 1;
        break;
    case 16:
        return 1;
        break;
    case 17:
        return 1;
        break;
    case 18:
        return 1;
        break;
    case 19:
        return 1;
        break;
    case 20:
        return 1;
        break;
    case 21:
        return 1;
        break;
    case 22:
        return 2;
        break;
    case 23:
        return 2;
        break;
    case 24:
        return 2;
        break;
    case 25:
        return 2;
        break;
    case 26:
        return 2;
        break;
    case 27:
        return 2;
        break;
    case 28:
        return 3;
        break;
    case 29:
        return 3;
        break;
    case 30:
        return 3;
        break;
    case 31:
        return 3;
        break;
    case 32:
        return 3;
        break;
    case 33:
        return 3;
        break;
    case 34:
        return 3;
        break;
    case 35:
        return 3;
        break;
    case 36:
        return 3;
        break;
    case 37:
        return 3;
        break;
    case 38:
        return 3;
        break;
    case 39:
        return 4;
        break;
    case 40:
        return 4;
        break;
    case 41:
        return 4;
        break;
    case 42:
        return 4;
        break;
    case 43:
        return 4;
        break;
    }
    return 5;
}

auto sub_67ea() {
    return g_15F9E._f122 > 0;
}

auto sub_67fb() {
    sub_6aab(&v_2, TIME::GET_CLOCK_SECONDS());
    sub_6a70(&v_2, TIME::GET_CLOCK_MINUTES());
    sub_6a36(&v_2, TIME::GET_CLOCK_HOURS());
    sub_68fa(&v_2, TIME::GET_CLOCK_DAY_OF_MONTH());
    sub_68c7(&v_2, TIME::GET_CLOCK_MONTH());
    sub_6841(&v_2, TIME::GET_CLOCK_YEAR());
    return v_2;
}

void sub_6841(auto a_0, auto a_1) {
    if (a_1 <= 0) {
        return ;
    }
    if ((a_1 > 2043) || (a_1 < 1979)) {
        return ;
    }
    a_0 -= a_0 & 0x7c000000;
    if (a_1 < 2011) {
        a_0 |= SYSTEM::SHIFT_LEFT(2011 - a_1, 26);
        a_0 |= 0x80000000;
    } else { 
        a_0 |= SYSTEM::SHIFT_LEFT(a_1 - 2011, 26);
        a_0 -= a_0 & 0x80000000;
    }
}

void sub_68c7(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 > 11)) {
        return ;
    }
    a_0 -= a_0 & 15;
    a_0 |= a_1;
}

void sub_68fa(auto a_0, auto a_1) {
    v_4 = sub_6a29(a_0);
    v_5 = sub_69ed(a_0);
    if ((a_1 < 1) || (a_1 > sub_694b(v_4, v_5))) {
        return ;
    }
    a_0 -= a_0 & 496;
    a_0 |= SYSTEM::SHIFT_LEFT(a_1, 4);
}

auto sub_694b(auto a_0, auto a_1) {
    if (a_1 < 0) {
        a_1 = 0;
    }
    switch (a_0) {
    case 0:
    case 2:
    case 4:
    case 6:
    case 7:
    case 9:
    case 11:
        return 31;
        break;
    case 3:
    case 5:
    case 8:
    case 10:
        return 30;
        break;
    case 1:
        if ((a_1 % 4) == 0) {
            if ((a_1 % 100) != 0) {
                return 29;
            } else if ((a_1 % 400) == 0) {
                return 29;
            }
        }
        return 28;
        break;
    }
    return 30;
}

auto sub_69ed(auto a_0) {
    return ((SYSTEM::SHIFT_RIGHT(a_0, 26) & 31) * sub_6a12(GAMEPLAY::IS_BIT_SET(a_0, 31), -1, 1)) + 2011;
}

auto sub_6a12(auto a_0, auto a_1, auto a_2) {
    if (a_0) {
        return a_1;
    } else { 
        return a_2;
    }
}

auto sub_6a29(auto a_0) {
    return a_0 & 15;
}

void sub_6a36(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 > 24)) {
        return ;
    }
    a_0 -= a_0 & 15872;
    a_0 |= SYSTEM::SHIFT_LEFT(a_1, 9);
}

void sub_6a70(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 >= 60)) {
        return ;
    }
    a_0 -= a_0 & 0xfc000;
    a_0 |= SYSTEM::SHIFT_LEFT(a_1, 14);
}

void sub_6aab(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 >= 60)) {
        return ;
    }
    a_0 -= a_0 & 0x3f00000;
    a_0 |= SYSTEM::SHIFT_LEFT(a_1, 20);
}

auto sub_6ae7() {
    sub_3fdc();
    return g_17C49._f6C1._f21B._fC8D;
}

void sub_6b00(auto a_0) {
    if (GAMEPLAY::IS_XBOX360_VERSION() || GAMEPLAY::IS_DURANGO_VERSION()) {
        v_3 = a_0;
        NETWORK::NETWORK_SET_RICH_PRESENCE(9, &v_3, 1, 1);
    } else if (GAMEPLAY::IS_PS3_VERSION() || GAMEPLAY::IS_ORBIS_VERSION()) {
        v_4/*"24"*/ = "SPRC_";
        v_4/*24*/ += a_0;
        v_4/*24*/ += "_STR";
        NETWORK::_3E200C2BCF4164EB(9, &v_4);
    }
}

void sub_6b59(auto a_0, auto a_1, auto a_2) {
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&g_1558D)) {
        STATS::PLAYSTATS_MISSION_OVER(&g_1558D, 0, 0, 0, 1, 0);
        g_1558D/*"64"*/ = "";
    }
    g_1558D/*"64"*/ = a_0;
    STATS::PLAYSTATS_MISSION_STARTED(a_0, a_1, a_2, sub_6b9b(0));
}

auto sub_6b9b(auto a_0) {
    if ((!a_0) && (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${benchmark}) > 0)) {
        return 1;
    }
    return GAMEPLAY::IS_BIT_SET(g_10B8D, 0);
}

auto<2> sub_6bc6(auto a_0) {
    v_3/*"8"*/ = "";
    switch (a_0) {
    case 0:
        v_3/*"8"*/ = "ABI1";
        break;
    case 1:
        v_3/*"8"*/ = "ABI2";
        break;
    case 2:
        v_3/*"8"*/ = "BA1";
        break;
    case 3:
        v_3/*"8"*/ = "BA2";
        break;
    case 4:
        v_3/*"8"*/ = "BA3";
        break;
    case 5:
        v_3/*"8"*/ = "BA3A";
        break;
    case 6:
        v_3/*"8"*/ = "BA3C";
        break;
    case 7:
        v_3/*"8"*/ = "BA4";
        break;
    case 8:
        v_3/*"8"*/ = "DRE1";
        break;
    case 9:
        v_3/*"8"*/ = "EPS1";
        break;
    case 10:
        v_3/*"8"*/ = "EPS2";
        break;
    case 11:
        v_3/*"8"*/ = "EPS3";
        break;
    case 12:
        v_3/*"8"*/ = "EPS4";
        break;
    case 13:
        v_3/*"8"*/ = "EPS5";
        break;
    case 14:
        v_3/*"8"*/ = "EPS6";
        break;
    case 15:
        v_3/*"8"*/ = "EPS7";
        break;
    case 16:
        v_3/*"8"*/ = "EPS8";
        break;
    case 17:
        v_3/*"8"*/ = "EXT1";
        break;
    case 18:
        v_3/*"8"*/ = "EXT2";
        break;
    case 19:
        v_3/*"8"*/ = "EXT3";
        break;
    case 20:
        v_3/*"8"*/ = "EXT4";
        break;
    case 21:
        v_3/*"8"*/ = "FAN1";
        break;
    case 22:
        v_3/*"8"*/ = "FAN2";
        break;
    case 23:
        v_3/*"8"*/ = "FAN3";
        break;
    case 24:
        v_3/*"8"*/ = "HAO1";
        break;
    case 25:
        v_3/*"8"*/ = "HUN1";
        break;
    case 26:
        v_3/*"8"*/ = "HUN2";
        break;
    case 27:
        v_3/*"8"*/ = "JOS1";
        break;
    case 28:
        v_3/*"8"*/ = "JOS2";
        break;
    case 29:
        v_3/*"8"*/ = "JOS3";
        break;
    case 30:
        v_3/*"8"*/ = "JOS4";
        break;
    case 31:
        v_3/*"8"*/ = "MAU1";
        break;
    case 32:
        v_3/*"8"*/ = "MIN1";
        break;
    case 33:
        v_3/*"8"*/ = "MIN2";
        break;
    case 34:
        v_3/*"8"*/ = "MIN3";
        break;
    case 35:
        v_3/*"8"*/ = "MRS1";
        break;
    case 36:
        v_3/*"8"*/ = "MRS2";
        break;
    case 37:
        v_3/*"8"*/ = "NI1";
        break;
    case 38:
        v_3/*"8"*/ = "NI1A";
        break;
    case 39:
        v_3/*"8"*/ = "NI1B";
        break;
    case 40:
        v_3/*"8"*/ = "NI1C";
        break;
    case 41:
        v_3/*"8"*/ = "NI1D";
        break;
    case 42:
        v_3/*"8"*/ = "NI2";
        break;
    case 43:
        v_3/*"8"*/ = "NI3";
        break;
    case 44:
        v_3/*"8"*/ = "OME1";
        break;
    case 45:
        v_3/*"8"*/ = "OME2";
        break;
    case 46:
        v_3/*"8"*/ = "PA1";
        break;
    case 47:
        v_3/*"8"*/ = "PA2";
        break;
    case 48:
        v_3/*"8"*/ = "PA3";
        break;
    case 49:
        v_3/*"8"*/ = "PA3A";
        break;
    case 50:
        v_3/*"8"*/ = "PA3B";
        break;
    case 51:
        v_3/*"8"*/ = "PA4";
        break;
    case 52:
        v_3/*"8"*/ = "RAM1";
        break;
    case 53:
        v_3/*"8"*/ = "RAM2";
        break;
    case 54:
        v_3/*"8"*/ = "RAM3";
        break;
    case 55:
        v_3/*"8"*/ = "RAM4";
        break;
    case 56:
        v_3/*"8"*/ = "RAM5";
        break;
    case 57:
        v_3/*"8"*/ = "SAS1";
        break;
    case 58:
        v_3/*"8"*/ = "TON1";
        break;
    case 59:
        v_3/*"8"*/ = "TON2";
        break;
    case 60:
        v_3/*"8"*/ = "TON3";
        break;
    case 61:
        v_3/*"8"*/ = "TON4";
        break;
    case 62:
        v_3/*"8"*/ = "TON5";
        break;
    default:
        break;
    }
    return v_3;
}

void sub_7013(auto a_0, auto a_1) {
    switch (a_0) {
    case 0:
        sub_825c(a_1, "Abigail1", sub_a6f(a_0), 0, 0, 4, -1604.66796875, 5239.1, 3.01, 66, "", 109, 0, "ambient_Diving", 0, 0, 1, 4, 1, 0, 2359, sub_82ed(a_0), 1, 0);
        break;
    case 1:
        sub_825c(a_1, "Abigail2", sub_a6f(a_0), 0, 0, 4, -1592.8399658203125, 5214.04, 3.01, 400, "", 110, 0, "", 0, 0, -1, 4, 1, 0, 2359, sub_82ed(a_0), 1, 0);
        break;
    case 2:
        sub_825c(a_1, "Barry1", sub_a6f(a_0), 0, 1, 4, 190.26, -956.3499755859375, 29.63, 381, "", 74, 0, "", 0, 1, -1, 4, 1, 0, 2359, sub_82ed(a_0), 1, 0);
        break;
    case 3:
        sub_825c(a_1, "Barry2", sub_a6f(a_0), 0, 1, 4, 190.26, -956.3499755859375, 29.63, 381, "", -1, 0, "", 0, 1, -1, 4, 4, 0, 2359, sub_82ed(a_0), 1, 1);
        break;
    case 4:
        sub_825c(a_1, "Barry3", sub_a6f(a_0), 0, 1, 4, 414.0, -761.0, 29.0, 381, "", -1, 0, "", 164, 1, -1, 0, 2, 0, 2359, sub_82ed(a_0), 0, 0);
        break;
    case 5:
        sub_825c(a_1, "Barry3A", sub_a6f(a_0), 1, 1, 0, 1199.27, -1255.63, 34.23, 381, "BARSTASH", 84, 0, "", 166, 0, 7, 4, 2, 0, 2359, sub_82ed(a_0), 0, 1);
        break;
    case 6:
        sub_825c(a_1, "Barry3C", sub_a6f(a_0), 3, 1, 0, 468.9, -1713.06, 18.21, 381, "", 84, 0, "", 166, 0, 7, 4, 2, 0, 2359, sub_82ed(a_0), 0, 1);
        break;
    case 7:
        sub_825c(a_1, "Barry4", sub_a6f(a_0), 0, 1, 4, 237.64999999999998, -385.41, 44.4, 381, "", 85, 0, "postRC_Barry4", 0, 0, -1, 4, 2, 800, 2000, sub_82ed(a_0), 0, 0);
        break;
    case 8:
        sub_825c(a_1, "Dreyfuss1", sub_a6f(a_0), 0, 2, 4, -1458.969970703125, 485.99, 115.38, 66, "LETTERS_HINT", 106, 0, "", 0, 0, -1, 4, 2, 0, 2359, sub_82ed(a_0), 0, 0);
        break;
    case 9:
        sub_825c(a_1, "Epsilon1", sub_a6f(a_0), 0, 3, 4, -1622.89, 4204.8701171875, 83.3, 66, "", 86, 0, "", 0, 1, 10, 4, 1, 0, 2359, sub_82ed(a_0), 0, 0);
        break;
    case 10:
        sub_825c(a_1, "Epsilon2", sub_a6f(a_0), 0, 3, 4, 242.7, 362.7, 104.74, 206, "", 87, 16, "", 0, 0, 11, 4, 1, 0, 2359, sub_82ed(a_0), 1, 0);
        break;
    case 11:
        sub_825c(a_1, "Epsilon3", sub_a6f(a_0), 0, 3, 4, 1835.53, 4705.85986328125, 38.1, 206, "", 88, 16, "epsCars", 0, 0, 12, 4, 1, 0, 2359, sub_82ed(a_0), 0, 0);
        break;
    case 12:
        sub_825c(a_1, "Epsilon4", sub_a6f(a_0), 0, 3, 4, 1826.13, 4698.8798828125, 38.919999999999995, 206, "", 90, 16, "postRC_Epsilon4", 0, 0, 13, 4, 1, 0, 2359, sub_82ed(a_0), 0, 0);
        break;
    case 13:
        sub_825c(a_1, "Epsilon5", sub_a6f(a_0), 0, 3, 4, 637.02, 119.70929718017578, 89.5, 206, "", 89, 16, "epsRobes", 0, 0, 14, 4, 1, 0, 2359, sub_82ed(a_0), 1, 0);
        break;
    case 14:
        sub_825c(a_1, "Epsilon6", sub_a6f(a_0), 0, 3, 4, -2892.929931640625, 3192.3701171875, 11.66, 206, "", 93, 0, "", 0, 0, 15, 4, 1, 0, 2359, sub_82ed(a_0), 0, 1);
        break;
    case 15:
        sub_825c(a_1, "Epsilon7", sub_a6f(a_0), 0, 3, 4, 524.43, 3079.82, 39.48, 206, "", -1, 16, "epsDesert", 0, 0, 16, 4, 1, 0, 2359, sub_82ed(a_0), 0, 0);
        break;
    case 16:
        sub_825c(a_1, "Epsilon8", sub_a6f(a_0), 0, 3, 4, -697.75, 45.38, 43.03, 206, "", 94, 16, "epsilonTract", 0, 0, -1, 4, 1, 0, 2359, sub_82ed(a_0), 1, 0);
        break;
    case 17:
        sub_825c(a_1, "Extreme1", sub_a6f(a_0), 0, 4, 4, -188.22, 1296.1, 302.8599853515625, 66, "", -1, 0, "", 4, 1, 18, 4, 2, 0, 2359, sub_82ed(a_0), 0, 1);
        break;
    case 18:
        sub_825c(a_1, "Extreme2", sub_a6f(a_0), 0, 4, 4, -954.19, -2760.05, 14.64, 382, "", 96, 0, "", 171, 0, 19, 4, 2, 0, 2359, sub_82ed(a_0), 0, 1);
        break;
    case 19:
        sub_825c(a_1, "Extreme3", sub_a6f(a_0), 0, 4, 4, 63.8, -809.5, 321.8, 382, "", 97, 0, "", 0, 0, 20, 4, 2, 0, 2359, sub_82ed(a_0), 0, 1);
        break;
    case 20:
        sub_825c(a_1, "Extreme4", sub_a6f(a_0), 0, 4, 4, 1731.41, 96.96, 170.39, 382, "", 98, 16, "", 0, 0, -1, 4, 2, 0, 2359, sub_82ed(a_0), 0, 0);
        break;
    case 21:
        sub_825c(a_1, "Fanatic1", sub_a6f(a_0), 0, 5, 4, -1877.8199462890625, -440.64898681640625, 45.05, 405, "", 74, 0, "", 0, 1, -1, 4, 1, 700, 2000, sub_82ed(a_0), 1, 0);
        break;
    case 22:
        sub_825c(a_1, "Fanatic2", sub_a6f(a_0), 0, 5, 4, 809.6599731445312, 1279.76, 360.49, 405, "", -1, 0, "", 0, 1, -1, 4, 4, 700, 2000, sub_82ed(a_0), 1, 0);
        break;
    case 23:
        sub_825c(a_1, "Fanatic3", sub_a6f(a_0), 0, 5, 4, 915.6, 6139.2, 5.5, 405, "", -1, 0, "", 0, 1, -1, 4, 2, 700, 2000, sub_82ed(a_0), 0, 1);
        break;
    case 24:
        sub_825c(a_1, "Hao1", sub_a6f(a_0), 0, 6, 4, -72.29, -1260.63, 28.14, 66, "", -1, 0, "controller_Races", 13, 1, -1, 4, 2, 2000, 500, sub_82ed(a_0), 0, 1);
        break;
    case 25:
        sub_825c(a_1, "Hunting1", sub_a6f(a_0), 0, 7, 4, 1804.3199462890625, 3931.33, 32.82, 66, "", -1, 0, "", 174, 1, 26, 4, 4, 0, 2359, sub_82ed(a_0), 0, 1);
        break;
    case 26:
        sub_825c(a_1, "Hunting2", sub_a6f(a_0), 0, 7, 4, -684.1699829101562, 5839.16015625, 16.09, 384, "", 99, 0, "", 7, 0, -1, 4, 4, 0, 2359, sub_82ed(a_0), 0, 1);
        break;
    case 27:
        sub_825c(a_1, "Josh1", sub_a6f(a_0), 0, 8, 4, -1104.93, 291.25, 64.3, 66, "", -1, 0, "forSaleSigns", 0, 1, 28, 4, 4, 0, 2359, sub_82ed(a_0), 1, 0);
        break;
    case 28:
        sub_825c(a_1, "Josh2", sub_a6f(a_0), 0, 8, 4, 565.39, -1772.88, 29.77, 385, "", 105, 0, "", 0, 0, 29, 4, 4, 0, 2359, sub_82ed(a_0), 1, 1);
        break;
    case 29:
        sub_825c(a_1, "Josh3", sub_a6f(a_0), 0, 8, 4, 565.39, -1772.88, 29.77, 385, "", -1, 16, "", 0, 0, 30, 4, 4, 0, 2359, sub_82ed(a_0), 1, 1);
        break;
    case 30:
        sub_825c(a_1, "Josh4", sub_a6f(a_0), 0, 8, 4, -1104.93, 291.25, 64.3, 385, "", -1, 36, "", 0, 0, -1, 4, 4, 0, 2359, sub_82ed(a_0), 1, 0);
        break;
    case 31:
        sub_825c(a_1, "Maude1", sub_a6f(a_0), 0, 9, 4, 2726.1, 4145.0, 44.3, 66, "", -1, 0, "BailBond_Launcher", 0, 1, -1, 4, 4, 0, 2359, sub_82ed(a_0), 0, 1);
        break;
    case 32:
        sub_825c(a_1, "Minute1", sub_a6f(a_0), 0, 10, 4, 327.85, 3405.7, 35.73, 66, "", -1, 0, "", 0, 1, 33, 4, 4, 0, 2359, sub_82ed(a_0), 0, 1);
        break;
    case 33:
        sub_825c(a_1, "Minute2", sub_a6f(a_0), 0, 10, 4, 18.0, 4527.0, 105.0, 386, "", -1, 10, "", 0, 0, 34, 4, 4, 0, 2359, sub_82ed(a_0), 0, 1);
        break;
    case 34:
        sub_825c(a_1, "Minute3", sub_a6f(a_0), 0, 10, 4, -303.82, 6211.29, 31.05, 386, "", -1, 10, "", 0, 0, -1, 4, 4, 0, 2359, sub_82ed(a_0), 0, 1);
        break;
    case 35:
        sub_825c(a_1, "MrsPhilips1", sub_a6f(a_0), 0, 11, 4, 1972.5899658203125, 3816.429931640625, 32.419999999999995, 66, "", -1, 0, "ambient_MrsPhilips", 0, 1, -1, 4, 4, 0, 2359, sub_82ed(a_0), 0, 0);
        break;
    case 36:
        sub_825c(a_1, "MrsPhilips2", sub_a6f(a_0), 0, 11, 4, 0.0, 0.0, 0.0, -1, "", -1, 0, "", 0, 1, -1, 4, 4, 0, 2359, sub_82ed(a_0), 0, 0);
        break;
    case 37:
        sub_825c(a_1, "Nigel1", sub_a6f(a_0), 0, 12, 4, -1097.16, 790.01, 164.52, 66, "", -1, 0, "", 177, 1, -1, 1, 4, 0, 2359, sub_82ed(a_0), 1, 0);
        break;
    case 38:
        sub_825c(a_1, "Nigel1A", sub_a6f(a_0), 0, 12, 1, -558.65, 284.49, 90.86, 149, "NIGITEMS", 100, 0, "", 0, 0, 42, 4, 4, 0, 2359, sub_82ed(a_0), 1, 1);
        break;
    case 39:
        sub_825c(a_1, "Nigel1B", sub_a6f(a_0), 0, 12, 1, -1034.15, 366.0799865722656, 80.11, 149, "", 100, 0, "", 0, 0, 42, 4, 4, 700, 2000, sub_82ed(a_0), 1, 1);
        break;
    case 40:
        sub_825c(a_1, "Nigel1C", sub_a6f(a_0), 0, 12, 1, -623.9099731445312, -266.17, 37.76, 149, "", 100, 0, "", 0, 0, 42, 4, 4, 700, 2000, sub_82ed(a_0), 1, 1);
        break;
    case 41:
        sub_825c(a_1, "Nigel1D", sub_a6f(a_0), 0, 12, 1, -1096.8499755859375, 67.68, 52.95, 149, "", 100, 0, "", 0, 0, 42, 4, 4, 700, 2000, sub_82ed(a_0), 1, 1);
        break;
    case 42:
        sub_825c(a_1, "Nigel2", sub_a6f(a_0), 0, 12, 4, 1310.6999999999998, -640.219970703125, 26.54, 149, "", -1, 8, "", 0, 0, 43, 4, 4, 0, 2359, sub_82ed(a_0), 1, 1);
        break;
    case 43:
        sub_825c(a_1, "Nigel3", sub_a6f(a_0), 0, 12, 4, -44.75, -1288.67, 28.21, 149, "", -1, 16, "postRC_Nigel3", 0, 0, -1, 4, 4, 0, 2359, sub_82ed(a_0), 1, 1);
        break;
    case 44:
        sub_825c(a_1, "Omega1", sub_a6f(a_0), 0, 13, 4, 2468.51, 3437.389892578125, 49.9, 66, "", -1, 0, "spaceshipParts", 0, 1, 45, 4, 2, 0, 2359, sub_82ed(a_0), 0, 0);
        break;
    case 45:
        sub_825c(a_1, "Omega2", sub_a6f(a_0), 0, 13, 4, 2319.43994140625, 2583.58, 46.76, 387, "", 107, 0, "", 0, 0, -1, 4, 2, 0, 2359, sub_82ed(a_0), 0, 0);
        break;
    case 46:
        sub_825c(a_1, "Paparazzo1", sub_a6f(a_0), 0, 14, 4, -149.75, 285.81, 93.67, 66, "", -1, 0, "", 0, 1, 47, 4, 2, 0, 2359, sub_82ed(a_0), 0, 1);
        break;
    case 47:
        sub_825c(a_1, "Paparazzo2", sub_a6f(a_0), 0, 14, 4, 70.71, 301.43, 106.79, 389, "", -1, 8, "", 0, 0, 48, 4, 2, 0, 2359, sub_82ed(a_0), 0, 1);
        break;
    case 48:
        sub_825c(a_1, "Paparazzo3", sub_a6f(a_0), 0, 14, 4, -257.22, 292.85, 90.63, 389, "", -1, 8, "", 183, 1, -1, 2, 2, 0, 2359, sub_82ed(a_0), 0, 0);
        break;
    case 49:
        sub_825c(a_1, "Paparazzo3A", sub_a6f(a_0), 0, 14, 2, 305.5199890136719, 157.19, 102.94, 389, "PAPPHOTO", 102, 0, "", 0, 0, 51, 4, 2, 0, 2359, sub_82ed(a_0), 0, 1);
        break;
    case 50:
        sub_825c(a_1, "Paparazzo3B", sub_a6f(a_0), 0, 14, 2, 1040.9599609375, -534.4199829101562, 60.169999999999995, 389, "", 102, 0, "", 0, 0, 51, 4, 2, 0, 2359, sub_82ed(a_0), 0, 1);
        break;
    case 51:
        sub_825c(a_1, "Paparazzo4", sub_a6f(a_0), 0, 14, 4, -484.2, 229.67999999999998, 82.21, 389, "", -1, 8, "", 0, 1, -1, 4, 2, 0, 2359, sub_82ed(a_0), 0, 0);
        break;
    case 52:
        sub_825c(a_1, "Rampage1", sub_a6f(a_0), 0, 15, 4, 908.0, 3643.7, 32.2, 66, "", -1, 0, "", 0, 1, 54, 4, 4, 0, 2359, sub_82ed(a_0), 0, 0);
        break;
    case 54:
        sub_825c(a_1, "Rampage3", sub_a6f(a_0), 0, 15, 4, 465.1, -1849.3, 27.8, 84, "", -1, 0, "", 0, 1, 55, 4, 4, 0, 2359, sub_82ed(a_0), 1, 0);
        break;
    case 55:
        sub_825c(a_1, "Rampage4", sub_a6f(a_0), 0, 15, 4, -161.0, 1669.6999999999998, 33.0, 84, "", -1, 0, "", 0, 0, 56, 4, 4, 0, 2359, sub_82ed(a_0), 1, 0);
        break;
    case 56:
        sub_825c(a_1, "Rampage5", sub_a6f(a_0), 0, 15, 4, 1298.1999999999998, 2504.139892578125, 21.09, 84, "", -1, 0, "", 0, 0, 53, 4, 4, 0, 2359, sub_82ed(a_0), 0, 0);
        break;
    case 53:
        sub_825c(a_1, "Rampage2", sub_a6f(a_0), 0, 15, 4, 1181.5, -400.1, 67.5, 84, "", -1, 0, "rampage_controller", 0, 0, -1, 4, 4, 0, 2359, sub_82ed(a_0), 1, 0);
        break;
    case 57:
        sub_825c(a_1, "TheLastOne", sub_a6f(a_0), 0, 16, 4, -1298.97998046875, 4640.16015625, 105.67, 66, "", 133, 1, "", 0, 1, -1, 4, 2, 0, 2359, sub_82ed(a_0), 0, 1);
        break;
    case 58:
        sub_825c(a_1, "Tonya1", sub_a6f(a_0), 0, 17, 4, -14.39, -1472.68994140625, 29.58, 66, "AM_H_RCFS", -1, 0, "ambient_TonyaCall", 24, 1, 59, 4, 2, 0, 2359, sub_82ed(a_0), 0, 1);
        break;
    case 59:
        sub_825c(a_1, "Tonya2", sub_a6f(a_0), 0, 17, 4, -14.39, -1472.68994140625, 29.58, 388, "", -1, 48, "ambient_Tonya", 185, 0, 60, 4, 2, 0, 2359, sub_82ed(a_0), 0, 1);
        break;
    case 60:
        sub_825c(a_1, "Tonya3", sub_a6f(a_0), 0, 17, 4, 0.0, 0.0, 0.0, -1, "", -1, 0, "", 187, 0, 61, 4, 2, 0, 2359, sub_82ed(a_0), 0, 1);
        break;
    case 61:
        sub_825c(a_1, "Tonya4", sub_a6f(a_0), 0, 17, 4, 0.0, 0.0, 0.0, -1, "", -1, 0, "", 0, 0, 62, 4, 2, 0, 2359, sub_82ed(a_0), 0, 1);
        break;
    case 62:
        sub_825c(a_1, "Tonya5", sub_a6f(a_0), 0, 17, 4, -14.39, -1472.68994140625, 29.58, 388, "", -1, 48, "", 0, 0, -1, 4, 2, 0, 2359, sub_82ed(a_0), 0, 1);
        break;
    default:
        break;
    }
}

void sub_825c(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11, auto a_12, auto a_13, auto a_14, auto a_15, auto a_16, auto a_17, auto a_18, auto a_19, auto a_20, auto a_21, auto a_22, auto a_23, auto a_24) {
    a_0._f4 = a_5;
    a_0 = a_1;
    a_0._f1/*{2}*/ = a_2;
    a_0._f3 = a_4;
    a_0._f5 = a_6;
    a_0._f6/*{3}*/ = a_7;
    a_0._f9 = a_A;
    a_0._fA/*"16"*/ = a_B;
    a_0._fE = a_C;
    a_0._fF = a_D;
    a_0._f10/*"24"*/ = a_E;
    a_0._f16 = a_F;
    a_0._f17 = a_10;
    a_0._f18 = a_11;
    a_0._f19 = a_12;
    a_0._f1A = a_13;
    a_0._f1B = a_14;
    a_0._f1C = a_15;
    a_0._f1D = a_16;
    a_0._f1E = a_17;
    a_0._f1F = a_18;
}

auto sub_82ed(auto a_0) {
    switch (a_0) {
    case 0:
        return 0;
        break;
    case 1:
        return 0;
        break;
    case 2:
        return 1;
        break;
    case 3:
        return 1;
        break;
    case 4:
        return 0;
        break;
    case 5:
        return 1;
        break;
    case 6:
        return 1;
        break;
    case 7:
        return 0;
        break;
    case 8:
        return 1;
        break;
    case 9:
        return 0;
        break;
    case 10:
        return 0;
        break;
    case 11:
        return 0;
        break;
    case 12:
        return 1;
        break;
    case 13:
        return 0;
        break;
    case 14:
        return 1;
        break;
    case 15:
        return 0;
        break;
    case 16:
        return 1;
        break;
    case 17:
        return 1;
        break;
    case 18:
        return 1;
        break;
    case 19:
        return 1;
        break;
    case 20:
        return 1;
        break;
    case 21:
        return 1;
        break;
    case 22:
        return 1;
        break;
    case 23:
        return 1;
        break;
    case 24:
        return 1;
        break;
    case 25:
        return 1;
        break;
    case 26:
        return 1;
        break;
    case 27:
        return 0;
        break;
    case 28:
        return 1;
        break;
    case 29:
        return 1;
        break;
    case 30:
        return 1;
        break;
    case 31:
        return 0;
        break;
    case 32:
        return 1;
        break;
    case 33:
        return 1;
        break;
    case 34:
        return 1;
        break;
    case 35:
        return 0;
        break;
    case 36:
        return 0;
        break;
    case 37:
        return 0;
        break;
    case 38:
        return 1;
        break;
    case 39:
        return 1;
        break;
    case 40:
        return 1;
        break;
    case 41:
        return 1;
        break;
    case 42:
        return 1;
        break;
    case 43:
        return 1;
        break;
    case 44:
        return 0;
        break;
    case 45:
        return 0;
        break;
    case 46:
        return 1;
        break;
    case 47:
        return 1;
        break;
    case 48:
        return 0;
        break;
    case 49:
        return 1;
        break;
    case 50:
        return 1;
        break;
    case 51:
        return 1;
        break;
    case 52:
        return 1;
        break;
    case 54:
        return 1;
        break;
    case 55:
        return 1;
        break;
    case 56:
        return 1;
        break;
    case 53:
        return 1;
        break;
    case 57:
        return 1;
        break;
    case 58:
        return 1;
        break;
    case 59:
        return 1;
        break;
    case 60:
        return 1;
        break;
    case 61:
        return 1;
        break;
    case 62:
        return 1;
        break;
    default:
        break;
    }
    return 0;
}

auto sub_8633(auto a_0) {
    if (sub_8f71(&a_0._f1)) {
        if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&a_0._f9)) {
            sub_8d0b(1);
            sub_8bac(a_0, 1, sub_8ca0(a_0));
        }
        if (a_0._f1B) {
            if (sub_8b59(a_0)) {
                while (!PED::IS_PED_ON_FOOT(PLAYER::PLAYER_PED_ID())) {
                    sub_9037();
                    SYSTEM::WAIT(0);
                }
            }
        }
        sub_86d7(a_0);
        v_3 = SYSTEM::START_NEW_SCRIPT_WITH_ARGS(&a_0._f1, a_0, 61, 17000);
        SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(&a_0._f1);
        if (CUTSCENE::HAS_CUTSCENE_LOADED()) {
            sub_dc91("Initial cutscene loaded and passing to RC mission.");
            CUTSCENE::_8D9DF6ECA8768583(v_3);
        } else { 
            sub_dc91("Initial cutscene wasn't loaded in time to pass to RC mission.");
            CUTSCENE::REMOVE_CUTSCENE();
        }
        return 1;
    }
    return 0;
}

void sub_86d7(auto a_0) {
    sub_8adc();
    if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 32, 0);
        PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 250, 0);
    }
    if (sub_8a89(a_0)) {
        PED::REMOVE_PED_HELMET(PLAYER::PLAYER_PED_ID(), 0);
    }
    PLAYER::SET_ALL_RANDOM_PEDS_FLEE(PLAYER::PLAYER_ID(), 1);
    UI::CLEAR_ADDITIONAL_TEXT(0, 1);
    UI::CLEAR_ADDITIONAL_TEXT(3, 1);
    UI::CLEAR_ADDITIONAL_TEXT(2, 1);
    if (g_8C75 == 1) {
        if (sub_8a49(PLAYER::PLAYER_PED_ID())) {
            sub_87d0(PLAYER::PLAYER_PED_ID());
        }
    }
    if (!sub_9887()) {
        if (a_0 < 63) {
            sub_8772(a_0);
            v_3/*{2}*/ = sub_a6f(a_0);
            UI::SET_MISSION_NAME(1, &v_3);
        }
    }
}

void sub_8772(auto a_0) {
    if (a_0 < 63) {
        sub_8798();
        g_10B94 = a_0;
        g_10B93 = 0;
        g_10B96 = 7;
    } else { }
}

void sub_8798() {
    if (g_10B93 != 6) {}
    if (g_10B98) {
        UI::RESET_HUD_COMPONENT_VALUES(15);
        g_10B98 = 0;
        g_4354._f1C27 = 0;
    }
    g_10B93 = 6;
    g_10B95 = -1;
    g_10B94 = -1;
}

void sub_87d0(auto a_0) {
    if (a_0 == 0) {
        return ;
    }
    if (!ENTITY::DOES_ENTITY_EXIST(a_0)) {
        return ;
    }
    v_3 = sub_8a00(a_0);
    if (!(v_3 == -1)) {
        v_4 = g_8BB0[v_3/*5*/];
        sub_88dd(1, v_4, 1);
        return ;
    }
    v_5 = sub_88ac(a_0);
    if (v_5 == -1) {
        return ;
    }
    sub_8829(v_5);
}

void sub_8829(auto a_0) {
    if ((a_0 < 0) || (a_0 >= 5)) {
        return ;
    }
    if (!(g_8B96[a_0/*5*/]._f1 == 0)) {
        if (g_8B96[a_0/*5*/]._f1 == PLAYER::PLAYER_PED_ID()) {
            g_8C73 = 0;
        }
    }
    g_8B96[a_0/*5*/] = 13;
    g_8B96[a_0/*5*/]._f1 = 0;
    g_8B96[a_0/*5*/]._f2 = 0;
    g_8B96[a_0/*5*/]._f3 = 0;
    g_8B96[a_0/*5*/]._f4 = 0;
    g_8B95 -= 1;
    if (g_8B95 < 0) {
        g_8B95 = 0;
    }
}

auto sub_88ac(auto a_0) {
    v_3 = 0;
    for (v_3 = 0; v_3 < 5; v_3 += 1) {
        if (g_8B96[v_3/*5*/]._f1 == a_0) {
            return v_3;
        }
    }
    return -1;
}

void sub_88dd(auto a_0, auto a_1, auto a_2) {
    sub_88f1(a_0, a_1, a_2, 0, 0);
}

void sub_88f1(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (a_0 == -1) {
        return ;
    }
    if (a_1 == -1) {
        return ;
    }
    if (a_2 == 6) {
        return ;
    }
    if (sub_8999(a_0, a_1, a_2)) {
        return ;
    }
    v_7 = sub_8968();
    if (v_7 == -1) {
        return ;
    }
    g_8C01[v_7/*5*/] = a_0;
    g_8C01[v_7/*5*/]._f1 = a_1;
    g_8C01[v_7/*5*/]._f2 = a_2;
    g_8C01[v_7/*5*/]._f3 = a_3;
    g_8C01[v_7/*5*/]._f4 = a_4;
}

auto sub_8968() {
    v_2 = 0;
    for (v_2 = 0; v_2 < 16; v_2 += 1) {
        if (g_8C01[v_2/*5*/]._f2 == 6) {
            return v_2;
        }
    }
    return -1;
}

auto sub_8999(auto a_0, auto a_1, auto a_2) {
    if (sub_89b4(a_0, a_1, a_2) == -1) {
        return 0;
    }
    return 1;
}

auto sub_89b4(auto a_0, auto a_1, auto a_2) {
    v_5 = 0;
    for (v_5 = 0; v_5 < 16; v_5 += 1) {
        if (a_2 == g_8C01[v_5/*5*/]._f2) {
            if (a_0 == g_8C01[v_5/*5*/]) {
                if (a_1 == g_8C01[v_5/*5*/]._f1) {
                    return v_5;
                }
            }
        }
    }
    return -1;
}

auto sub_8a00(auto a_0) {
    if (a_0 == 0) {
        return -1;
    }
    v_3 = 0;
    for (v_3 = 0; v_3 < 16; v_3 += 1) {
        if (!(g_8BB0[v_3/*5*/] == -1)) {
            if (a_0 == g_8BB0[v_3/*5*/]._f1) {
                return v_3;
            }
        }
    }
    return -1;
}

auto sub_8a49(auto a_0) {
    if (sub_8a69(a_0)) {
        if (!PED::IS_PED_INJURED(a_0)) {
            return 1;
        }
    }
    return 0;
}

auto sub_8a69(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!ENTITY::IS_ENTITY_DEAD(a_0)) {
            return 1;
        }
    }
    return 0;
}

auto sub_8a89(auto a_0) {
    switch (a_0) {
    case 5:
    case 6:
    case 38:
    case 39:
    case 40:
    case 41:
    case 49:
    case 50:
    case 60:
    case 61:
        return 0;
        break;
    }
    return 1;
}

void sub_8adc() {
    if (g_BFC[0/*2811*/][0/*281*/]._f103 == 2) {
        g_BFC[0/*2811*/][0/*281*/]._f103 = 0;
    }
    if (g_BFC[1/*2811*/][0/*281*/]._f103 == 2) {
        g_BFC[1/*2811*/][0/*281*/]._f103 = 0;
    }
    if (g_BFC[2/*2811*/][0/*281*/]._f103 == 2) {
        g_BFC[2/*2811*/][0/*281*/]._f103 = 0;
    }
    GAMEPLAY::CLEAR_BIT(&g_8D7, 25);
    GAMEPLAY::SET_BIT(&g_8D8, 11);
}

auto sub_8b59(auto a_0) {
    switch (a_0) {
    case 5:
    case 6:
    case 14:
    case 16:
    case 38:
    case 39:
    case 40:
    case 41:
    case 49:
    case 50:
        return 0;
        break;
    }
    return 1;
}

void sub_8bac(auto a_0, auto a_1, auto a_2) {
    for (v_5 = 0; v_5 < 6; v_5 += 1) {
        if (sub_8a69(a_0._f1C[v_5/*1*/])) {
            ENTITY::SET_ENTITY_PROOFS(a_0._f1C[v_5/*1*/], a_1, a_1, a_1, a_1, a_1, 0, 0, 0);
        }
    }
    for (v_5 = 0; v_5 < 5; v_5 += 1) {
        if (sub_8a69(a_0._f23[v_5/*1*/])) {
            ENTITY::SET_ENTITY_PROOFS(a_0._f23[v_5/*1*/], a_1, a_1, a_1, a_1, a_1, 0, 0, 0);
        }
    }
    for (v_5 = 0; v_5 < 6; v_5 += 1) {
        if (sub_8a69(a_0._f29[v_5/*1*/])) {
            ENTITY::SET_ENTITY_PROOFS(a_0._f29[v_5/*1*/], a_1, a_1, a_1, a_1, a_1, 0, 0, 0);
        }
    }
    if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID())) {
        ENTITY::SET_ENTITY_PROOFS(PLAYER::PLAYER_PED_ID(), a_1, a_1, a_1, a_1, a_1, 0, 0, 0);
        ENTITY::SET_ENTITY_INVINCIBLE(PLAYER::PLAYER_PED_ID(), a_1);
        if (a_2) {
            WEAPON::SET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), ${weapon_unarmed}, 1);
        }
    }
}

auto sub_8ca0(auto a_0) {
    switch (a_0) {
    case 5:
    case 6:
    case 14:
    case 38:
    case 39:
    case 40:
    case 41:
    case 49:
    case 50:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
        return 0;
        break;
    }
    return 1;
}

void sub_8d0b(auto a_0) {
    v_3 = PLAYER::GET_PLAYER_INDEX();
    if (!PLAYER::IS_PLAYER_DEAD(v_3)) {
        if (a_0) {
        } else { }
        PLAYER::SET_PLAYER_CONTROL(v_3, a_0, 16);
        PLAYER::SET_PLAYER_CONTROL(v_3, a_0, 32);
    }
    sub_8d47(1, 1, 0, 0);
}

void sub_8d47(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_0) {
        PLAYER::_9CB5CE07A3968D5A(PLAYER::PLAYER_ID());
        PLAYER::SET_ALL_RANDOM_PEDS_FLEE(PLAYER::PLAYER_ID(), 1);
        PLAYER::SET_POLICE_IGNORE_PLAYER(PLAYER::PLAYER_ID(), 1);
        sub_8f4e(1);
        UI::_A8FDB297A8D25FBA();
        UI::_FDB423997FA30340();
        if (g_3839._f1 > 3) {
            if (AUDIO::IS_MOBILE_PHONE_CALL_ONGOING()) {
                AUDIO::STOP_SCRIPTED_CONVERSATION(0);
            }
            if (!sub_8f27()) {
                g_3839._f1 = 3;
            }
            g_3D4C = 5;
        }
        sub_8ef6(1, a_3, a_2);
        g_D5E4 = 1;
        g_105F5 = 1;
        g_10A93 = 1;
    } else { 
        sub_8f4e(0);
        UI::_E1CD1E48E025E661();
        g_D5E4 = 0;
        if (a_1) {
            GRAPHICS::_03FC694AE06C5A20();
        }
        PLAYER::SET_ALL_RANDOM_PEDS_FLEE(PLAYER::PLAYER_ID(), 0);
        PLAYER::SET_POLICE_IGNORE_PLAYER(PLAYER::PLAYER_ID(), 0);
        sub_8ef6(0, a_3, a_2);
        if ((!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) && (!sub_8e18(PLAYER::PLAYER_ID()))) {
            ENTITY::SET_ENTITY_INVINCIBLE(PLAYER::PLAYER_PED_ID(), 0);
        }
        g_10A93 = 0;
    }
}

auto sub_8e18(auto a_0) {
    if (sub_8e6a(a_0, 0)) {
        return 1;
    }
    if (sub_8e59()) {
        if (a_0 == PLAYER::PLAYER_ID()) {
            return 1;
        }
    }
    if (GAMEPLAY::IS_BIT_SET(g_24D5B9[a_0/*254*/]._fC2, 2)) {
        return 1;
    }
    return 0;
}

auto sub_8e59() {
    return GAMEPLAY::IS_BIT_SET(g_240005, 3);
}

auto sub_8e6a(auto a_0, auto a_1) {
    if (a_0 == PLAYER::PLAYER_ID()) {
        v_4 = sub_8eb5(-1, 0) == 8;
    } else { 
        v_4 = g_182604[a_0/*324*/]._fB4 == 8;
    }
    if (a_1 == 1) {
        if (NETWORK::NETWORK_IS_PLAYER_ACTIVE(a_0)) {
            v_4 = PLAYER::GET_PLAYER_TEAM(a_0) == 8;
        }
    }
    return v_4;
}

auto sub_8eb5(auto a_0, auto a_1) {
    v_5 = a_0;
    if (v_5 == -1) {
        v_5 = sub_3802();
    }
    if (g_141425[v_5/*1*/] == 1) {
        if (a_1) {}
        v_4 = 8;
    } else { 
        v_4 = g_1407DB[v_5/*1*/];
        if (a_1) {}
    }
    return v_4;
}

auto sub_8ef6(auto a_0, auto a_1, auto a_2) {
    v_5 = 0;
    if (GAMEPLAY::IS_PC_VERSION()) {
        if ((CUTSCENE::_A0FE76168A189DDB() != a_0) && a_2) {
            CUTSCENE::_20746F7B1032A3C7(a_0, a_1, 1);
            v_5 = 1;
        }
    }
    return v_5;
}

auto sub_8f27() {
    if ((g_3839._f1 == 1) || (g_3839._f1 == 0)) {
        return 1;
    } else { 
        return 0;
    }
}

void sub_8f4e(auto a_0) {
    if (a_0 == 1) {
        GAMEPLAY::SET_BIT(&g_8D7, 13);
    } else { 
        GAMEPLAY::CLEAR_BIT(&g_8D7, 13);
    }
}

auto sub_8f71(auto a_0) {
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_0)) {
        SCRIPT::REQUEST_SCRIPT(a_0);
        while (!SCRIPT::HAS_SCRIPT_LOADED(a_0)) {
            SCRIPT::REQUEST_SCRIPT(a_0);
            SYSTEM::WAIT(0);
        }
        return 1;
    }
    sub_dc91("Attempting to launch invalid script file [TERMINATING]");
    return 0;
}

void sub_8fae() {
    g_38DE = 0;
    sub_8fbe();
}

void sub_8fbe() {
    AUDIO::RESTART_SCRIPTED_CONVERSATION();
    g_413F = 0;
    if ((AUDIO::IS_MOBILE_PHONE_CALL_ONGOING() || (g_3839._f1 == 9)) || (g_3838 == 1)) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(0);
        g_3D4C = 6;
        g_3839._f1 = 3;
        return ;
    }
    if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(1);
        g_3D4C = 6;
        return ;
    }
}

auto sub_9015() {
    if ((g_3D4C != 0) || AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
        return 1;
    } else { 
        return 0;
    }
}

void sub_9037() {
    sub_9275();
    sub_9224();
    sub_904b();
}

void sub_904b() {
    if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
            if (sub_90a2(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), 10.5, 1, 0x3f000000, 0, 1)) {
                if (AI::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), 0xce98fbb3) != 1) {
                    AI::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 0);
                }
            }
        }
    }
}

auto sub_90a2(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    CONTROLS::DISABLE_CONTROL_ACTION(0, 71, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 72, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 76, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 73, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 59, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 60, 1);
    if (a_5) {
        CONTROLS::DISABLE_CONTROL_ACTION(0, 75, 1);
    }
    CONTROLS::DISABLE_CONTROL_ACTION(0, 80, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 69, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 70, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 68, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 74, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 86, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 81, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 82, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 138, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 136, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 114, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 107, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 110, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 89, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 89, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 87, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 88, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 113, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 115, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 116, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 117, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 118, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 119, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 131, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 132, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 123, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 126, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 129, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 130, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 133, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 134, 1);
    CAM::_17FCA7199A530203();
    if ((GAMEPLAY::GET_GAME_TIMER() - g_1C) > 500) {
        VEHICLE::_260BE8F09E326A20(a_0, a_1, a_2, a_4);
    }
    g_1C = GAMEPLAY::GET_GAME_TIMER();
    if (!ENTITY::IS_ENTITY_DEAD(a_0)) {
        if (GAMEPLAY::ABSF(ENTITY::GET_ENTITY_SPEED(a_0)) <= a_3) {
            return 1;
        }
    }
    return 0;
}

void sub_9224() {
    CONTROLS::DISABLE_CONTROL_ACTION(0, 21, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 37, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 25, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 141, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 140, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 24, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 257, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 22, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 23, 1);
}

void sub_9275() {
    if (!(g_3839._f1 == 1)) {
        if (sub_9381(0)) {
            sub_929d(0);
        }
        GAMEPLAY::SET_BIT(&g_8D8, 2);
    }
}

void sub_929d(auto a_0) {
    if (g_38D7) {
        sub_930d(0, 0);
    }
    if ((g_3839._f1 == 10) || (g_3839._f1 == 9)) {
        GAMEPLAY::SET_BIT(&g_8D8, 16);
    }
    if (AUDIO::IS_MOBILE_PHONE_CALL_ONGOING()) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(0);
    }
    g_3D4C = 5;
    if (a_0 == 1) {
        GAMEPLAY::SET_BIT(&g_8D7, 30);
    } else { 
        GAMEPLAY::CLEAR_BIT(&g_8D7, 30);
    }
    if (!sub_8f27()) {
        g_3839._f1 = 3;
    }
}

void sub_930d(auto a_0, auto a_1) {
    if (a_0) {
        if (sub_9381(0)) {
            g_38D7 = 1;
            if (a_1) {
                MOBILE::GET_MOBILE_PHONE_POSITION(&g_37FA);
            }
            g_37F1/*{3}*/ = g_3803[g_3802/*3*/];
            MOBILE::SET_MOBILE_PHONE_POSITION(g_37F1);
        }
    } else if (g_38D7 == 1) {
        g_38D7 = 0;
        g_37F1/*{3}*/ = g_380A[g_3802/*3*/];
        if (a_1) {
            MOBILE::SET_MOBILE_PHONE_POSITION(g_37FA);
        } else { 
            MOBILE::SET_MOBILE_PHONE_POSITION(g_37F1);
        }
    }
}

auto sub_9381(auto a_0) {
    if (a_0 == 1) {
        if (g_3839._f1 > 3) {
            if (GAMEPLAY::IS_BIT_SET(g_8D7, 14)) {
                return 1;
            } else { 
                return 0;
            }
        } else { 
            return 0;
        }
    } else { 
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${cellphone_flashhand}) > 0) {
            return 1;
        }
        if (g_3839._f1 > 3) {
            return 1;
        } else { 
            return 0;
        }
    }
}

auto sub_93db(auto a_0) {
    if (((((a_0 == 52) || (a_0 == 53)) || (a_0 == 54)) || (a_0 == 55)) || (a_0 == 56)) {
        return 1;
    }
    return 0;
}

auto sub_941c(auto a_0) {
    if (a_0 == -1) {
        a_0 = sub_982d();
    }
    if (a_0 == -1) {
        return 0;
    }
    v_3 = sub_9493(&g_178B8[a_0/*10*/]._f9, 1, 4, 0, 0);
    if (!(v_3 == 1)) {
        return 0;
    }
    sub_9461(a_0);
    return 1;
}

void sub_9461(auto a_0) {
    g_178B8[a_0/*10*/]._f4 = 1;
    g_178B8[a_0/*10*/]._f5 = 0;
    g_178B8[a_0/*10*/]._f6 = 0;
    g_178B8[a_0/*10*/] = 0;
}

auto sub_9493(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (a_1 == 7) {
        return 0;
    }
    if (!a_3) {
        if (g_15725._f2C == 1) {
            return 2;
        }
    }
    if (a_1 == 0) {
        if (sub_980b(0)) {
            return 0;
        }
        g_883D += 1;
        a_0 = g_883D;
        PLAYER::SET_PLAYER_INVINCIBLE(PLAYER::GET_PLAYER_INDEX(), 0);
        g_42CA._f5 = 0;
        if (a_2 != 5) {
            PLAYER::FORCE_CLEANUP(8);
        }
        g_8861 = a_2;
        g_883B = a_0;
        g_883C = a_4;
        g_883A = 0;
        return 1;
    }
    if (a_0 != -1) {
        if (g_883A > 0) {
            v_7 = 0;
            for (v_7 = 0; v_7 < g_883A; v_7 += 1) {
                if (g_8840[v_7/*4*/] == a_0) {
                    return 2;
                }
            }
        } else if (g_883B == a_0) {
            return 1;
        }
        a_0 = -1;
    }
    if (a_0 == -1) {
        if (!sub_9619(a_2)) {
            return 0;
        }
        if (g_883A == 8) {
            return 0;
        }
        g_883D += 1;
        a_0 = g_883D;
        g_8840[g_883A/*4*/] = g_883D;
        g_8840[g_883A/*4*/]._f1 = a_1;
        g_8840[g_883A/*4*/]._f2 = a_2;
        g_8840[g_883A/*4*/]._f3 = 0;
        g_883A += 1;
        if (a_4 != 0) {
            sub_95ca(a_0, a_4);
        }
    }
    return 2;
}

void sub_95ca(auto a_0, auto a_1) {
    if (g_883A == 0) {
        return ;
    }
    if (a_0 == -1) {
        return ;
    }
    v_4 = 0;
    for (v_4 = 0; v_4 < g_883A; v_4 += 1) {
        if (g_8840[v_4/*4*/] == a_0) {
            g_8840[v_4/*4*/]._f3 = a_1;
        }
    }
    a_0 = -1;
}

auto sub_9619(auto a_0) {
    return sub_962a(a_0, g_8861);
}

auto sub_962a(auto a_0, auto a_1) {
    if (a_1 == 15) {
        return 1;
    }
    if (a_0 == 15) {
        return 0;
    }
    switch (a_0) {
    case 16:
        switch (a_1) {
        case 7:
        case 9:
        case 10:
        case 13:
        case 14:
            return 0;
            break;
        }
        return 1;
        break;
    case 0:
        switch (a_1) {
        case 5:
        case 17:
            return 1;
            break;
        }
        break;
    case 2:
    case 3:
        switch (a_1) {
        case 5:
        case 6:
        case 8:
        case 17:
            return 1;
            break;
        }
        break;
    case 4:
        if (a_1 == 17) {
            return 1;
        }
        break;
    case 5:
        break;
    case 6:
    case 8:
        if (a_1 == 5) {
            return 1;
        }
        break;
    case 7:
        if (a_1 == 6) {
            return 1;
        }
        break;
    case 9:
        if (a_1 == 5) {
            return 1;
        }
        break;
    case 10:
        switch (a_1) {
        case 5:
        case 6:
        case 17:
            return 1;
            break;
        }
        break;
    case 11:
        if (a_1 == 5) {
            return 1;
        }
        break;
    case 17:
        switch (a_1) {
        case 5:
        case 12:
        case 17:
            return 1;
            break;
        }
        break;
    case 12:
    case 18:
        switch (a_1) {
        case 5:
        case 6:
        case 8:
            return 1;
            break;
        }
        break;
    case 13:
        switch (a_1) {
        case 5:
            return 1;
            break;
        }
        break;
    case 14:
        switch (a_1) {
        case 5:
            return 1;
            break;
        }
        break;
    }
    return 0;
}

auto sub_980b(auto a_0) {
    if (g_8861 == 15) {
        return 0;
    }
    if (sub_9619(a_0)) {
        return 0;
    }
    return 1;
}

auto sub_982d() {
    return sub_983e(SCRIPT::GET_THIS_SCRIPT_NAME(), 0);
}

auto sub_983e(auto a_0, auto a_1) {
    v_25 = GAMEPLAY::GET_HASH_KEY(a_0);
    v_26 = 0;
    for (v_26 = 0; v_26 < 63; v_26 += 1) {
        v_4 = v_26;
        sub_7013(v_4, &v_5);
        if (GAMEPLAY::GET_HASH_KEY(v_5) == v_25) {
            return v_4;
        }
    }
    if (a_1 == 0) {}
    return -1;
}

auto sub_9887() {
    if ((g_15F6A == 10) || (g_15F6A == 9)) {
        return 1;
    }
    return 0;
}

auto sub_98ab(auto a_0, auto a_1) {
    switch (a_0._f10) {
    case 0:
        if (a_0 == 12) {
            if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 1826.630615234375, 4699.115234375, 35.380889892578125, 1812.8775634765625, 4710.45703125, 42.05353546142578, 23.75, 0, 1, 0)) {
                if (sub_8a69(a_0._f1C[0/*1*/])) {
                    if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), ENTITY::GET_ENTITY_COORDS(a_0._f1C[0/*1*/], 1), 1) < 3.0) {
                        if (sub_a25a(2)) {
                            if (sub_a199(a_0._f1B)) {
                                sub_a136(a_0._f1B, a_0);
                                sub_dc91("ARE_RC_TRIGGER_CONDITIONS_MET: RC_TRIG_CHAR - Used special case Eps 4 trigger.");
                                return 1;
                            }
                        }
                    }
                } else { 
                    return 0;
                }
            } else if (sub_8a69(a_0._f1C[0/*1*/])) {
                if (sub_a0a8(a_0)) {
                    if (sub_a25a(2)) {
                        if (sub_a199(a_0._f1B)) {
                            sub_a136(a_0._f1B, a_0);
                            return 1;
                        }
                    }
                }
            } else { 
                return 0;
            }
        } else if (a_0 == 21) {
            if (((((!ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1895.7879638671875, -434.01922607421875, 40.3012580871582, -1883.03759765625, -444.08111572265625, 50.24509048461914, 8.5, 0, 1, 0)) && (!ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1883.576416015625, -443.64337158203125, 36.40580749511719, -1874.8258056640625, -448.0797119140625, 49.15161895751953, 8.5, 0, 1, 0))) && (!ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1876.3426513671875, -446.2214050292969, 35.64636993408203, -1866.951904296875, -456.56, 49.04419708251953, 8.5, 0, 1, 0))) && (!ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1882.997314453125, -438.9921569824219, 44.172462463378906, -1874.079345703125, -443.342041015625, 48.69178771972656, 0.75, 0, 1, 0))) || ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1878.822265625, -441.7655029296875, 44.917503356933594, -1877.94091796875, -439.95220947265625, 47.28981781, 1.25, 0, 1, 0)) {
                if (sub_8a69(a_0._f1C[0/*1*/])) {
                    if (sub_a0a8(a_0)) {
                        if (sub_a25a(2)) {
                            if (sub_a199(a_0._f1B)) {
                                sub_a136(a_0._f1B, a_0);
                                return 1;
                            }
                        }
                    }
                } else { 
                    return 0;
                }
            } else { 
                return 0;
            }
        } else if (a_0 == 22) {
            if (!ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 837.0730590820312, 1261.086181640625, 366.1591796875, 780.8382568359375, 1260.82861328125, 351.4049987792969, 17.75, 0, 1, 0)) {
                if (sub_8a69(a_0._f1C[0/*1*/])) {
                    if (sub_a0a8(a_0)) {
                        if (sub_a25a(2)) {
                            if (sub_a199(a_0._f1B)) {
                                sub_a136(a_0._f1B, a_0);
                                return 1;
                            }
                        }
                    }
                } else { 
                    return 0;
                }
            } else { 
                return 0;
            }
        } else if (sub_8a69(a_0._f1C[0/*1*/])) {
            if (sub_a0a8(a_0)) {
                if (sub_a25a(2)) {
                    if (sub_a199(a_0._f1B)) {
                        sub_a136(a_0._f1B, a_0);
                        return 1;
                    }
                }
            }
        } else { 
            return 0;
        }
        break;
    case 2:
        if (sub_8a69(a_0._f23[0/*1*/])) {
            if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), a_0._f23[0/*1*/], 0)) {
                if (sub_a25a(3)) {
                    sub_a136(a_0._f1B, a_0);
                    return 1;
                }
            } else if (a_1 == 1) {
                sub_a08d();
            }
        } else { 
            return 0;
        }
        break;
    case 1:
        if (ENTITY::DOES_ENTITY_EXIST(a_0._f23[0/*1*/])) {
            if (!ENTITY::IS_ENTITY_DEAD(a_0._f23[0/*1*/])) {
                if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), ENTITY::GET_ENTITY_COORDS(a_0._f23[0/*1*/], 1), 1) < a_0._fF) {
                    if (sub_a25a(2)) {
                        if (sub_a199(a_0._f1B)) {
                            sub_a136(a_0._f1B, a_0);
                            return 1;
                        }
                    }
                }
            }
        } else { 
            return 0;
        }
        break;
    case 3:
        if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), a_0._f11[0/*3*/], 1) < a_0._fF) {
            if (sub_a25a(2)) {
                if (sub_a199(a_0._f1B)) {
                    sub_a136(a_0._f1B, a_0);
                    return 1;
                }
            }
        } else { 
            return 0;
        }
        break;
    case 4:
        if (ENTITY::IS_ENTITY_AT_COORD(PLAYER::PLAYER_PED_ID(), a_0._f11[0/*3*/], a_0._f11[1/*3*/], 0, 1, 0)) {
            if (sub_a25a(2)) {
                if (sub_a199(a_0._f1B)) {
                    sub_a136(a_0._f1B, a_0);
                    return 1;
                }
            }
        } else { 
            return 0;
        }
        break;
    case 5:
        if (a_0 == 6) {
            if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
                if (sub_8a69(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0))) {
                    if (VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), ${towtruck}) || VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), ${towtruck2})) {
                        if (VEHICLE::IS_VEHICLE_ATTACHED_TO_TOW_TRUCK(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), a_0._f23[0/*1*/])) {
                            if (sub_a25a(3)) {
                                return 1;
                            }
                        }
                    } else if ((VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), ${cargobob}) || VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), ${cargobob2})) || VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), ${cargobob3})) {
                        if (VEHICLE::_1821D91AD4B56108(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0)) && VEHICLE::IS_VEHICLE_ATTACHED_TO_CARGOBOB(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), a_0._f23[0/*1*/])) {
                            if (sub_a25a(3)) {
                                return 1;
                            }
                        }
                    }
                }
            }
        } else if (a_0 == 10) {
            if (AI::GET_PED_DESIRED_MOVE_BLEND_RATIO(PLAYER::PLAYER_PED_ID()) >= 2.0) {
                if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 245.88848876953125, 371.9034118652344, 103.9884262084961, 241.58984375, 359.645751953125, 107.34612274169922, 1.25, 0, 1, 0)) {
                    if (sub_a25a(2)) {
                        if (sub_a199(a_0._f1B)) {
                            sub_a136(a_0._f1B, a_0);
                            sub_dc91("RC5_IN_ACTIVATION_RANGE: RC_TRIG_LOCATE_NONAXIS - Eps 2 special case trigger used");
                            return 1;
                        }
                    }
                }
            }
        } else if (a_0 == 46) {
            if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -164.20455932617188, 277.4866333, 91.55321502685547, 153.6, 277.40606689453125, 97.338134765625, 10.0, 0, 1, 0)) {
                return 0;
            }
        } else if (a_0 == 31) {
            if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 2728.9482421875, 4143.43994140625, 42.292945861816406, 2722.21337890625, 4144.521484375, 45.43182373046875, 10.0, 0, 1, 0)) {
                if (sub_a25a(2)) {
                    if (sub_a199(1)) {
                        sub_a136(1, a_0);
                        sub_dc91("RC_IN_ACTIVATION_RANGE: RC_TRIG_LOCATE_NONAXIS - RC_MAUDE_1 special case vehicle launch area");
                        return 1;
                    }
                }
            }
        } else if (a_0 == 39) {
            if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -992.4994506835938, 358.7454528808594, 96.37350463867188, -1021.9401245117188, 361.8887634277344, 65.36148071289062, 30.0, 0, 1, 0)) {
                if (!ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -983.5426025390625, 369.1103515625, 68.46017456054688, -1028.5662841796875, 395.4613342285156, 94.57244873046875, 15.0, 0, 1, 0)) {
                    if (!ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -983.875, 346.7556457519531, 68.02095794677734, -1021.451416015625, 336.3458251953125, 93.18714141845703, 14.5, 0, 1, 0)) {
                        if (sub_a25a(2)) {
                            if (sub_a199(a_0._f1B)) {
                                sub_a136(a_0._f1B, a_0);
                                sub_dc91("RC_IN_ACTIVATION_RANGE: RC_TRIG_LOCATE_NONAXIS - RC_NIGEL_1B special case vehicle launch area");
                                return 1;
                            }
                        }
                    }
                }
            }
        }
        if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), a_0._f11[0/*3*/], a_0._f11[1/*3*/], a_0._f18, 0, 1, 0)) {
            if (a_0 == 45) {
                if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 2338.696533203125, 2597.037353515625, 45.39051818847656, 2324.00341796875, 2597.18505859375, 47.74960708618164, 8.5, 0, 1, 0)) {
                    return 0;
                }
            }
            if (sub_a25a(2)) {
                if (sub_a199(a_0._f1B)) {
                    sub_a136(a_0._f1B, a_0);
                    return 1;
                }
            }
        } else { 
            return 0;
        }
        break;
    case 6:
        break;
    }
    return 0;
}

void sub_a08d() {
    sub_2863(&g_164D7._f877, &g_164D7, 0, 1, 1, 0);
}

auto sub_a0a8(auto a_0) {
    if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0) && a_0._f1B) {
        if ((a_0 == 27) || (a_0 == 30)) {
            v_3 = 1.0;
        } else { 
            v_3 = 5.0;
        }
        if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), ENTITY::GET_ENTITY_COORDS(a_0._f1C[0/*1*/], 1), 1) < (a_0._fF + v_3)) {
            return 1;
        }
    } else if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), ENTITY::GET_ENTITY_COORDS(a_0._f1C[0/*1*/], 1), 1) < a_0._fF) {
        return 1;
    }
    return 0;
}

void sub_a136(auto a_0, auto a_1) {
    if (a_0 == 1) {
        if (!sub_8b59(a_1)) {
            return ;
        }
        if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
            sub_dc91("RC_STOP_PLAYER_VEHICLE_CHECK: Stopping player's vehicle.");
            if (PED::IS_PED_IN_ANY_HELI(PLAYER::PLAYER_PED_ID()) || PED::IS_PED_IN_ANY_PLANE(PLAYER::PLAYER_PED_ID())) {
                sub_dc91("RC_STOP_PLAYER_VEHICLE_CHECK: Turning off engine for plane or helicopter.");
                VEHICLE::SET_VEHICLE_ENGINE_ON(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), 0, 1);
            }
            sub_9037();
        }
    }
}

auto sub_a199(auto a_0) {
    if (PLAYER::IS_PLAYER_PLAYING(PLAYER::GET_PLAYER_INDEX())) {
        if (PED::IS_PED_ON_FOOT(PLAYER::PLAYER_PED_ID())) {
            return 1;
        } else if (a_0) {
            if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
                v_3 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
                if (sub_a230(v_3)) {
                    if (PED::IS_PED_IN_ANY_HELI(PLAYER::PLAYER_PED_ID()) || PED::IS_PED_IN_ANY_PLANE(PLAYER::PLAYER_PED_ID())) {
                        if (((!ENTITY::HAS_ENTITY_COLLIDED_WITH_ANYTHING(v_3)) && (!ENTITY::IS_ENTITY_IN_AIR(v_3))) && (ENTITY::GET_ENTITY_SPEED(v_3) < 1.0)) {
                            return 1;
                        }
                    } else if (!ENTITY::IS_ENTITY_IN_AIR(v_3)) {
                        return 1;
                    }
                }
            }
        }
    }
    return 0;
}

auto sub_a230(auto a_0) {
    if (sub_8a69(a_0)) {
        if (VEHICLE::IS_VEHICLE_DRIVEABLE(a_0, 0)) {
            if (!FIRE::IS_ENTITY_ON_FIRE(a_0)) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_a25a(auto a_0) {
    if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID())) {
            if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
                v_3 = sub_6ae7();
                if (!sub_2e21(v_3)) {
                    return 0;
                }
                switch (a_0) {
                case 0:
                case 9:
                    if ((((((((((((((((((!PLAYER::IS_PLAYER_READY_FOR_CUTSCENE(PLAYER::PLAYER_ID())) || ENTITY::IS_ENTITY_IN_AIR(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_GETTING_INTO_A_VEHICLE(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_FALLING(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1)) || PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID())) || PED::IS_PED_IN_COMBAT(PLAYER::PLAYER_PED_ID(), 0)) || sub_aa47()) || g_17890) || g_5F7E) || sub_aa3b()) || sub_aa00(8, -1)) || sub_67ea()) || sub_a9ef()) || sub_a9c5()) || sub_a9ab()) || (g_17C49._f1738._f397[v_3/*1*/] == 5)) {
                        return 0;
                    }
                    break;
                case 1:
                    if (((((((((PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1) || sub_aa47()) || g_5F7E) || sub_aa3b()) || sub_aa00(8, -1)) || sub_a9c5()) || sub_67ea()) || sub_a9ef()) || sub_a9ab()) || (g_17C49._f1738._f397[v_3/*1*/] == 5)) {
                        return 0;
                    }
                    break;
                case 2:
                    if (((((((((((((((((((!PLAYER::IS_PLAYER_READY_FOR_CUTSCENE(PLAYER::PLAYER_ID())) || ENTITY::IS_ENTITY_IN_AIR(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_GETTING_INTO_A_VEHICLE(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_FALLING(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1)) || PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID())) || PED::IS_PED_IN_COMBAT(PLAYER::PLAYER_PED_ID(), 0)) || sub_aa47()) || g_17890) || g_5F7E) || sub_aa3b()) || sub_aa00(8, -1)) || sub_a9c5()) || sub_67ea()) || sub_a9ef()) || sub_a9ab()) || (g_17C49._f1738._f397[v_3/*1*/] == 5)) || (g_8A84 != -1)) {
                        return 0;
                    }
                    break;
                case 3:
                    if ((((((((((((PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID()) || PED::IS_PED_FALLING(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1)) || PED::IS_PED_IN_COMBAT(PLAYER::PLAYER_PED_ID(), 0)) || sub_aa47()) || g_17890) || g_5F7E) || sub_aa3b()) || sub_aa00(8, -1)) || sub_67ea()) || sub_a9ef()) || sub_a9ab()) || (g_17C49._f1738._f397[v_3/*1*/] == 5)) {
                        return 0;
                    }
                    break;
                case 4:
                    if (((((sub_aa47() || (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0)) || sub_aa00(8, -1)) || sub_a9ab()) || sub_a985()) || (g_17C49._f1738._f397[v_3/*1*/] == 5)) {
                        return 0;
                    }
                    break;
                case 5:
                    if ((((sub_aa00(8, -1) || sub_67ea()) || sub_a9ef()) || sub_a985()) || sub_a977()) {
                        return 0;
                    }
                    if ((STREAMING::_D9D2CFFF49FAB35F() && (STREAMING::GET_PLAYER_SWITCH_TYPE() != 3)) && (STREAMING::GET_PLAYER_SWITCH_STATE() < 8)) {
                        return 0;
                    }
                    break;
                case 6:
                    if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID())) {
                        if ((((((((((((((PED::IS_PED_IN_COMBAT(PLAYER::PLAYER_PED_ID(), 0) || (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0)) || ENTITY::IS_ENTITY_IN_AIR(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_FALLING(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1)) || PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID())) || sub_aa47()) || g_5F7E) || sub_aa3b()) || sub_aa00(8, -1)) || sub_a9ef()) || sub_a9c5()) || sub_a9ab()) || (g_17C49._f1738._f397[v_3/*1*/] == 5)) {
                            return 0;
                        }
                    }
                    break;
                case 7:
                    if ((((((((((((((((((PED::IS_PED_IN_COMBAT(PLAYER::PLAYER_PED_ID(), 0) || (!PLAYER::IS_PLAYER_CONTROL_ON(PLAYER::PLAYER_ID()))) || (!PLAYER::IS_PLAYER_READY_FOR_CUTSCENE(PLAYER::PLAYER_ID()))) || (!CAM::IS_SCREEN_FADED_IN())) || ENTITY::IS_ENTITY_IN_AIR(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_FALLING(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1)) || sub_aa47()) || sub_a9ef()) || g_17890) || g_5F7E) || sub_aa3b()) || g_8C75) || sub_aa00(8, -1)) || sub_a9c5()) || sub_a985()) || sub_a9ab()) || (g_17C49._f1738._f397[v_3/*1*/] == 5)) {
                        return 0;
                    }
                    break;
                case 8:
                    if (((((((((((((((((((((PED::IS_PED_IN_COMBAT(PLAYER::PLAYER_PED_ID(), 0) || (!PLAYER::IS_PLAYER_CONTROL_ON(PLAYER::PLAYER_ID()))) || (!PLAYER::IS_PLAYER_READY_FOR_CUTSCENE(PLAYER::PLAYER_ID()))) || (!CAM::IS_SCREEN_FADED_IN())) || PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(PLAYER::PLAYER_ID(), 0)) || ENTITY::IS_ENTITY_IN_AIR(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 1)) || PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_FALLING(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_SWIMMING(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1)) || PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID())) || sub_aa47()) || g_17890) || g_5F7E) || sub_aa3b()) || sub_aa00(8, -1)) || sub_a9c5()) || sub_a985()) || sub_67ea()) || sub_a9ef()) || sub_a9ab()) {
                        return 0;
                    }
                    break;
                }
            } else { 
                return 0;
            }
        } else { 
            return 0;
        }
    } else { 
        return 0;
    }
    return 1;
}

auto sub_a977() {
    return g_15F91._f1;
}

auto sub_a985() {
    if (g_154F9 != -1) {
        return GAMEPLAY::IS_BIT_SET(g_13D03[g_154F9/*34*/]._fF, 13);
    }
    return 0;
}

auto sub_a9ab() {
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${player_timetable_scene}) > 0) {
        return 1;
    }
    return 0;
}

auto sub_a9c5() {
    if (g_10B99) {
        return 1;
    } else if (g_D5D8 && (!g_D5DE)) {
        return 1;
    }
    return 0;
}

auto sub_a9ef() {
    return g_15F9E._f123 > 0;
}

auto sub_aa00(auto a_0, auto a_1) {
    switch (a_0) {
    case 5:
        if (a_1 > -1) {
            return g_1441E9._fCB[a_1/*1*/];
        } else { }
        break;
    }
    return GAMEPLAY::IS_BIT_SET(g_1441E9._f3B5, a_0);
}

auto sub_aa3b() {
    return g_14143C;
}

auto sub_aa47() {
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        return g_15725._f2C == 1;
    }
    return 0;
}

void sub_aa63(auto a_0) {
    if ((GAMEPLAY::GET_GAME_TIMER() - l_61) > 1250) {
        if (sub_8a69(a_0._f1C[0/*1*/]) && (!ENTITY::IS_ENTITY_ON_SCREEN(a_0._f1C[0/*1*/]))) {
            if (sub_8a69(PLAYER::PLAYER_PED_ID()) && (!sub_ab4b(PLAYER::PLAYER_PED_ID(), a_0._f1C[0/*1*/], 50.0))) {
                v_3/*{3}*/ = ENTITY::GET_ENTITY_COORDS(a_0._f1C[0/*1*/], 1);
                v_6/*{3}*/ = ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1);
                v_A = v_6 - v_3;
                v_B = v_6._f1 - v_3._f1;
                if (v_B != 0.0) {
                    v_9 = GAMEPLAY::ATAN2(v_A, v_B);
                } else if (v_A < 0.0) {
                    v_9 = -90.0;
                } else { 
                    v_9 = 90.0;
                }
                v_9 *= -1.0;
                v_9 -= 180.0;
                if (v_9 < 0.0) {
                    v_9 += 360.0;
                }
                ENTITY::SET_ENTITY_HEADING(a_0._f1C[0/*1*/], v_9);
            }
        }
        l_61 = GAMEPLAY::GET_GAME_TIMER();
    }
}

auto sub_ab4b(auto a_0, auto a_1, auto a_2) {
    return SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(a_0, 1), ENTITY::GET_ENTITY_COORDS(a_1, 1)) <= (a_2 * a_2);
}

void sub_ab6b() {
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(l_5F, "SET_COLOUR");
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(255);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(10);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(10);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(255);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(10);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(10);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(255);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(10);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(10);
    GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(l_5F, "SET_DISTANCE");
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_FLOAT(10.0);
    GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
    UI::SET_TEXT_RENDER_ID(l_60);
    v_2 = 0.1;
    v_3 = 0.24;
    v_4 = 0.21;
    v_5 = 0.51;
    if (GAMEPLAY::IS_ORBIS_VERSION()) {
        v_2 = 0.05;
        v_3 = 0.12;
        v_4 = 0.105;
        v_5 = 0.255;
    }
    GRAPHICS::DRAW_SCALEFORM_MOVIE(l_5F, v_2, v_3, v_4, v_5, 100, 100, 100, 255, 0);
    if ((GAMEPLAY::GET_GAME_TIMER() - l_61) > 1250) {
        AUDIO::PLAY_SOUND_FROM_COORD(l_62, "IDLE_BEEP", 2468.51, 3437.389892578125, 49.9, "EPSILONISM_04_SOUNDSET", 0, 0, 0);
        l_61 = GAMEPLAY::GET_GAME_TIMER();
    }
}

auto sub_ac5d(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8) {
    if (!(a_8 == 3)) {
        if (sub_a25a(2)) {
            if (!sub_9015()) {
                if ((sub_8a69(PLAYER::PLAYER_PED_ID()) && sub_8a69(a_0._f1C[0/*1*/])) && (sub_aefc(PLAYER::PLAYER_PED_ID(), a_1, 1) < 20.0)) {
                    sub_dc91("start conversation");
                    asm .vardef<F> 11, "[{\"type\":\"field\",\"value\":[{\"offset\":0,\"value\":16}]}]"
                    if (a_8 == 0) {
                        sub_ae61(&v_B, a_6, a_0._f1C[0/*1*/], a_7, 0, 1);
                        sub_add0(&v_B, a_4, a_5, 7, 0, 0);
                        a_8 = 2;
                    } else if (a_8 == 2) {
                        sub_dc91("conversation ended");
                        a_8 = 3;
                        return 1;
                    }
                }
            } else if (sub_ad8c(a_5)) {
                if (!(a_8 == 1)) {
                    if (sub_8a69(PLAYER::PLAYER_PED_ID())) {
                        if (sub_aefc(PLAYER::PLAYER_PED_ID(), a_1, 1) >= 20.0) {
                            sub_dc91("pause conversation");
                            sub_ad7f(1);
                            a_8 = 1;
                        }
                    }
                }
            }
            if ((sub_aefc(PLAYER::PLAYER_PED_ID(), a_1, 1) < 20.0) && (a_8 == 1)) {
                sub_dc91("unpause conversation");
                sub_ad7f(0);
                a_8 = 2;
            }
        }
    }
    return 0;
}

void sub_ad7f(auto a_0) {
    g_413F = a_0;
}

auto sub_ad8c(auto a_0) {
    v_3/*{6}*/ = sub_adac();
    if (GAMEPLAY::ARE_STRINGS_EQUAL(&v_3, a_0)) {
        return 1;
    }
    return 0;
}

auto<6> sub_adac() {
    v_2/*"24"*/ = "NULL";
    if (g_3D4C == 4) {
        return g_3BCF;
    } else { 
        return v_2;
    }
}

void sub_add0(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    sub_ae0b(a_0, 145, a_1, a_4, a_5, 0);
    if (a_3 > 7) {
        if (a_3 < 12) {
            a_3 = 7;
        }
    }
    GAMEPLAY::SET_BIT(&g_38DE, 0);
    g_3D4F = a_3;
    g_3D42/*"24"*/ = a_2;
}

void sub_ae0b(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    g_3B2A/*{165}*/ = a_0;
    g_62B = a_1;
    g_3D92/*"24"*/ = a_2;
    g_4129 = a_5;
    if (a_3 == 0) {
        g_4127 = 1;
        g_4125 = 0;
    } else { 
        g_4127 = 0;
        g_4125 = 1;
    }
    if (a_4 == 0) {
        g_4128 = 1;
        g_4126 = 0;
    } else { 
        g_4128 = 0;
        g_4126 = 1;
    }
}

void sub_ae61(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (a_0[a_1/*10*/]._f7 == 1) {}
    a_0[a_1/*10*/] = a_2;
    a_0[a_1/*10*/]._f1/*"24"*/ = a_3;
    a_0[a_1/*10*/]._f7 = 1;
    a_0[a_1/*10*/]._f8 = a_4;
    a_0[a_1/*10*/]._f9 = a_5;
    if (!g_10A95) {
        if (!PED::IS_PED_INJURED(a_2)) {
            if (a_0[a_1/*10*/]._f8 == 0) {
                PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(a_2, 0);
            } else { 
                PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(a_2, 1);
            }
        }
        if (!PED::IS_PED_INJURED(a_2)) {
            if (a_0[a_1/*10*/]._f9 == 0) {
                PED::SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(a_2, 0);
            } else { 
                PED::SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(a_2, 1);
            }
        }
    }
}

auto sub_aefc(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (!ENTITY::IS_ENTITY_DEAD(a_0)) {
        v_7/*{3}*/ = ENTITY::GET_ENTITY_COORDS(a_0, 1);
    } else { 
        v_7/*{3}*/ = ENTITY::GET_ENTITY_COORDS(a_0, 0);
    }
    return GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(v_7, a_1, a_4);
}

void sub_af35(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_1)) {
            if (g_8861 == 17) {
                if (a_0 != -1) {
                    sub_b145(a_0);
                }
            } else if (sub_b139()) {
                if (a_0 != -1) {
                    sub_b145(a_0);
                }
            } else if (a_0 == -1) {
                if (sub_aefc(PLAYER::PLAYER_PED_ID(), a_2, 1) <= 100.0) {
                    sub_b09b(a_0, 1);
                }
            } else { 
                switch (sub_b062(a_0)) {
                case 1:
                    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_1, "JOSH_1_INT_CONCAT")) {
                        CUTSCENE::_C23DE0E91C30B58C(a_1, 14, 8);
                    } else { 
                        CUTSCENE::REQUEST_CUTSCENE(a_1, 8);
                    }
                    STREAMING::_F8155A7F03DDFC8E(2);
                    sub_b026(a_0, 1);
                    break;
                case 2:
                    CUTSCENE::STOP_CUTSCENE(0);
                    CUTSCENE::REMOVE_CUTSCENE();
                    STREAMING::_F8155A7F03DDFC8E(0);
                    sub_b026(a_0, 0);
                    break;
                }
                if (sub_aefc(PLAYER::PLAYER_PED_ID(), a_2, 1) > 120.0) {
                    sub_b145(a_0);
                }
            }
        }
    }
}

void sub_b026(auto a_0, auto a_1) {
    if (a_0 == -1) {
        return ;
    }
    if (a_1) {
        if (g_10A91 == a_0) {
            g_10A92 = a_0;
        } else { }
    } else if (g_10A92 == a_0) {
        g_10A92 = -1;
    } else { }
}

auto sub_b062(auto a_0) {
    if (g_10A91 == a_0) {
        if (g_10A92 == -1) {
            if (g_10A90 < GAMEPLAY::GET_FRAME_COUNT()) {
                return 1;
            }
        }
    } else if (g_10A92 == a_0) {
        return 2;
    }
    return 0;
}

void sub_b09b(auto a_0, auto a_1) {
    if (g_10A8E < 5) {
        g_10A83[g_10A8E/*2*/] = 0;
        g_10A83[g_10A8E/*2*/]._f1 = a_1;
        v_4 = 0;
        while (!v_4) {
            v_4 = 1;
            for (v_5 = 0; v_5 < g_10A8E; v_5 += 1) {
                if (g_10A83[v_5/*2*/] == g_10A83[g_10A8E/*2*/]) {
                    g_10A83[g_10A8E/*2*/] += 1;
                    v_4 = 0;
                }
            }
        }
        a_0 = g_10A83[g_10A8E/*2*/];
        g_10A8E += 1;
        g_10A8F = 1;
    } else { 
        a_0 = -1;
    }
}

auto sub_b139() {
    return g_1567C;
}

void sub_b145(auto a_0) {
    CUTSCENE::STOP_CUTSCENE(0);
    CUTSCENE::REMOVE_CUTSCENE();
    sub_b15c(a_0);
}

void sub_b15c(auto a_0) {
    if (a_0 == -1) {
        return ;
    }
    if (g_10A92 == a_0) {
        sub_b026(a_0, 0);
    }
    if (g_10A91 == a_0) {
        g_10A91 = -1;
    }
    v_3 = 0;
    v_4 = 0;
    while ((!v_3) && (v_4 < g_10A8E)) {
        if (g_10A83[v_4/*2*/] == a_0) {
            v_3 = 1;
        } else { 
            v_4 += 1;
        }
    }
    if (!v_3) {
        return ;
    }
    for (v_5 = v_4; v_5 <= (g_10A8E - 2); v_5 += 1) {
        g_10A83[v_5/*2*/] = g_10A83[v_5 + 1/*2*/];
        g_10A83[v_5/*2*/]._f1 = g_10A83[v_5 + 1/*2*/]._f1;
    }
    g_10A83[g_10A8E - 1/*2*/] = -1;
    g_10A83[g_10A8E - 1/*2*/]._f1 = 3;
    g_10A8E -= 1;
    g_10A8F = 1;
    g_10A90 = GAMEPLAY::GET_FRAME_COUNT();
    a_0 = -1;
}

void sub_b244(auto a_0) {
    if (a_0 == -1) {
        a_0 = sub_982d();
    }
    if (a_0 == -1) {
        return ;
    }
    g_178B8[a_0/*10*/]._f1 = 1;
}

auto sub_b26c(auto a_0, auto a_1) {
    if (g_10A95) {
        sub_dc91("IS_RC_FINE_AND_IN_RANGE(): The game is running Multiplayer [TERMINATING]");
        return 0;
    }
    sub_7013(a_0, &v_4);
    if ((sub_cc01(a_0) || sub_cb8f(a_0)) || (g_10B8A == 1)) {
        return 1;
    }
    if (!BRAIN::IS_WORLD_POINT_WITHIN_BRAIN_ACTIVATION_RANGE()) {
        sub_dc91("IS_RC_FINE_AND_IN_RANGE(): Player out of range [TERMINATING]");
        return 0;
    }
    if (sub_ca75(a_0)) {
        if (a_0 == 19) {
            sub_c9d8(a_0._f1C[0/*1*/]);
        }
        sub_dc91("IS_RC_FINE_AND_IN_RANGE(): Script denied by RC Controller [TERMINATING]");
        return 0;
    }
    if (a_0._f19 == 1) {
        if (!sub_be2d(a_0, 1, 0)) {
            return 0;
        }
    } else if (a_0._f10 == 0) {
        if (!sub_be2d(a_0, 0, 0)) {
            return 0;
        }
    }
    if ((((((a_0 == 16) || (a_0 == 9)) || (a_0 == 18)) || (a_0 == 22)) || (a_0 == 32)) || (a_0 == 51)) {
        if (!sub_bc40(a_0, 1, 1)) {
            if (a_0 == 16) {
                sub_bbc0(a_0);
            } else { 
                sub_b891(a_0);
            }
            return 0;
        }
    } else if (a_0 == 24) {
        if (!sub_bc40(a_0, 0, 1)) {
            sub_b891(a_0);
            return 0;
        }
    } else if (a_0 == 6) {
        if (!sub_bc40(a_0, 0, 1)) {
            return 0;
        }
    } else if (a_0._f1A == 1) {
        if (!sub_bc40(a_0, 1, 0)) {
            sub_b891(a_0);
            return 0;
        }
    } else if ((a_0._f10 == 2) || (a_0._f10 == 1)) {
        if (!sub_bc40(a_0, 0, 0)) {
            sub_b891(a_0);
            return 0;
        }
    }
    if ((a_0._f10 == 2) || (a_0._f10 == 1)) {
        if (sub_8a69(a_0._f23[0/*1*/])) {
            if (!ENTITY::IS_ENTITY_AT_COORD(a_0._f23[0/*1*/], v_4._f6, 8.0, 8.0, 8.0, 0, 1, 0)) {
                return 0;
            }
        }
    }
    if (a_0 == 10) {
        if (FIRE::IS_EXPLOSION_IN_SPHERE(-1, a_0._f11[0/*3*/], 8.0)) {
            sub_dc91("IS_RC_FINE_AND_IN_RANGE(): Explosion near mission trigger [TERMINATING]");
            return 0;
        }
    }
    if (v_4._f4 != 17) {
        if (!GAMEPLAY::IS_BIT_SET(v_4._f1A, sub_6ae7())) {
            sub_dc91("IS_RC_FINE_AND_IN_RANGE(): No longer a valid player character to launch mission");
            return 0;
        }
    }
    if (sub_b86c(&a_0._f30) && a_1) {
        sub_b4df(a_0._f1C[0/*1*/], &a_0._f30, a_0);
    }
    return 1;
}

void sub_b4df(auto a_0, auto a_1, auto a_2) {
    if (sub_8a69(a_0)) {
        switch (a_1._f3) {
        case 1:
            if (sub_b86c(a_1)) {
                if (STREAMING::HAS_ANIM_DICT_LOADED(a_1)) {
                    AI::CLEAR_PED_TASKS_IMMEDIATELY(a_0);
                    if (a_2 != 21) {
                        if (sub_5c63(a_1._f5, 0.0, 0.0, 0.0)) {
                            AI::TASK_PLAY_ANIM(a_0, a_1, a_1._f1, 8.0, -8.0, -1, 262153, 0, 0, 0, 0);
                        } else { 
                            AI::OPEN_SEQUENCE_TASK(&v_5);
                            if (sub_b854(a_1)) {
                                AI::_83CDB10EA29B370B(0, a_1, a_1._f2, a_1._f5, a_1._f8, 1000.0, -8.0, -1, 262152, 0, 2, 0);
                            } else { 
                                AI::_83CDB10EA29B370B(0, a_1, a_1._f1, a_1._f5, a_1._f8, 1000.0, -8.0, -1, 262152, 0, 2, 0);
                            }
                            AI::_83CDB10EA29B370B(0, a_1, a_1._f1, a_1._f5, a_1._f8, 8.0, -8.0, -1, 262153, 0, 2, 0);
                            AI::CLOSE_SEQUENCE_TASK(v_5);
                            AI::TASK_PERFORM_SEQUENCE(a_0, v_5);
                            AI::CLEAR_SEQUENCE_TASK(&v_5);
                        }
                    } else { 
                        AI::_83CDB10EA29B370B(a_0, a_1, a_1._f1, a_1._f5, a_1._f8, 8.0, -8.0, -1, 262153, 0, 2, 3);
                    }
                    a_1._f3 = 2;
                } else { 
                    a_1._f3 = 0;
                }
            } else { 
                a_1._f3 = 0;
            }
            break;
        case 2:
            if ((!sub_b854(a_1)) || (!ENTITY::IS_ENTITY_PLAYING_ANIM(a_0, a_1, a_1._f2, 3))) {
                if (sub_b834(a_2) && (!PED::IS_PED_FACING_PED(a_0, PLAYER::PLAYER_PED_ID(), 25.0))) {
                    AI::TASK_TURN_PED_TO_FACE_ENTITY(a_0, PLAYER::PLAYER_PED_ID(), 0);
                    a_1._f3 = 5;
                } else if ((sub_b854(a_1) && (a_1._f4 == 0)) && (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), ENTITY::GET_ENTITY_COORDS(a_0, 1), 1) < 20.0)) {
                    a_1._f3 = 3;
                }
            }
            break;
        case 3:
            AI::OPEN_SEQUENCE_TASK(&v_6);
            if (sub_5c63(a_1._f5, 0.0, 0.0, 0.0)) {
                AI::TASK_PLAY_ANIM(0, a_1, a_1._f2, 4.0, -4.0, -1, 262144, 0, 0, 0, 0);
                AI::TASK_PLAY_ANIM(0, a_1, a_1._f1, 8.0, -8.0, -1, 262153, 0, 0, 0, 0);
            } else { 
                AI::_83CDB10EA29B370B(0, a_1, a_1._f2, a_1._f5, a_1._f8, 4.0, -4.0, -1, 262152, 0, 2, 0);
                AI::_83CDB10EA29B370B(0, a_1, a_1._f1, a_1._f5, a_1._f8, 8.0, -8.0, -1, 262153, 0, 2, 0);
            }
            AI::CLOSE_SEQUENCE_TASK(v_6);
            AI::TASK_PERFORM_SEQUENCE(a_0, v_6);
            AI::CLEAR_SEQUENCE_TASK(&v_6);
            a_1._f4 = 1;
            if (sub_b834(a_2)) {
                a_1._f3 = 2;
            } else { 
                a_1._f3 = 0;
            }
            break;
        case 5:
            if ((!sub_b834(a_2)) || PED::IS_PED_FACING_PED(a_0, PLAYER::PLAYER_PED_ID(), 10.0)) {
                if (sub_5c63(a_1._f5, 0.0, 0.0, 0.0)) {
                    AI::TASK_PLAY_ANIM(a_0, a_1, a_1._f1, 8.0, -8.0, -1, 262153, 0, 0, 0, 0);
                } else { 
                    AI::_83CDB10EA29B370B(a_0, a_1, a_1._f1, a_1._f5, a_1._f8, 8.0, -8.0, -1, 262153, 0, 2, 0);
                }
                a_1._f3 = 2;
            }
            break;
        }
    }
}

auto sub_b834(auto a_0) {
    if ((a_0 == 17) || (a_0 == 20)) {
        return 1;
    }
    return 0;
}

auto sub_b854(auto a_0) {
    if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_0._f2)) {
        return 0;
    }
    return 1;
}

auto sub_b86c(auto a_0) {
    if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_0) || GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_0._f1)) {
        return 0;
    }
    return 1;
}

void sub_b891(auto a_0) {
    if (a_0 == 52) {
        sub_bb95(&a_0._f29[1/*1*/]);
        sub_bb95(&a_0._f29[2/*1*/]);
    }
    if (sub_8a69(PLAYER::PLAYER_PED_ID())) {
        for (v_3 = 0; v_3 <= (a_0._f1C - 1); v_3 += 1) {
            if (sub_8a49(a_0._f1C[v_3/*1*/])) {
                if (!PED::IS_PED_IN_ANY_VEHICLE(a_0._f1C[v_3/*1*/], 0)) {
                    ENTITY::SET_ENTITY_COLLISION(a_0._f1C[v_3/*1*/], 1, 0);
                    ENTITY::FREEZE_ENTITY_POSITION(a_0._f1C[0/*1*/], 0);
                }
                PED::SET_PED_KEEP_TASK(a_0._f1C[v_3/*1*/], 1);
                if (a_0 == 34) {
                    if (sub_8a69(a_0._f29[0/*1*/])) {
                        ENTITY::SET_ENTITY_COLLISION(a_0._f29[0/*1*/], 1, 0);
                        ENTITY::FREEZE_ENTITY_POSITION(a_0._f29[0/*1*/], 0);
                    }
                }
                switch (a_0) {
                case 19:
                    sub_c9d8(a_0._f1C[v_3/*1*/]);
                    break;
                case 8:
                    STREAMING::REQUEST_ANIM_DICT("rcmcollect_paperleadinout@");
                    while (!STREAMING::HAS_ANIM_DICT_LOADED("rcmcollect_paperleadinout@")) {
                        SYSTEM::WAIT(0);
                    }
                    AI::OPEN_SEQUENCE_TASK(&v_4);
                    AI::TASK_PLAY_ANIM(0, "rcmcollect_paperleadinout@", "meditate_getup", 8.0, -8.0, -1, 8, 0, 0, 0, 0);
                    AI::TASK_SMART_FLEE_PED(0, PLAYER::PLAYER_PED_ID(), 10000.0, -1, 0, 0);
                    AI::CLOSE_SEQUENCE_TASK(v_4);
                    AI::TASK_PERFORM_SEQUENCE(a_0._f1C[v_3/*1*/], v_4);
                    AI::CLEAR_SEQUENCE_TASK(&v_4);
                    break;
                case 0:
                case 1:
                    STREAMING::REQUEST_ANIM_DICT("rcmabigail");
                    while (!STREAMING::HAS_ANIM_DICT_LOADED("rcmabigail")) {
                        SYSTEM::WAIT(0);
                    }
                    AI::OPEN_SEQUENCE_TASK(&v_4);
                    AI::TASK_PLAY_ANIM(0, "rcmabigail", "breakout_base", 8.0, -8.0, -1, 8, 0, 0, 0, 0);
                    AI::TASK_SMART_FLEE_PED(0, PLAYER::PLAYER_PED_ID(), 10000.0, -1, 0, 0);
                    AI::CLOSE_SEQUENCE_TASK(v_4);
                    AI::TASK_PERFORM_SEQUENCE(a_0._f1C[v_3/*1*/], v_4);
                    AI::CLEAR_SEQUENCE_TASK(&v_4);
                    break;
                case 32:
                    STREAMING::REQUEST_ANIM_DICT("rcmminute1");
                    while (!STREAMING::HAS_ANIM_DICT_LOADED("rcmminute1")) {
                        SYSTEM::WAIT(0);
                    }
                    AI::OPEN_SEQUENCE_TASK(&v_4);
                    if (v_3 == 0) {
                        AI::TASK_PLAY_ANIM(0, "rcmminute1", "base_to_idle_joe", 8.0, -8.0, -1, 32776, 0, 0, 0, 0);
                    } else { 
                        AI::TASK_PLAY_ANIM(0, "rcmminute1", "base_to_idle_josef", 8.0, -8.0, -1, 32776, 0, 0, 0, 0);
                    }
                    AI::TASK_SMART_FLEE_PED(0, PLAYER::PLAYER_PED_ID(), 10000.0, -1, 0, 0);
                    AI::CLOSE_SEQUENCE_TASK(v_4);
                    AI::TASK_PERFORM_SEQUENCE(a_0._f1C[v_3/*1*/], v_4);
                    AI::CLEAR_SEQUENCE_TASK(&v_4);
                    break;
                case 24:
                    STREAMING::REQUEST_ANIM_DICT("special_ped@hao@base");
                    while (!STREAMING::HAS_ANIM_DICT_LOADED("special_ped@hao@base")) {
                        SYSTEM::WAIT(0);
                    }
                    AI::OPEN_SEQUENCE_TASK(&v_4);
                    AI::TASK_PLAY_ANIM(0, "special_ped@hao@base", "hao_exit", 8.0, -8.0, -1, 520, 0, 0, 0, 0);
                    AI::TASK_SMART_FLEE_PED(0, PLAYER::PLAYER_PED_ID(), 10000.0, -1, 0, 0);
                    AI::CLOSE_SEQUENCE_TASK(v_4);
                    AI::TASK_PERFORM_SEQUENCE(a_0._f1C[v_3/*1*/], v_4);
                    AI::CLEAR_SEQUENCE_TASK(&v_4);
                    break;
                default:
                    AI::CLEAR_PED_SECONDARY_TASK(a_0._f1C[v_3/*1*/]);
                    AI::TASK_SMART_FLEE_PED(a_0._f1C[v_3/*1*/], PLAYER::PLAYER_PED_ID(), 10000.0, -1, 0, 0);
                    break;
                }
            }
        }
    }
}

void sub_bb95(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (ENTITY::IS_ENTITY_ATTACHED_TO_ANY_PED(a_0)) {
            ENTITY::DETACH_ENTITY(a_0, 1, 1);
        }
        OBJECT::DELETE_OBJECT(a_0);
    }
}

void sub_bbc0(auto a_0) {
    if (sub_8a69(PLAYER::PLAYER_PED_ID())) {
        for (v_3 = 0; v_3 <= (a_0._f1C - 1); v_3 += 1) {
            if (sub_8a49(a_0._f1C[v_3/*1*/])) {
                PED::SET_PED_COMBAT_ATTRIBUTES(a_0._f1C[v_3/*1*/], 1, 0);
                PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(a_0._f1C[v_3/*1*/], 0);
                PED::SET_PED_KEEP_TASK(a_0._f1C[v_3/*1*/], 1);
                AI::TASK_COMBAT_PED(a_0._f1C[v_3/*1*/], PLAYER::PLAYER_PED_ID(), 0, 16);
                ENTITY::SET_PED_AS_NO_LONGER_NEEDED(&a_0._f1C[v_3/*1*/]);
            }
        }
    }
}

auto sub_bc40(auto a_0, auto a_1, auto a_2) {
    if (a_1) {
        v_6 = a_0._f23 - 1;
    } else { 
        v_6 = 0;
    }
    if (sub_8a49(PLAYER::PLAYER_PED_ID())) {
        for (v_5 = 0; v_5 <= v_6; v_5 += 1) {
            if (ENTITY::DOES_ENTITY_EXIST(a_0._f23[v_5/*1*/])) {
                if (ENTITY::IS_ENTITY_DEAD(a_0._f23[v_5/*1*/])) {
                    sub_dc91("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Random character vehicle is dead [TERMINATING]");
                    return 0;
                }
                if (!VEHICLE::IS_VEHICLE_DRIVEABLE(a_0._f23[v_5/*1*/], 0)) {
                    sub_dc91("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Random character vehicle is not driveable [TERMINATING]");
                    return 0;
                }
                if (ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(a_0._f23[v_5/*1*/], PLAYER::PLAYER_PED_ID(), 0)) {
                    sub_dc91("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Random character vehicle has been damaged by player [TERMINATING]");
                    return 0;
                }
                if (ENTITY::GET_ENTITY_HEALTH(a_0._f23[v_5/*1*/]) < 850) {
                    sub_dc91("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Random character vehicle health is less than 850 [TERMINATING]");
                    return 0;
                }
                if (a_2) {
                    if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
                        if (ENTITY::IS_ENTITY_TOUCHING_ENTITY(a_0._f23[v_5/*1*/], PLAYER::PLAYER_PED_ID()) && (ENTITY::GET_ENTITY_SPEED(PLAYER::PLAYER_PED_ID()) > 5.0)) {
                            sub_dc91("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Random character vehicle has collided with the player vehicle at speed [TERMINATING]");
                            return 0;
                        }
                        v_7 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
                        if (sub_a230(v_7)) {
                            if ((ENTITY::GET_ENTITY_MODEL(v_7) == ${towtruck}) || (ENTITY::GET_ENTITY_MODEL(v_7) == ${towtruck2})) {
                                if (sub_a230(a_0._f23[v_5/*1*/])) {
                                    if (VEHICLE::IS_VEHICLE_ATTACHED_TO_TOW_TRUCK(v_7, a_0._f23[v_5/*1*/])) {
                                        sub_dc91("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Random character vehicle is being towed by player [TERMINATING]");
                                        return 0;
                                    }
                                }
                            }
                        }
                    } else { 
                        v_8 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
                        if (sub_a230(v_8)) {
                            if (ENTITY::IS_ENTITY_TOUCHING_ENTITY(a_0._f23[v_5/*1*/], v_8) && (ENTITY::GET_ENTITY_SPEED(v_8) > 6.0)) {
                                sub_dc91("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Random character vehicle has collided with the player's last known vehicle at speed (player bailed out?) [TERMINATING]");
                                return 0;
                            }
                        }
                        if (a_0 == 16) {
                            if (sub_bdfd(PLAYER::PLAYER_PED_ID(), a_0._f23[v_5/*1*/])) {
                                sub_dc91("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Player attempting to jack Epsilon vehicle [TERMINATING]");
                                return 0;
                            }
                        }
                    }
                }
            }
        }
    }
    return 1;
}

auto sub_bdfd(auto a_0, auto a_1) {
    if (!PED::IS_PED_INJURED(a_0)) {
        if (VEHICLE::IS_VEHICLE_DRIVEABLE(a_1, 0)) {
            v_4 = PED::GET_VEHICLE_PED_IS_USING(a_0);
            if (v_4 == a_1) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_be2d(auto a_0, auto a_1, auto a_2) {
    if (a_1) {
        v_6 = a_0._f1C - 1;
    } else { 
        v_6 = 0;
    }
    if (a_0 == 16) {
        a_2 = 1;
    }
    if (a_0 == 30) {
        a_2 = 1;
    }
    if (sub_8a49(PLAYER::PLAYER_PED_ID())) {
        for (v_5 = 0; v_5 <= v_6; v_5 += 1) {
            if (ENTITY::DOES_ENTITY_EXIST(a_0._f1C[v_5/*1*/])) {
                if (!PED::IS_PED_INJURED(a_0._f1C[v_5/*1*/])) {
                    if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID())) {
                        if (ENTITY::IS_ENTITY_TOUCHING_ENTITY(PLAYER::PLAYER_PED_ID(), a_0._f1C[v_5/*1*/])) {
                            if (a_2 == 0) {
                                sub_b891(a_0);
                            } else { 
                                sub_bbc0(a_0);
                            }
                            if (sub_9015()) {
                                sub_8fae();
                            }
                            sub_dc91("STEP_5_COMMON_RCfineAndInRange - Random character is being pushed by car [TERMINATING]");
                            return 0;
                        }
                    }
                    if ((ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ANY_PED(a_0._f1C[v_5/*1*/]) || ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ANY_VEHICLE(a_0._f1C[v_5/*1*/])) || ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ANY_OBJECT(a_0._f1C[v_5/*1*/])) {
                        if (a_2 == 0) {
                            sub_b891(a_0);
                        } else { 
                            sub_bbc0(a_0);
                        }
                        sub_dc91("STEP_5_COMMON_RCfineAndInRange - Random character has been damaged by something [TERMINATING]");
                        return 0;
                    }
                    if (PED::IS_PED_RAGDOLL(a_0._f1C[v_5/*1*/])) {
                        if (ENTITY::IS_ENTITY_AT_ENTITY(a_0._f1C[v_5/*1*/], PLAYER::PLAYER_PED_ID(), 3.0, 3.0, 3.0, 0, 1, 0)) {
                            if (a_2 == 0) {
                                sub_b891(a_0);
                            } else { 
                                sub_bbc0(a_0);
                            }
                            sub_dc91("STEP_5_COMMON_RCfineAndInRange - Random character is in ragdoll [TERMINATING]");
                            return 0;
                        }
                    }
                    if (sub_c98e(a_0)) {
                        if (!sub_93db(a_0)) {
                            if (sub_c61c(a_0._f1C[v_5/*1*/], 1, 0, 0, 0)) {
                                if (a_2 == 0) {
                                    sub_b891(a_0);
                                } else { 
                                    sub_bbc0(a_0);
                                }
                                sub_dc91("STEP_5_COMMON_RCfineAndInRange - Player is shooting near the Random Character [TERMINATING]");
                                return 0;
                            }
                        }
                        if (FIRE::IS_EXPLOSION_IN_SPHERE(-1, ENTITY::GET_ENTITY_COORDS(a_0._f1C[v_5/*1*/], 1), 15.0)) {
                            if (a_2 == 0) {
                                sub_b891(a_0);
                            } else { 
                                sub_bbc0(a_0);
                            }
                            sub_dc91("STEP_5_COMMON_RCfineAndInRange - There was an explosion near the Random Character [TERMINATING]");
                            return 0;
                        }
                        if (sub_c11f(a_0._f1C[v_5/*1*/], 0x432a0000)) {
                            if (a_2 == 0) {
                                sub_b891(a_0);
                            } else { 
                                sub_bbc0(a_0);
                            }
                            sub_dc91("STEP_5_COMMON_RCfineAndInRange - Random character is in combat [TERMINATING]");
                            return 0;
                        }
                    }
                    if (!sub_c0eb(a_0)) {
                        if (FIRE::IS_EXPLOSION_IN_SPHERE(-1, ENTITY::GET_ENTITY_COORDS(a_0._f1C[v_5/*1*/], 1), 5.0)) {
                            if (a_2 == 0) {
                                sub_b891(a_0);
                            } else { 
                                sub_bbc0(a_0);
                            }
                            sub_dc91("STEP_5_COMMON_RCfineAndInRange - There was an explosion near the Random Character [TERMINATING]");
                            return 0;
                        }
                        if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) {
                            if (a_2 == 0) {
                                sub_b891(a_0);
                            } else { 
                                sub_bbc0(a_0);
                            }
                            sub_dc91("STEP_5_COMMON_RCfineAndInRange - Player has a wanted level [TERMINATING]");
                            return 0;
                        }
                    }
                } else { 
                    sub_dc91("STEP_5_COMMON_RCfineAndInRange - Random character injured / dead [TERMINATING]");
                    if (a_0 == 34) {
                        if (sub_8a69(a_0._f29[0/*1*/])) {
                            ENTITY::SET_ENTITY_COLLISION(a_0._f29[0/*1*/], 1, 0);
                            ENTITY::FREEZE_ENTITY_POSITION(a_0._f29[0/*1*/], 0);
                        }
                    }
                    return 0;
                }
            }
        }
    }
    return 1;
}

auto sub_c0eb(auto a_0) {
    if ((((a_0 == 2) || (a_0 == 3)) || (a_0 == 52)) || (a_0 == 53)) {
        return 1;
    }
    return 0;
}

auto sub_c11f(auto a_0, auto a_1) {
    if (sub_8a69(PLAYER::PLAYER_PED_ID()) && sub_8a69(a_0)) {
        if (sub_c5f4(a_0) || PLAYER::IS_PLAYER_TARGETTING_ENTITY(PLAYER::PLAYER_ID(), a_0)) {
            if (WEAPON::IS_PED_ARMED(PLAYER::PLAYER_PED_ID(), 6)) {
                v_4 = 40.0;
            } else { 
                v_4 = 3.0;
            }
            if (ENTITY::IS_ENTITY_AT_ENTITY(PLAYER::PLAYER_PED_ID(), a_0, v_4, v_4, v_4, 0, 1, 0)) {
                if (sub_c195(a_0, a_1)) {
                    return 1;
                }
            }
        }
    }
    return 0;
}

auto sub_c195(auto a_0, auto a_1) {
    return sub_c1ad(a_0, PLAYER::PLAYER_PED_ID(), a_1, 1, 250, 7);
}

auto sub_c1ad(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    v_C = sub_c5b5(a_0, a_1);
    if ((!sub_8a69(a_0)) || (!sub_8a69(a_1))) {
        if (v_C != -1) {
            sub_c59a(&l_24[v_C/*4*/]);
        }
        return 0;
    }
    if (!sub_c4a9(a_0, a_1, a_2, a_3)) {
        return 0;
    }
    if (v_C == -1) {
        v_C = sub_c45f();
        if (v_C == -1) {
            return 0;
        }
        l_24[v_C/*4*/]._f1 = a_0;
        l_24[v_C/*4*/]._f2 = a_1;
    }
    v_9/*{3}*/ = PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 0.0, 0.0);
    v_8 = sub_c26e(&l_24[v_C/*4*/], v_9, a_1, &l_24[v_C/*4*/]._f3, a_0, a_5);
    return v_8 || ((GAMEPLAY::GET_GAME_TIMER() - l_24[v_C/*4*/]._f3) < a_4);
}

auto sub_c26e(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    v_11 = 0;
    if (!sub_8a69(a_4)) {
        a_0 = 0;
        return 0;
    }
    if (a_0 == 0) {
        v_B/*{3}*/ = sub_c39a(a_4, a_7);
        a_0 = WORLDPROBE::_7EE9F5D83DD4F90E(a_1, v_B + ((v_B - a_1) * ((vector)(0.1))), 511, a_6, 7);
        return 0;
    }
    v_12 = WORLDPROBE::_GET_RAYCAST_RESULT(a_0, &v_A, &v_B, &v_E, &v_11);
    if (v_12 == 0) {
        a_0 = 0;
        return 0;
    } else if (v_12 == 1) {
        return 0;
    }
    a_0 = 0;
    if (ENTITY::IS_ENTITY_A_PED(v_11)) {
        sub_8a69(v_11);
        if (ENTITY::_04A2A40C73395041(v_11) == a_4) {
            if (l_4D) {
                GRAPHICS::DRAW_DEBUG_LINE_WITH_TWO_COLOURS(a_1, ENTITY::GET_ENTITY_COORDS(a_4, 1), 255, 0, 0, 255, 0, 0, 255, 255);
            }
            a_5 = GAMEPLAY::GET_GAME_TIMER();
            return 1;
        }
        return 0;
    }
    if (ENTITY::IS_ENTITY_A_VEHICLE(v_11)) {
        sub_8a69(v_11);
        if (PED::IS_PED_IN_ANY_VEHICLE(a_4, 0)) {
            if (ENTITY::_4B53F92932ADFAC0(v_11) == PED::GET_VEHICLE_PED_IS_IN(a_4, 0)) {
                if (l_4D) {
                    GRAPHICS::DRAW_DEBUG_LINE_WITH_TWO_COLOURS(a_1, ENTITY::GET_ENTITY_COORDS(a_4, 1), 255, 0, 0, 255, 0, 0, 255, 255);
                }
                a_5 = GAMEPLAY::GET_GAME_TIMER();
                return 1;
            }
        }
        return 0;
    }
    return 0;
}

auto<3> sub_c39a(auto a_0, auto a_1) {
    if (a_1 == 7) {
        v_4 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 7);
        a_1 = v_4;
    }
    if (a_1 == 0) {
        return ENTITY::GET_ENTITY_COORDS(a_0, 1);
    } else if (a_1 == 1) {
        return PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 0.0, 0.0);
    } else if (a_1 == 2) {
        return PED::GET_PED_BONE_COORDS(a_0, 39317, 0.0, 0.0, 0.0);
    } else if (a_1 == 3) {
        return PED::GET_PED_BONE_COORDS(a_0, 18905, 0.0, 0.0, 0.0);
    } else if (a_1 == 4) {
        return PED::GET_PED_BONE_COORDS(a_0, 57005, 0.0, 0.0, 0.0);
    } else if (a_1 == 5) {
        return PED::GET_PED_BONE_COORDS(a_0, 63931, 0.0, 0.0, 0.0);
    } else if (a_1 == 6) {
        return PED::GET_PED_BONE_COORDS(a_0, 36864, 0.0, 0.0, 0.0);
    }
    return ENTITY::GET_ENTITY_COORDS(a_0, 1);
}

auto sub_c45f() {
    for (v_2 = 0; v_2 < l_24; v_2 += 1) {
        if (((l_24[v_2/*4*/] == 0) && (l_24[v_2/*4*/]._f1 == 0)) && (l_24[v_2/*4*/]._f2 == 0)) {
            return v_2;
        }
    }
    return -1;
}

auto sub_c4a9(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6/*{3}*/ = sub_c55b(ENTITY::GET_ENTITY_COORDS(a_1, 1) - ENTITY::GET_ENTITY_COORDS(a_0, 1));
    if ((a_2 < 0.1) || (a_2 > 360.0)) {
        return 1;
    }
    if (a_3 == 0) {
        v_9/*{3}*/ = ENTITY::GET_ENTITY_FORWARD_VECTOR(a_0);
    } else { 
        v_9/*{3}*/ = sub_c55b(PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 5.0, 0.0) - PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 0.0, 0.0));
    }
    v_C = sub_c53a(v_9, v_6);
    if (v_C <= SYSTEM::COS(a_2 / 2.0)) {
        return 0;
    }
    return 1;
}

auto sub_c53a(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    return ((a_0 * a_3) + (a_0._f1 * a_3._f1)) + (a_0._f2 * a_3._f2);
}

auto<3> sub_c55b(auto a_0, auto a_1, auto a_2) {
    v_5 = SYSTEM::VMAG(a_0);
    if (v_5 != 0.0) {
        v_6 = 1.0 / v_5;
        a_0 *= (vector)v_6;
    } else { 
        a_0 = 0.0;
        a_0._f1 = 0.0;
        a_0._f2 = 0.0;
    }
    return a_0;
}

void sub_c59a(auto a_0) {
    a_0 = 0;
    a_0._f1 = 0;
    a_0._f2 = 0;
    a_0._f3 = 0;
}

auto sub_c5b5(auto a_0, auto a_1) {
    for (v_4 = 0; v_4 < l_24; v_4 += 1) {
        if ((l_24[v_4/*4*/]._f1 == a_0) && (l_24[v_4/*4*/]._f2 == a_1)) {
            return v_4;
        }
    }
    return -1;
}

auto sub_c5f4(auto a_0) {
    if (PLAYER::IS_PLAYER_FREE_AIMING_AT_ENTITY(PLAYER::PLAYER_ID(), a_0) && WEAPON::IS_PED_ARMED(PLAYER::PLAYER_PED_ID(), 6)) {
        return 1;
    }
    return 0;
}

auto sub_c61c(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    v_7 = 8.0;
    v_8 = 15.0;
    if (a_1 == 0) {
        v_7 = 1.86;
        v_8 = 1.86;
    }
    if (a_2) {
        v_7 = 2.0;
    }
    if (sub_8a69(PLAYER::PLAYER_PED_ID()) && sub_8a69(a_0)) {
        WEAPON::GET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), &v_9, 1);
        if (v_9 == ${weapon_petrolcan}) {
            v_7 = 3.0;
            v_8 = 3.0;
        }
        if (!a_2) {
            if (sub_c946(a_0, a_1, v_7, v_8)) {
                return 1;
            }
            if (sub_c717(a_0, v_8, a_3, a_4)) {
                return 1;
            }
        } else { 
            if (WEAPON::_65F0C5AE05943EC7(PLAYER::PLAYER_PED_ID())) {
                if (PED::IS_PED_SHOOTING(PLAYER::PLAYER_PED_ID())) {
                    if (GAMEPLAY::IS_BULLET_IN_AREA(ENTITY::GET_ENTITY_COORDS(a_0, 1), v_7, 1)) {
                        return 1;
                    }
                }
            } else { 
                if (a_1) {
                    v_7 = 1.86;
                    v_8 = 1.86;
                }
                if (sub_c946(a_0, a_1, v_7, v_8)) {
                    return 1;
                }
            }
            if (sub_c717(a_0, v_8, a_3, a_4)) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_c717(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6/*{3}*/ = ENTITY::GET_ENTITY_COORDS(a_0, 1);
    v_9/*{3}*/ = v_6;
    v_6 -= a_1;
    v_6._f1 -= a_1;
    v_6._f2 -= a_1;
    v_9 += a_1;
    v_9._f1 += a_1;
    v_9._f2 += a_1;
    if (a_2) {
        if (((GAMEPLAY::_34318593248C8FB2(ENTITY::GET_ENTITY_COORDS(a_0, 1), ${weapon_grenade}, a_1, 1) || GAMEPLAY::_34318593248C8FB2(ENTITY::GET_ENTITY_COORDS(a_0, 1), ${weapon_molotov}, a_1, 1)) || GAMEPLAY::_34318593248C8FB2(ENTITY::GET_ENTITY_COORDS(a_0, 1), ${weapon_smokegrenade}, a_1, 1)) || GAMEPLAY::_34318593248C8FB2(ENTITY::GET_ENTITY_COORDS(a_0, 1), ${weapon_stickybomb}, 5.0, 1)) {
            if (a_3) {
                if (sub_c823(a_0, a_1)) {
                    return 1;
                } else { 
                    return 0;
                }
            }
            return 1;
        }
    } else { 
        if (a_3) {
            if (sub_c823(a_0, a_1)) {
                return 1;
            } else { 
                return 0;
            }
        }
        if (GAMEPLAY::IS_PROJECTILE_IN_AREA(v_6, v_9, 1)) {
            return 1;
        }
    }
    return 0;
}

auto sub_c823(auto a_0, auto a_1) {
    if ((((GAMEPLAY::_82FDE6A57EE4EE44(a_0, ${weapon_grenade}, a_1, &v_5, &v_4, 0) || GAMEPLAY::_82FDE6A57EE4EE44(a_0, ${weapon_smokegrenade}, a_1, &v_5, &v_4, 0)) || GAMEPLAY::_82FDE6A57EE4EE44(a_0, ${weapon_bzgas}, a_1, &v_5, &v_4, 0)) || GAMEPLAY::_82FDE6A57EE4EE44(a_0, ${weapon_stickybomb}, a_1, &v_5, &v_4, 0)) || GAMEPLAY::_82FDE6A57EE4EE44(a_0, ${weapon_molotov}, a_1, &v_5, &v_4, 0)) {
        if (sub_c8b8(a_0, v_5, 90.0, 0)) {
            return 1;
        }
    }
    return 0;
}

auto sub_c8b8(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    v_8/*{3}*/ = sub_c55b(a_1 - ENTITY::GET_ENTITY_COORDS(a_0, 1));
    if ((a_4 < 0.1) || (a_4 > 360.0)) {
        return 1;
    }
    if (a_5 == 0) {
        v_B/*{3}*/ = ENTITY::GET_ENTITY_FORWARD_VECTOR(a_0);
    } else { 
        v_B/*{3}*/ = sub_c55b(PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 5.0, 0.0) - PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 0.0, 0.0));
    }
    v_E = sub_c53a(v_B, v_8);
    if (v_E <= SYSTEM::COS(a_4 / 2.0)) {
        return 0;
    }
    return 1;
}

auto sub_c946(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_1) {
        if (PED::IS_PED_SHOOTING(PLAYER::PLAYER_PED_ID())) {
            if (ENTITY::IS_ENTITY_AT_ENTITY(PLAYER::PLAYER_PED_ID(), a_0, a_3, a_3, a_3, 0, 1, 0)) {
                return 1;
            }
        }
    }
    if (GAMEPLAY::IS_BULLET_IN_AREA(ENTITY::GET_ENTITY_COORDS(a_0, 1), a_2, 1)) {
        return 1;
    }
    return 0;
}

auto sub_c98e(auto a_0) {
    if ((((((a_0 == 2) || (a_0 == 3)) || (a_0 == 34)) || (a_0 == 11)) || (a_0 == 52)) || (a_0 == 53)) {
        return 0;
    }
    return 1;
}

void sub_c9d8(auto a_0) {
    if (sub_8a69(PLAYER::PLAYER_PED_ID()) && sub_8a69(a_0)) {
        STREAMING::REQUEST_ANIM_DICT("rcmextreme3");
        while (!STREAMING::HAS_ANIM_DICT_LOADED("rcmextreme3")) {
            SYSTEM::WAIT(0);
        }
        AI::OPEN_SEQUENCE_TASK(&v_3);
        AI::TASK_PLAY_ANIM(0, "rcmextreme3", "jump_fall", 1000.0, -8.0, -1, 8, 0, 0, 0, 0);
        AI::TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(0, 1);
        AI::TASK_PARACHUTE_TO_TARGET(0, 64.6, 737.8, 44.2);
        AI::TASK_SMART_FLEE_PED(0, PLAYER::PLAYER_PED_ID(), 10000.0, -1, 0, 0);
        AI::CLOSE_SEQUENCE_TASK(v_3);
        AI::TASK_PERFORM_SEQUENCE(a_0, v_3);
        AI::CLEAR_SEQUENCE_TASK(&v_3);
    }
}

auto sub_ca75(auto a_0) {
    if (a_0 == -1) {
        a_0 = sub_982d();
    }
    if (a_0 == -1) {
        return 1;
    }
    if (sub_cc01(a_0)) {
        return 0;
    }
    if (!sub_9619(4)) {
        if (sub_cb8f(a_0)) {
        } else { 
            return 1;
        }
    }
    if (sub_cb69() && (!sub_cb4c())) {
        return 1;
    }
    if (!sub_cb0d(a_0)) {
        if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
            if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) != 0) {
                return 1;
            }
        }
    }
    if (!GAMEPLAY::IS_BIT_SET(g_17C49._f41BC[a_0/*6*/], 2)) {
        return 1;
    }
    return 0;
}

auto sub_cb0d(auto a_0) {
    if (((((a_0 == 5) || (a_0 == 6)) || (a_0 == 41)) || (a_0 == 60)) || (a_0 == 61)) {
        return 1;
    }
    return 0;
}

auto sub_cb4c() {
    if (GAMEPLAY::IS_PC_VERSION()) {
        if (GAMEPLAY::_D10282B6E3751BA0() == 1.0) {
            return 1;
        }
    }
    return 0;
}

auto sub_cb69() {
    if (g_154F9 != -1) {
        return GAMEPLAY::IS_BIT_SET(g_13D03[g_154F9/*34*/]._fF, 20);
    }
    return 0;
}

auto sub_cb8f(auto a_0) {
    if ((sub_cbc3() && (g_15F6A._fB == 6)) && (a_0 == sub_983e(&g_15F6A._f3, 0))) {
        return 1;
    }
    return 0;
}

auto sub_cbc3() {
    if ((((g_15F6A == 13) || (g_15F6A == 10)) || (g_15F6A == 11)) || (g_15F6A == 12)) {
        return 0;
    }
    return 1;
}

auto sub_cc01(auto a_0) {
    if (sub_6b9b(0)) {
        if (g_10B8B._f1 == 7) {
            if (g_10B8B == a_0) {
                return 1;
            }
        }
    }
    return 0;
}

void sub_cc29() {
    l_61 = GAMEPLAY::GET_GAME_TIMER();
}

void sub_cc37() {
    l_5F = $67D02A194A2FC2BD("digiscanner");
    while (!GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(l_5F)) {
        SYSTEM::WAIT(0);
    }
    if (!UI::IS_NAMED_RENDERTARGET_REGISTERED("digiscanner")) {
        UI::REGISTER_NAMED_RENDERTARGET("digiscanner", 0);
    }
    UI::LINK_NAMED_RENDERTARGET(WEAPON::GET_WEAPONTYPE_MODEL(${weapon_digiscanner}));
    if (UI::IS_NAMED_RENDERTARGET_REGISTERED("digiscanner")) {
        l_60 = UI::GET_NAMED_RENDERTARGET_RENDER_ID("digiscanner");
    }
    l_62 = AUDIO::GET_SOUND_ID();
    l_61 = GAMEPLAY::GET_GAME_TIMER();
}

auto sub_cc9f(auto a_0) {
    switch (a_0) {
    case 44:
        if (!sub_d150(a_0)) {
            return 0;
        }
        break;
    case 45:
        if (!sub_cce6(a_0)) {
            return 0;
        }
        break;
    }
    sub_dc91("Created initial scene");
    return 1;
}

auto sub_cce6(auto a_0) {
    asm .vardef<F> 3, "[{\"offset\":0,\"value\":2}]"
    v_3[0/*1*/] = l_5B;
    v_3[1/*1*/] = ${dune2};
    switch (l_5A) {
    case 0:
        a_0._f10 = 5;
        a_0._f11[0/*3*/]/*{3}*/ = {2337.376220703125, 2585.721923828125, 45.110652923583984 };
        a_0._f11[1/*3*/]/*{3}*/ = {2302.157958984375, 2586.50537109375, 48 };
        a_0._f18 = 26.0;
        a_0._f1B = 0;
        a_0._f9/*"24"*/ = "SCRAP_2_RCM";
        a_0._f19 = 1;
        for (v_6 = 0; v_6 <= (v_3 - 1); v_6 += 1) {
            STREAMING::REQUEST_MODEL(v_3[v_6/*1*/]);
        }
        sub_d114(&a_0._f30, "rcmrc_omega_2", "omega_idle_looking_around", 0);
        l_5A = 1;
        break;
    case 1:
        if ((!sub_d0e3(&v_3)) || (!sub_d0b9(&a_0._f30))) {
            return 0;
        }
        l_5A = 2;
        break;
    case 2:
        v_7 = 1;
        if (!ENTITY::DOES_ENTITY_EXIST(a_0._f1C[0/*1*/])) {
            if (!sub_cf8a(&a_0._f1C[0/*1*/], 69, 2319.443115234375, 2583.588134765625, 46.7663, 220.0, "OMEGA LAUNCHER RC", 1)) {
                v_7 = 0;
            }
        }
        if (!ENTITY::DOES_ENTITY_EXIST(a_0._f23[0/*1*/])) {
            sub_ceb3(&a_0._f23[0/*1*/], v_3[1/*1*/], 2331.08, 2573.53, 46.13, 358.6099853515625);
        }
        if (v_7) {
            l_5A = 3;
        }
        break;
    case 3:
        VEHICLE::SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA(2314.5458984375, 2576.32958984375, 44.7, 2326.4462890625, 2579.608154296875, 47.66450119018555, 0, 1);
        GAMEPLAY::CLEAR_AREA_OF_VEHICLES(2321.252197265625, 2578.851318359375, 46.7, 10.0, 0, 0, 0, 0, 0);
        for (v_6 = 0; v_6 <= (v_3 - 1); v_6 += 1) {
            STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_3[v_6/*1*/]);
        }
        return 1;
        break;
    }
    return 0;
}

void sub_ceb3(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    sub_ceee(a_0);
    a_0 = VEHICLE::CREATE_VEHICLE(a_1, a_2, a_5, 1, 1);
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(a_0);
        ENTITY::SET_ENTITY_HEALTH(a_0, 1000);
    }
}

void sub_ceee(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(a_0)) {
            ENTITY::SET_ENTITY_AS_MISSION_ENTITY(a_0, 1, 0);
        }
        if (sub_a230(a_0)) {
            if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(a_0) && ENTITY::_DDE6DF5AE89981D2(a_0, 1)) {
                if (sub_8a69(PLAYER::PLAYER_PED_ID())) {
                    if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), a_0, 0)) {
                        ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(a_0);
                        return ;
                    }
                }
                VEHICLE::DELETE_VEHICLE(a_0);
            }
        } else { 
            if (sub_8a69(PLAYER::PLAYER_PED_ID())) {
                if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), a_0, 0)) {
                    ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(a_0);
                    return ;
                }
            }
            VEHICLE::DELETE_VEHICLE(a_0);
        }
    }
}

auto sub_cf8a(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    if (sub_cfe5(a_0, a_1, a_2, a_5, 1)) {
        if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
            if (!ENTITY::IS_ENTITY_DEAD(a_0)) {
                PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(a_0, 1);
                PED::SET_PED_MONEY(a_0, 0);
                if (a_7 == 1) {
                    PED::SET_PED_CAN_BE_TARGETTED(a_0, 0);
                }
            }
            PED::SET_PED_NAME_DEBUG(a_0, a_6);
        }
        return 1;
    }
    return 0;
}

auto sub_cfe5(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    if (!sub_2e21(a_1)) {
        v_9 = sub_dcf0(a_1);
        STREAMING::REQUEST_MODEL(v_9);
        if (STREAMING::HAS_MODEL_LOADED(v_9)) {
            if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
                PED::DELETE_PED(a_0);
            }
            a_0 = PED::CREATE_PED(26, v_9, a_2, a_5, 0, 0);
            PED::SET_PED_DEFAULT_COMPONENT_VARIATION(a_0);
            if (v_9 == ${ig_lamardavis}) {
                if (PED::GET_PED_DRAWABLE_VARIATION(a_0, 3) == 0) {
                    PED::SET_PED_COMPONENT_VARIATION(a_0, 5, 2, 0, 0);
                }
            }
            sub_d073(a_0, a_1);
            if (a_6) {
                STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_9);
            }
            return 1;
        }
    }
    return 0;
}

auto sub_d073(auto a_0, auto a_1) {
    v_4 = 7;
    if (a_1 == 19) {
        v_4 = 3;
    } else if (a_1 == 14) {
        v_4 = 4;
    } else if (a_1 == 17) {
        v_4 = 5;
    } else { 
        v_4 = 7;
        return 0;
    }
    g_150B9[v_4 - 3/*1*/] = a_0;
    return 1;
}

auto sub_d0b9(auto a_0) {
    if (sub_b86c(a_0)) {
        STREAMING::REQUEST_ANIM_DICT(a_0);
        if (STREAMING::HAS_ANIM_DICT_LOADED(a_0)) {
            return 1;
        }
    } else { }
    return 0;
}

auto sub_d0e3(auto a_0) {
    for (v_3 = 0; v_3 <= (a_0 - 1); v_3 += 1) {
        if (!STREAMING::HAS_MODEL_LOADED(a_0[v_3/*1*/])) {
            return 0;
        }
    }
    return 1;
}

void sub_d114(auto a_0, auto a_1, auto a_2, auto a_3) {
    a_0 = a_1;
    a_0._f1 = a_2;
    a_0._f2 = a_3;
    STREAMING::REQUEST_ANIM_DICT(a_0);
    a_0._f5/*{3}*/ = {0.0, 0.0, 0.0 };
    a_0._f8/*{3}*/ = {0.0, 0.0, 0.0 };
    a_0._f3 = 1;
    a_0._f4 = 0;
}

auto sub_d150(auto a_0) {
    asm .vardef<F> 3, "[{\"offset\":0,\"value\":3}]"
    v_3[0/*1*/] = l_5B;
    v_3[1/*1*/] = WEAPON::GET_WEAPONTYPE_MODEL(${weapon_digiscanner});
    v_3[2/*1*/] = ${prop_cs_walkie_talkie};
    switch (l_5A) {
    case 0:
        a_0._f10 = 5;
        a_0._f11[0/*3*/]/*{3}*/ = {2463.224609375, 3444.113037109375, 48.593990325927734 };
        a_0._f11[1/*3*/]/*{3}*/ = {2475.22021484375, 3428.09765625, 50.99094772338867 };
        a_0._f18 = 17.0;
        a_0._f1B = 0;
        a_0._f9/*"24"*/ = "SCRAP_1_RCM";
        a_0._f19 = 1;
        for (v_7 = 0; v_7 <= (v_3 - 1); v_7 += 1) {
            STREAMING::REQUEST_MODEL(v_3[v_7/*1*/]);
        }
        sub_d114(&a_0._f30, "rcmrc_omega_1", "omega_idle_geiger_counter", 0);
        l_5A = 1;
        break;
    case 1:
        if ((!sub_d0e3(&v_3)) || (!sub_d0b9(&a_0._f30))) {
            return 0;
        }
        l_5A = 2;
        break;
    case 2:
        v_8 = 1;
        if (!ENTITY::DOES_ENTITY_EXIST(a_0._f1C[0/*1*/])) {
            if (!sub_cf8a(&a_0._f1C[0/*1*/], 69, 2468.51, 3437.389892578125, 49.9, 180.0, "OMEGA LAUNCHER RC", 1)) {
                v_8 = 0;
            }
        }
        if (!ENTITY::DOES_ENTITY_EXIST(a_0._f29[0/*1*/])) {
            a_0._f29[0/*1*/] = OBJECT::CREATE_OBJECT(v_3[1/*1*/], 2468.51, 3437.389892578125, 55.0, 1, 1, 0);
        }
        if (!ENTITY::DOES_ENTITY_EXIST(a_0._f29[1/*1*/])) {
            a_0._f29[1/*1*/] = OBJECT::CREATE_OBJECT(v_3[2/*1*/], 2468.51, 3437.389892578125, 57.0, 1, 1, 0);
        }
        if ((sub_8a69(a_0._f1C[0/*1*/]) && ENTITY::DOES_ENTITY_EXIST(a_0._f29[0/*1*/])) && ENTITY::DOES_ENTITY_EXIST(a_0._f29[1/*1*/])) {
            ENTITY::ATTACH_ENTITY_TO_ENTITY(a_0._f29[0/*1*/], a_0._f1C[0/*1*/], PED::GET_PED_BONE_INDEX(a_0._f1C[0/*1*/], 18905), 0.09, 0.072, -0.006, 298.0, 194.0, 178.0, 0, 0, 0, 0, 2, 1);
            ENTITY::ATTACH_ENTITY_TO_ENTITY(a_0._f29[1/*1*/], a_0._f1C[0/*1*/], PED::GET_PED_BONE_INDEX(a_0._f1C[0/*1*/], 64729), 0.1, 0.08, 0.0, 162.72, 5.4, 1.8, 0, 0, 0, 0, 2, 1);
        } else { 
            v_8 = 0;
        }
        if (v_8) {
            l_5A = 3;
        }
        break;
    case 3:
        for (v_7 = 0; v_7 <= (v_3 - 1); v_7 += 1) {
            STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_3[v_7/*1*/]);
        }
        return 1;
        break;
    }
    return 0;
}

auto sub_d3d2(auto a_0) {
    sub_7013(a_0, &v_3);
    v_23 = sub_6ae7();
    if (v_23 == 145) {
        return 1;
    } else if (((v_23 != 1) && (v_23 != 0)) && (v_23 != 2)) {
        return 1;
    }
    if (!GAMEPLAY::IS_BIT_SET(v_3._f1A, v_23)) {
        return 1;
    }
    return 0;
}

auto sub_d426(auto a_0) {
    if (g_10A95) {
        sub_dc91("STEP_3_COMMON_CanRCLaunch - Script denied. Multiplayer is running [TERMINATING]");
        return 0;
    }
    if (!sub_d4bd(a_0)) {
        g_178B8[a_0/*10*/]._f1 = 1;
        sub_dc91("STEP_3_COMMON_CanRCLaunch - Script denied by RC Controller [TERMINATING]");
        return 0;
    }
    if (g_15F6A._fB == 6) {
        if (g_15F6A < 9) {
            sub_7013(a_0, &v_3);
            if (GAMEPLAY::ARE_STRINGS_EQUAL(&g_15F6A._f3, v_3)) {
                sub_dc91("STEP_3_COMMON_CanRCLaunch - Script denied as a replay for this RC is being configured. [TERMINATING]");
                return 0;
            }
        }
    }
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${candidate_controller}) == 0) {
        g_178B8[a_0/*10*/]._f1 = 1;
        sub_dc91("STEP_3_COMMON_CanRCLaunch - Script denied as candidate_controller is not running. [TERMINATING]");
        return 0;
    }
    return 1;
}

auto sub_d4bd(auto a_0) {
    sub_7013(a_0, &v_3);
    if (!sub_9619(4)) {
        if (sub_cb8f(a_0)) {
        } else { 
            return 0;
        }
    }
    if (sub_cb69() && (!sub_cb4c())) {
        return 0;
    }
    if (sub_d76f(a_0)) {
        return 0;
    }
    if (a_0 == -1) {
        a_0 = sub_982d();
    }
    if (a_0 == -1) {
        return 0;
    }
    if (!sub_cc01(a_0)) {
        if (!sub_d741(a_0)) {
            return 0;
        }
        if (!sub_d713(a_0)) {
            return 0;
        }
        if (sub_d6e5(a_0)) {
            return 0;
        }
    }
    if (a_0 == 58) {
        if (sub_d57e(5)) {
            g_178B8[a_0/*10*/]._f3 = 0;
        }
    }
    if (g_178B8[a_0/*10*/]._f3 == 1) {
        return 0;
    }
    return 1;
}

auto sub_d57e(auto a_0) {
    if (g_15F9E._f120 == 0) {
        return 0;
    }
    if (a_0 == 10) {
        for (v_3 = 0; v_3 < 10; v_3 += 1) {
            if (sub_d57e(v_3)) {
                return 1;
            }
        }
    } else if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        sub_d603(a_0, &v_4);
        v_C = INTERIOR::_05B7A89BD78797FC(g_14D9D[a_0/*10*/]._f3, &v_4);
        if ((v_C != 0) && (g_15F9E._f120 == v_C)) {
            return 1;
        }
    }
    return 0;
}

auto sub_d603(auto a_0, auto a_1) {
    a_1/*"32"*/ = "";
    switch (a_0) {
    case 0:
        a_1/*"32"*/ = "v_michael";
        break;
    case 5:
        a_1/*"32"*/ = "v_franklins";
        break;
    case 6:
        a_1/*"32"*/ = "v_franklinshouse";
        break;
    case 1:
    case 2:
        if (STREAMING::IS_IPL_ACTIVE("TrevorsTrailer")) {
            a_1/*"32"*/ = "v_trailer";
        } else if (STREAMING::IS_IPL_ACTIVE("TrevorsTrailerTidy")) {
            a_1/*"32"*/ = "V_TrailerTIDY";
        } else if (STREAMING::IS_IPL_ACTIVE("TrevorsTrailerTrash")) {
            a_1/*"32"*/ = "V_TrailerTRASH";
        }
        break;
    case 3:
        a_1/*"32"*/ = "v_trevors";
        break;
    case 4:
        a_1/*"32"*/ = "v_strip3";
        break;
    case 7:
    case 8:
    case 9:
        a_1/*"32"*/ = "v_psycheoffice";
        break;
    }
    return !GAMEPLAY::ARE_STRINGS_EQUAL(a_1, "");
}

auto sub_d6e5(auto a_0) {
    if ((a_0 == 63) || (a_0 == -1)) {
        return 0;
    }
    return GAMEPLAY::IS_BIT_SET(g_17C49._f41BC[a_0/*6*/], 3);
}

auto sub_d713(auto a_0) {
    if ((a_0 == 63) || (a_0 == -1)) {
        return 0;
    }
    return GAMEPLAY::IS_BIT_SET(g_17C49._f41BC[a_0/*6*/], 2);
}

auto sub_d741(auto a_0) {
    if ((a_0 == 63) || (a_0 == -1)) {
        return 0;
    }
    return GAMEPLAY::IS_BIT_SET(g_17C49._f41BC[a_0/*6*/], 0);
}

auto sub_d76f(auto a_0) {
    if (sub_cb0d(a_0)) {
        return 0;
    } else if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) != 0) {
            return 1;
        }
    }
    return 0;
}

void sub_d7a4() {
    sub_dc91("Running end routines.");
    g_17B2F -= 1;
}

auto sub_d7be(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (a_0 == 1) {
        if (sub_d823(a_0[0/*1*/], a_2, a_5, a_1)) {
            return 1;
        }
    } else { 
        for (v_8 = 0; v_8 < a_0; v_8 += 1) {
            if (sub_d823(a_0[v_8/*1*/], a_2, a_5, a_1)) {
                v_8 = a_0;
                return 1;
            }
        }
    }
    sub_dc91("DETERMINE_RC_TO_LAUNCH - Unable to find mission to launch [TERMINATING]");
    return 0;
}

auto sub_d823(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    v_8 = 0;
    sub_7013(a_0, &v_9);
    if (sub_d8a0(v_9._f6, a_1, a_4)) {
        if (GAMEPLAY::IS_BIT_SET(g_17C49._f41BC[a_0/*6*/], 0)) {
            if (!GAMEPLAY::IS_BIT_SET(g_17C49._f41BC[a_0/*6*/], 3)) {
                v_8 = 1;
            } else { }
        } else { }
        if (sub_cc01(a_0)) {
            v_8 = 1;
        }
    } else { }
    if (v_8 == 1) {
        a_5 = a_0;
        a_5._f1/*"32"*/ = v_9;
        return 1;
    }
    return 0;
}

auto sub_d8a0(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    if (a_6 < 0.0) {
        a_6 = 0.0;
    }
    if (GAMEPLAY::ABSF(a_0 - a_3) <= a_6) {
        if (GAMEPLAY::ABSF(a_0._f1 - a_3._f1) <= a_6) {
            if (GAMEPLAY::ABSF(a_0._f2 - a_3._f2) <= a_6) {
                return 1;
            }
        }
    }
    return 0;
}

void sub_d8ec(auto a_0, auto a_1) {
    if (a_0 == 45) {
        VEHICLE::SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA(2314.5458984375, 2576.32958984375, 44.7, 2326.4462890625, 2579.608154296875, 47.66450119018555, 1, 1);
    }
    if (a_1) {
        sub_dc91("SCRIPT TERMINATING: Cleaning up entities in Launcher");
        if ((a_0 == 44) && ENTITY::DOES_ENTITY_EXIST(a_0._f29[1/*1*/])) {
            ENTITY::SET_OBJECT_AS_NO_LONGER_NEEDED(&a_0._f29[1/*1*/]);
        }
        sub_da42(a_0, 0, 0, 0);
    }
    sub_da0c(&a_0._f30);
    if (l_5C != -1) {
        sub_dc91("SCRIPT TERMINATING: Ending off-mission cutscene request");
        sub_b15c(&l_5C);
    }
    switch (a_0) {
    case 44:
        v_4 = "SCRAP_1_AMB";
        break;
    case 45:
        v_4 = "SCRAP_2_AMB";
        break;
    }
    sub_d9bc(v_4);
    if (a_1) {
        sub_b244(a_0);
    }
    sub_d7a4();
    sub_dc91("SCRIPT TERMINATED");
    SCRIPT::TERMINATE_THIS_THREAD();
}

void sub_d9bc(auto a_0) {
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_0)) {
        if (sub_ad8c(a_0)) {
            sub_d9db();
        }
    }
}

void sub_d9db() {
    g_38DE = 0;
    sub_d9eb();
}

void sub_d9eb() {
    AUDIO::RESTART_SCRIPTED_CONVERSATION();
    g_413F = 0;
    if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(0);
        g_3D4C = 6;
    }
}

auto sub_da0c(auto a_0) {
    if (sub_b86c(a_0)) {
        if (STREAMING::HAS_ANIM_DICT_LOADED(a_0)) {
            STREAMING::REMOVE_ANIM_DICT(a_0);
            a_0 = "";
            a_0._f1 = "";
            return 1;
        }
    }
    return 0;
}

void sub_da42(auto a_0, auto a_1, auto a_2, auto a_3) {
    sub_db73(a_0, a_1);
    sub_daed(a_0, a_2);
    sub_da62(a_0, a_3);
}

void sub_da62(auto a_0, auto a_1) {
    sub_da74(&a_0._f29, a_1);
}

void sub_da74(auto a_0, auto a_1) {
    v_4 = 0;
    for (v_4 = 0; v_4 <= (a_0 - 1); v_4 += 1) {
        if (a_1) {
            sub_bb95(&a_0[v_4/*1*/]);
        } else { 
            sub_dab2(&a_0[v_4/*1*/], 0);
        }
    }
}

void sub_dab2(auto a_0, auto a_1) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (ENTITY::IS_ENTITY_ATTACHED_TO_ANY_PED(a_0)) {
            ENTITY::DETACH_ENTITY(a_0, 1, 1);
        }
        if (!a_1) {
            ENTITY::SET_OBJECT_AS_NO_LONGER_NEEDED(a_0);
        } else { 
            OBJECT::_MARK_OBJECT_FOR_DELETION(a_0);
        }
    }
}

void sub_daed(auto a_0, auto a_1) {
    sub_daff(&a_0._f23, a_1);
}

void sub_daff(auto a_0, auto a_1) {
    v_4 = 0;
    for (v_4 = 0; v_4 <= (a_0 - 1); v_4 += 1) {
        if (a_1) {
            sub_ceee(&a_0[v_4/*1*/]);
        } else { 
            sub_db3c(&a_0[v_4/*1*/]);
        }
    }
}

void sub_db3c(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        ENTITY::IS_ENTITY_DEAD(a_0);
        if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(a_0) && ENTITY::_DDE6DF5AE89981D2(a_0, 1)) {
            ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(a_0);
        }
    }
}

void sub_db73(auto a_0, auto a_1) {
    sub_db85(&a_0._f1C, a_1);
}

void sub_db85(auto a_0, auto a_1) {
    v_4 = 0;
    for (v_4 = 0; v_4 <= (a_0 - 1); v_4 += 1) {
        if (a_1 == 1) {
            sub_dc15(&a_0[v_4/*1*/]);
        } else { 
            sub_dbc6(&a_0[v_4/*1*/], 0, 1, 0);
        }
    }
}

void sub_dbc6(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!PED::IS_PED_INJURED(a_0)) {
            ENTITY::SET_ENTITY_LOAD_COLLISION_FLAG(a_0, 0);
            if (a_3 == 0) {
                AI::CLEAR_PED_SECONDARY_TASK(a_0);
            }
            PED::SET_PED_KEEP_TASK(a_0, a_1);
            if (a_2 == 1) {
                PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(a_0, 0);
            }
        }
        ENTITY::SET_PED_AS_NO_LONGER_NEEDED(a_0);
    }
}

void sub_dc15(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!ENTITY::IS_ENTITY_DEAD(a_0)) {
            ENTITY::SET_ENTITY_LOAD_COLLISION_FLAG(a_0, 0);
        }
        if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(a_0)) {
            ENTITY::SET_ENTITY_AS_MISSION_ENTITY(a_0, 1, 0);
        }
        PED::DELETE_PED(a_0);
    }
}

void sub_dc54(auto a_0) {
    if (a_0 == -1) {
        return ;
    }
    if (!(a_0 == g_883B)) {
        a_0 = -1;
        return ;
    }
    a_0 = -1;
    g_883A = 0;
    g_883C = 0;
    g_8861 = 15;
    g_D5DB = 0;
    g_D5DC = 0;
}

void sub_dc91(auto a_0) {
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_0)) {}
}

void sub_dca3(auto a_0) {
    a_0 = -1;
    a_0._f1/*"32"*/ = "";
    a_0._fF = 12.0;
    a_0._f10 = 6;
    a_0._f19 = 0;
    a_0._f1A = 0;
    a_0._f1B = 0;
}

void sub_dcd6() {
    sub_dc91("Running start routines.");
    g_17B2F += 1;
}

auto sub_dcf0(auto a_0) {
    if (!sub_2e21(a_0)) {
        return g_17C49._f744E[a_0/*29*/];
    } else if (a_0 != 145) {}
    return 0;
}